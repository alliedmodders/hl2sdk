// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_usermessages.proto

#ifndef PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED
#define PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
#include "netmessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

class CCSUsrMsg_VGUIMenu;
class CCSUsrMsg_VGUIMenu_Subkey;
class CCSUsrMsg_Geiger;
class CCSUsrMsg_Train;
class CCSUsrMsg_HudText;
class CCSUsrMsg_SayText;
class CCSUsrMsg_SayText2;
class CCSUsrMsg_TextMsg;
class CCSUsrMsg_HudMsg;
class CCSUsrMsg_Shake;
class CCSUsrMsg_Fade;
class CCSUsrMsg_Rumble;
class CCSUsrMsg_CloseCaption;
class CCSUsrMsg_CloseCaptionDirect;
class CCSUsrMsg_SendAudio;
class CCSUsrMsg_RawAudio;
class CCSUsrMsg_VoiceMask;
class CCSUsrMsg_VoiceMask_PlayerMask;
class CCSUsrMsg_Damage;
class CCSUsrMsg_RadioText;
class CCSUsrMsg_HintText;
class CCSUsrMsg_KeyHintText;
class CCSUsrMsg_ProcessSpottedEntityUpdate;
class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate;
class CEconItemPreviewDataBlock;
class CEconItemPreviewDataBlock_Sticker;
class CCSUsrMsg_SendPlayerItemDrops;
class CCSUsrMsg_SendPlayerItemFound;
class CCSUsrMsg_ReloadEffect;
class CCSUsrMsg_AdjustMoney;
class CCSUsrMsg_ReportHit;
class CCSUsrMsg_KillCam;
class CCSUsrMsg_DesiredTimescale;
class CCSUsrMsg_CurrentTimescale;
class CCSUsrMsg_AchievementEvent;
class CCSUsrMsg_MatchEndConditions;
class CCSUsrMsg_PlayerStatsUpdate;
class CCSUsrMsg_PlayerStatsUpdate_Stat;
class CCSUsrMsg_DisplayInventory;
class CCSUsrMsg_XRankGet;
class CCSUsrMsg_XRankUpd;
class CCSUsrMsg_CallVoteFailed;
class CCSUsrMsg_VoteStart;
class CCSUsrMsg_VotePass;
class CCSUsrMsg_VoteFailed;
class CCSUsrMsg_VoteSetup;
class CCSUsrMsg_SendLastKillerDamageToClient;
class CCSUsrMsg_ServerRankUpdate;
class CCSUsrMsg_ServerRankUpdate_RankUpdate;
class CCSUsrMsg_ItemPickup;
class CCSUsrMsg_ShowMenu;
class CCSUsrMsg_BarTime;
class CCSUsrMsg_AmmoDenied;
class CCSUsrMsg_MarkAchievement;
class CCSUsrMsg_MatchStatsUpdate;
class CCSUsrMsg_ItemDrop;
class CCSUsrMsg_GlowPropTurnOff;
class CCSUsrMsg_RoundBackupFilenames;
class XpProgressData;
class CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded;
class CCSUsrMsg_XpUpdate;
class CCSUsrMsg_QuestProgress;
class ScoreLeaderboardData;
class ScoreLeaderboardData_Entry;
class ScoreLeaderboardData_AccountEntries;
class CCSUsrMsg_ScoreLeaderboardData;
class PlayerDecalDigitalSignature;
class CCSUsrMsg_PlayerDecalDigitalSignature;
class CCSUsrMsg_WeaponSound;
class CCSUsrMsg_UpdateScreenHealthBar;
class CCSUsrMsg_EntityOutlineHighlight;
class CCSUsrMsg_SSUI;
class CCSUsrMsg_SurvivalStats;
class CCSUsrMsg_SurvivalStats_Fact;
class CCSUsrMsg_SurvivalStats_Placement;
class CCSUsrMsg_SurvivalStats_Damage;
class CCSUsrMsg_ResetHud;
class CCSUsrMsg_GameTitle;
class CCSUsrMsg_RequestState;
class CCSUsrMsg_StopSpectatorMode;
class CCSUsrMsg_DisconnectToLobby;
class CCSUsrMsg_WarmupHasEnded;
class CCSUsrMsg_ClientInfo;
class CCSUsrMsg_ServerRankRevealAll;

enum ECstrike15UserMessages {
  CS_UM_VGUIMenu = 1,
  CS_UM_Geiger = 2,
  CS_UM_Train = 3,
  CS_UM_HudText = 4,
  CS_UM_SayText = 5,
  CS_UM_SayText2 = 6,
  CS_UM_TextMsg = 7,
  CS_UM_HudMsg = 8,
  CS_UM_ResetHud = 9,
  CS_UM_GameTitle = 10,
  CS_UM_Shake = 12,
  CS_UM_Fade = 13,
  CS_UM_Rumble = 14,
  CS_UM_CloseCaption = 15,
  CS_UM_CloseCaptionDirect = 16,
  CS_UM_SendAudio = 17,
  CS_UM_RawAudio = 18,
  CS_UM_VoiceMask = 19,
  CS_UM_RequestState = 20,
  CS_UM_Damage = 21,
  CS_UM_RadioText = 22,
  CS_UM_HintText = 23,
  CS_UM_KeyHintText = 24,
  CS_UM_ProcessSpottedEntityUpdate = 25,
  CS_UM_ReloadEffect = 26,
  CS_UM_AdjustMoney = 27,
  CS_UM_UpdateTeamMoney = 28,
  CS_UM_StopSpectatorMode = 29,
  CS_UM_KillCam = 30,
  CS_UM_DesiredTimescale = 31,
  CS_UM_CurrentTimescale = 32,
  CS_UM_AchievementEvent = 33,
  CS_UM_MatchEndConditions = 34,
  CS_UM_DisconnectToLobby = 35,
  CS_UM_PlayerStatsUpdate = 36,
  CS_UM_DisplayInventory = 37,
  CS_UM_WarmupHasEnded = 38,
  CS_UM_ClientInfo = 39,
  CS_UM_XRankGet = 40,
  CS_UM_XRankUpd = 41,
  CS_UM_CallVoteFailed = 45,
  CS_UM_VoteStart = 46,
  CS_UM_VotePass = 47,
  CS_UM_VoteFailed = 48,
  CS_UM_VoteSetup = 49,
  CS_UM_ServerRankRevealAll = 50,
  CS_UM_SendLastKillerDamageToClient = 51,
  CS_UM_ServerRankUpdate = 52,
  CS_UM_ItemPickup = 53,
  CS_UM_ShowMenu = 54,
  CS_UM_BarTime = 55,
  CS_UM_AmmoDenied = 56,
  CS_UM_MarkAchievement = 57,
  CS_UM_MatchStatsUpdate = 58,
  CS_UM_ItemDrop = 59,
  CS_UM_GlowPropTurnOff = 60,
  CS_UM_SendPlayerItemDrops = 61,
  CS_UM_RoundBackupFilenames = 62,
  CS_UM_SendPlayerItemFound = 63,
  CS_UM_ReportHit = 64,
  CS_UM_XpUpdate = 65,
  CS_UM_QuestProgress = 66,
  CS_UM_ScoreLeaderboardData = 67,
  CS_UM_PlayerDecalDigitalSignature = 68,
  CS_UM_WeaponSound = 69,
  CS_UM_UpdateScreenHealthBar = 70,
  CS_UM_EntityOutlineHighlight = 71,
  CS_UM_SSUI = 72,
  CS_UM_SurvivalStats = 73,
  CS_UM_DisconnectToLobby2 = 74
};
bool ECstrike15UserMessages_IsValid(int value);
const ECstrike15UserMessages ECstrike15UserMessages_MIN = CS_UM_VGUIMenu;
const ECstrike15UserMessages ECstrike15UserMessages_MAX = CS_UM_DisconnectToLobby2;
const int ECstrike15UserMessages_ARRAYSIZE = ECstrike15UserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECstrike15UserMessages_descriptor();
inline const ::std::string& ECstrike15UserMessages_Name(ECstrike15UserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECstrike15UserMessages_descriptor(), value);
}
inline bool ECstrike15UserMessages_Parse(
    const ::std::string& name, ECstrike15UserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECstrike15UserMessages>(
    ECstrike15UserMessages_descriptor(), name, value);
}
enum ECSUsrMsg_DisconnectToLobby_Action {
  k_ECSUsrMsg_DisconnectToLobby_Action_Default = 0,
  k_ECSUsrMsg_DisconnectToLobby_Action_GoQueue = 1
};
bool ECSUsrMsg_DisconnectToLobby_Action_IsValid(int value);
const ECSUsrMsg_DisconnectToLobby_Action ECSUsrMsg_DisconnectToLobby_Action_MIN = k_ECSUsrMsg_DisconnectToLobby_Action_Default;
const ECSUsrMsg_DisconnectToLobby_Action ECSUsrMsg_DisconnectToLobby_Action_MAX = k_ECSUsrMsg_DisconnectToLobby_Action_GoQueue;
const int ECSUsrMsg_DisconnectToLobby_Action_ARRAYSIZE = ECSUsrMsg_DisconnectToLobby_Action_MAX + 1;

const ::google::protobuf::EnumDescriptor* ECSUsrMsg_DisconnectToLobby_Action_descriptor();
inline const ::std::string& ECSUsrMsg_DisconnectToLobby_Action_Name(ECSUsrMsg_DisconnectToLobby_Action value) {
  return ::google::protobuf::internal::NameOfEnum(
    ECSUsrMsg_DisconnectToLobby_Action_descriptor(), value);
}
inline bool ECSUsrMsg_DisconnectToLobby_Action_Parse(
    const ::std::string& name, ECSUsrMsg_DisconnectToLobby_Action* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ECSUsrMsg_DisconnectToLobby_Action>(
    ECSUsrMsg_DisconnectToLobby_Action_descriptor(), name, value);
}
// ===================================================================

class CCSUsrMsg_VGUIMenu_Subkey : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VGUIMenu_Subkey();
  virtual ~CCSUsrMsg_VGUIMenu_Subkey();

  CCSUsrMsg_VGUIMenu_Subkey(const CCSUsrMsg_VGUIMenu_Subkey& from);

  inline CCSUsrMsg_VGUIMenu_Subkey& operator=(const CCSUsrMsg_VGUIMenu_Subkey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu_Subkey& default_instance();

  void Swap(CCSUsrMsg_VGUIMenu_Subkey* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VGUIMenu_Subkey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu_Subkey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string str = 2;
  inline bool has_str() const;
  inline void clear_str();
  static const int kStrFieldNumber = 2;
  inline const ::std::string& str() const;
  inline void set_str(const ::std::string& value);
  inline void set_str(const char* value);
  inline void set_str(const char* value, size_t size);
  inline ::std::string* mutable_str();
  inline ::std::string* release_str();
  inline void set_allocated_str(::std::string* str);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu.Subkey)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_str();
  inline void clear_has_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VGUIMenu_Subkey* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VGUIMenu : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VGUIMenu();
  virtual ~CCSUsrMsg_VGUIMenu();

  CCSUsrMsg_VGUIMenu(const CCSUsrMsg_VGUIMenu& from);

  inline CCSUsrMsg_VGUIMenu& operator=(const CCSUsrMsg_VGUIMenu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VGUIMenu& default_instance();

  void Swap(CCSUsrMsg_VGUIMenu* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VGUIMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VGUIMenu& from);
  void MergeFrom(const CCSUsrMsg_VGUIMenu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VGUIMenu_Subkey Subkey;

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool show = 2;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 2;
  inline bool show() const;
  inline void set_show(bool value);

  // repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
  inline int subkeys_size() const;
  inline void clear_subkeys();
  static const int kSubkeysFieldNumber = 3;
  inline const ::CCSUsrMsg_VGUIMenu_Subkey& subkeys(int index) const;
  inline ::CCSUsrMsg_VGUIMenu_Subkey* mutable_subkeys(int index);
  inline ::CCSUsrMsg_VGUIMenu_Subkey* add_subkeys();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
      subkeys() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
      mutable_subkeys();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VGUIMenu)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_show();
  inline void clear_has_show();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey > subkeys_;
  bool show_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VGUIMenu* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Geiger : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Geiger();
  virtual ~CCSUsrMsg_Geiger();

  CCSUsrMsg_Geiger(const CCSUsrMsg_Geiger& from);

  inline CCSUsrMsg_Geiger& operator=(const CCSUsrMsg_Geiger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Geiger& default_instance();

  void Swap(CCSUsrMsg_Geiger* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Geiger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Geiger& from);
  void MergeFrom(const CCSUsrMsg_Geiger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 range = 1;
  inline bool has_range() const;
  inline void clear_range();
  static const int kRangeFieldNumber = 1;
  inline ::google::protobuf::int32 range() const;
  inline void set_range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Geiger)
 private:
  inline void set_has_range();
  inline void clear_has_range();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 range_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Geiger* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Train : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Train();
  virtual ~CCSUsrMsg_Train();

  CCSUsrMsg_Train(const CCSUsrMsg_Train& from);

  inline CCSUsrMsg_Train& operator=(const CCSUsrMsg_Train& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Train& default_instance();

  void Swap(CCSUsrMsg_Train* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Train* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Train& from);
  void MergeFrom(const CCSUsrMsg_Train& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 train = 1;
  inline bool has_train() const;
  inline void clear_train();
  static const int kTrainFieldNumber = 1;
  inline ::google::protobuf::int32 train() const;
  inline void set_train(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Train)
 private:
  inline void set_has_train();
  inline void clear_has_train();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 train_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Train* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HudText();
  virtual ~CCSUsrMsg_HudText();

  CCSUsrMsg_HudText(const CCSUsrMsg_HudText& from);

  inline CCSUsrMsg_HudText& operator=(const CCSUsrMsg_HudText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudText& default_instance();

  void Swap(CCSUsrMsg_HudText* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_HudText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HudText& from);
  void MergeFrom(const CCSUsrMsg_HudText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudText)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_HudText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SayText();
  virtual ~CCSUsrMsg_SayText();

  CCSUsrMsg_SayText(const CCSUsrMsg_SayText& from);

  inline CCSUsrMsg_SayText& operator=(const CCSUsrMsg_SayText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText& default_instance();

  void Swap(CCSUsrMsg_SayText* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SayText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SayText& from);
  void MergeFrom(const CCSUsrMsg_SayText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // optional bool chat = 3;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 3;
  inline bool chat() const;
  inline void set_chat(bool value);

  // optional bool textallchat = 4;
  inline bool has_textallchat() const;
  inline void clear_textallchat();
  static const int kTextallchatFieldNumber = 4;
  inline bool textallchat() const;
  inline void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText)
 private:
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_textallchat();
  inline void clear_has_textallchat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;
  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SayText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SayText2 : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SayText2();
  virtual ~CCSUsrMsg_SayText2();

  CCSUsrMsg_SayText2(const CCSUsrMsg_SayText2& from);

  inline CCSUsrMsg_SayText2& operator=(const CCSUsrMsg_SayText2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SayText2& default_instance();

  void Swap(CCSUsrMsg_SayText2* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SayText2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SayText2& from);
  void MergeFrom(const CCSUsrMsg_SayText2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ent_idx = 1;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional bool chat = 2;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 2;
  inline bool chat() const;
  inline void set_chat(bool value);

  // optional string msg_name = 3;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  inline ::std::string* release_msg_name();
  inline void set_allocated_msg_name(::std::string* msg_name);

  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // optional bool textallchat = 5;
  inline bool has_textallchat() const;
  inline void clear_textallchat();
  static const int kTextallchatFieldNumber = 5;
  inline bool textallchat() const;
  inline void set_textallchat(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SayText2)
 private:
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_chat();
  inline void clear_has_chat();
  inline void set_has_msg_name();
  inline void clear_has_msg_name();
  inline void set_has_textallchat();
  inline void clear_has_textallchat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ent_idx_;
  bool chat_;
  bool textallchat_;
  ::std::string* msg_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SayText2* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_TextMsg : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_TextMsg();
  virtual ~CCSUsrMsg_TextMsg();

  CCSUsrMsg_TextMsg(const CCSUsrMsg_TextMsg& from);

  inline CCSUsrMsg_TextMsg& operator=(const CCSUsrMsg_TextMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_TextMsg& default_instance();

  void Swap(CCSUsrMsg_TextMsg* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_TextMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_TextMsg& from);
  void MergeFrom(const CCSUsrMsg_TextMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_dst = 1;
  inline bool has_msg_dst() const;
  inline void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  inline ::google::protobuf::int32 msg_dst() const;
  inline void set_msg_dst(::google::protobuf::int32 value);

  // repeated string params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_TextMsg)
 private:
  inline void set_has_msg_dst();
  inline void clear_has_msg_dst();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::int32 msg_dst_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_TextMsg* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HudMsg : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HudMsg();
  virtual ~CCSUsrMsg_HudMsg();

  CCSUsrMsg_HudMsg(const CCSUsrMsg_HudMsg& from);

  inline CCSUsrMsg_HudMsg& operator=(const CCSUsrMsg_HudMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HudMsg& default_instance();

  void Swap(CCSUsrMsg_HudMsg* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_HudMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HudMsg& from);
  void MergeFrom(const CCSUsrMsg_HudMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);

  // optional .CMsgVector2D pos = 2;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 2;
  inline const ::CMsgVector2D& pos() const;
  inline ::CMsgVector2D* mutable_pos();
  inline ::CMsgVector2D* release_pos();
  inline void set_allocated_pos(::CMsgVector2D* pos);

  // optional .CMsgRGBA clr1 = 3;
  inline bool has_clr1() const;
  inline void clear_clr1();
  static const int kClr1FieldNumber = 3;
  inline const ::CMsgRGBA& clr1() const;
  inline ::CMsgRGBA* mutable_clr1();
  inline ::CMsgRGBA* release_clr1();
  inline void set_allocated_clr1(::CMsgRGBA* clr1);

  // optional .CMsgRGBA clr2 = 4;
  inline bool has_clr2() const;
  inline void clear_clr2();
  static const int kClr2FieldNumber = 4;
  inline const ::CMsgRGBA& clr2() const;
  inline ::CMsgRGBA* mutable_clr2();
  inline ::CMsgRGBA* release_clr2();
  inline void set_allocated_clr2(::CMsgRGBA* clr2);

  // optional int32 effect = 5;
  inline bool has_effect() const;
  inline void clear_effect();
  static const int kEffectFieldNumber = 5;
  inline ::google::protobuf::int32 effect() const;
  inline void set_effect(::google::protobuf::int32 value);

  // optional float fade_in_time = 6;
  inline bool has_fade_in_time() const;
  inline void clear_fade_in_time();
  static const int kFadeInTimeFieldNumber = 6;
  inline float fade_in_time() const;
  inline void set_fade_in_time(float value);

  // optional float fade_out_time = 7;
  inline bool has_fade_out_time() const;
  inline void clear_fade_out_time();
  static const int kFadeOutTimeFieldNumber = 7;
  inline float fade_out_time() const;
  inline void set_fade_out_time(float value);

  // optional float hold_time = 9;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 9;
  inline float hold_time() const;
  inline void set_hold_time(float value);

  // optional float fx_time = 10;
  inline bool has_fx_time() const;
  inline void clear_fx_time();
  static const int kFxTimeFieldNumber = 10;
  inline float fx_time() const;
  inline void set_fx_time(float value);

  // optional string text = 11;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 11;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HudMsg)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_clr1();
  inline void clear_has_clr1();
  inline void set_has_clr2();
  inline void clear_has_clr2();
  inline void set_has_effect();
  inline void clear_has_effect();
  inline void set_has_fade_in_time();
  inline void clear_has_fade_in_time();
  inline void set_has_fade_out_time();
  inline void clear_has_fade_out_time();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_fx_time();
  inline void clear_has_fx_time();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsgVector2D* pos_;
  ::CMsgRGBA* clr1_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 effect_;
  ::CMsgRGBA* clr2_;
  float fade_in_time_;
  float fade_out_time_;
  float hold_time_;
  float fx_time_;
  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_HudMsg* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Shake : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Shake();
  virtual ~CCSUsrMsg_Shake();

  CCSUsrMsg_Shake(const CCSUsrMsg_Shake& from);

  inline CCSUsrMsg_Shake& operator=(const CCSUsrMsg_Shake& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Shake& default_instance();

  void Swap(CCSUsrMsg_Shake* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Shake* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Shake& from);
  void MergeFrom(const CCSUsrMsg_Shake& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 command = 1;
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 1;
  inline ::google::protobuf::int32 command() const;
  inline void set_command(::google::protobuf::int32 value);

  // optional float local_amplitude = 2;
  inline bool has_local_amplitude() const;
  inline void clear_local_amplitude();
  static const int kLocalAmplitudeFieldNumber = 2;
  inline float local_amplitude() const;
  inline void set_local_amplitude(float value);

  // optional float frequency = 3;
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 3;
  inline float frequency() const;
  inline void set_frequency(float value);

  // optional float duration = 4;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 4;
  inline float duration() const;
  inline void set_duration(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Shake)
 private:
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_local_amplitude();
  inline void clear_has_local_amplitude();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_duration();
  inline void clear_has_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 command_;
  float local_amplitude_;
  float frequency_;
  float duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Shake* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Fade : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Fade();
  virtual ~CCSUsrMsg_Fade();

  CCSUsrMsg_Fade(const CCSUsrMsg_Fade& from);

  inline CCSUsrMsg_Fade& operator=(const CCSUsrMsg_Fade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Fade& default_instance();

  void Swap(CCSUsrMsg_Fade* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Fade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Fade& from);
  void MergeFrom(const CCSUsrMsg_Fade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 duration = 1;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 1;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional int32 hold_time = 2;
  inline bool has_hold_time() const;
  inline void clear_hold_time();
  static const int kHoldTimeFieldNumber = 2;
  inline ::google::protobuf::int32 hold_time() const;
  inline void set_hold_time(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // optional .CMsgRGBA clr = 4;
  inline bool has_clr() const;
  inline void clear_clr();
  static const int kClrFieldNumber = 4;
  inline const ::CMsgRGBA& clr() const;
  inline ::CMsgRGBA* mutable_clr();
  inline ::CMsgRGBA* release_clr();
  inline void set_allocated_clr(::CMsgRGBA* clr);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Fade)
 private:
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_hold_time();
  inline void clear_has_hold_time();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_clr();
  inline void clear_has_clr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 hold_time_;
  ::CMsgRGBA* clr_;
  ::google::protobuf::int32 flags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Fade* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Rumble : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Rumble();
  virtual ~CCSUsrMsg_Rumble();

  CCSUsrMsg_Rumble(const CCSUsrMsg_Rumble& from);

  inline CCSUsrMsg_Rumble& operator=(const CCSUsrMsg_Rumble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Rumble& default_instance();

  void Swap(CCSUsrMsg_Rumble* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Rumble* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Rumble& from);
  void MergeFrom(const CCSUsrMsg_Rumble& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional int32 data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::int32 data() const;
  inline void set_data(::google::protobuf::int32 value);

  // optional int32 flags = 3;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 3;
  inline ::google::protobuf::int32 flags() const;
  inline void set_flags(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Rumble)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_flags();
  inline void clear_has_flags();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 data_;
  ::google::protobuf::int32 flags_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Rumble* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaption : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CloseCaption();
  virtual ~CCSUsrMsg_CloseCaption();

  CCSUsrMsg_CloseCaption(const CCSUsrMsg_CloseCaption& from);

  inline CCSUsrMsg_CloseCaption& operator=(const CCSUsrMsg_CloseCaption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaption& default_instance();

  void Swap(CCSUsrMsg_CloseCaption* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_CloseCaption* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CloseCaption& from);
  void MergeFrom(const CCSUsrMsg_CloseCaption& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaption)
 private:
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_from_player();
  inline void clear_has_from_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_CloseCaption* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CloseCaptionDirect : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CloseCaptionDirect();
  virtual ~CCSUsrMsg_CloseCaptionDirect();

  CCSUsrMsg_CloseCaptionDirect(const CCSUsrMsg_CloseCaptionDirect& from);

  inline CCSUsrMsg_CloseCaptionDirect& operator=(const CCSUsrMsg_CloseCaptionDirect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CloseCaptionDirect& default_instance();

  void Swap(CCSUsrMsg_CloseCaptionDirect* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_CloseCaptionDirect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void MergeFrom(const CCSUsrMsg_CloseCaptionDirect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hash = 1;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 1;
  inline ::google::protobuf::uint32 hash() const;
  inline void set_hash(::google::protobuf::uint32 value);

  // optional int32 duration = 2;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 2;
  inline ::google::protobuf::int32 duration() const;
  inline void set_duration(::google::protobuf::int32 value);

  // optional bool from_player = 3;
  inline bool has_from_player() const;
  inline void clear_from_player();
  static const int kFromPlayerFieldNumber = 3;
  inline bool from_player() const;
  inline void set_from_player(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CloseCaptionDirect)
 private:
  inline void set_has_hash();
  inline void clear_has_hash();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_from_player();
  inline void clear_has_from_player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 hash_;
  ::google::protobuf::int32 duration_;
  bool from_player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_CloseCaptionDirect* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendAudio : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendAudio();
  virtual ~CCSUsrMsg_SendAudio();

  CCSUsrMsg_SendAudio(const CCSUsrMsg_SendAudio& from);

  inline CCSUsrMsg_SendAudio& operator=(const CCSUsrMsg_SendAudio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendAudio& default_instance();

  void Swap(CCSUsrMsg_SendAudio* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SendAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendAudio& from);
  void MergeFrom(const CCSUsrMsg_SendAudio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string radio_sound = 1;
  inline bool has_radio_sound() const;
  inline void clear_radio_sound();
  static const int kRadioSoundFieldNumber = 1;
  inline const ::std::string& radio_sound() const;
  inline void set_radio_sound(const ::std::string& value);
  inline void set_radio_sound(const char* value);
  inline void set_radio_sound(const char* value, size_t size);
  inline ::std::string* mutable_radio_sound();
  inline ::std::string* release_radio_sound();
  inline void set_allocated_radio_sound(::std::string* radio_sound);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendAudio)
 private:
  inline void set_has_radio_sound();
  inline void clear_has_radio_sound();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* radio_sound_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SendAudio* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RawAudio : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RawAudio();
  virtual ~CCSUsrMsg_RawAudio();

  CCSUsrMsg_RawAudio(const CCSUsrMsg_RawAudio& from);

  inline CCSUsrMsg_RawAudio& operator=(const CCSUsrMsg_RawAudio& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RawAudio& default_instance();

  void Swap(CCSUsrMsg_RawAudio* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_RawAudio* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RawAudio& from);
  void MergeFrom(const CCSUsrMsg_RawAudio& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 pitch = 1;
  inline bool has_pitch() const;
  inline void clear_pitch();
  static const int kPitchFieldNumber = 1;
  inline ::google::protobuf::int32 pitch() const;
  inline void set_pitch(::google::protobuf::int32 value);

  // optional int32 entidx = 2;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 2;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // optional float duration = 3;
  inline bool has_duration() const;
  inline void clear_duration();
  static const int kDurationFieldNumber = 3;
  inline float duration() const;
  inline void set_duration(float value);

  // optional string voice_filename = 4;
  inline bool has_voice_filename() const;
  inline void clear_voice_filename();
  static const int kVoiceFilenameFieldNumber = 4;
  inline const ::std::string& voice_filename() const;
  inline void set_voice_filename(const ::std::string& value);
  inline void set_voice_filename(const char* value);
  inline void set_voice_filename(const char* value, size_t size);
  inline ::std::string* mutable_voice_filename();
  inline ::std::string* release_voice_filename();
  inline void set_allocated_voice_filename(::std::string* voice_filename);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RawAudio)
 private:
  inline void set_has_pitch();
  inline void clear_has_pitch();
  inline void set_has_entidx();
  inline void clear_has_entidx();
  inline void set_has_duration();
  inline void clear_has_duration();
  inline void set_has_voice_filename();
  inline void clear_has_voice_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 pitch_;
  ::google::protobuf::int32 entidx_;
  ::std::string* voice_filename_;
  float duration_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_RawAudio* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask_PlayerMask : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoiceMask_PlayerMask();
  virtual ~CCSUsrMsg_VoiceMask_PlayerMask();

  CCSUsrMsg_VoiceMask_PlayerMask(const CCSUsrMsg_VoiceMask_PlayerMask& from);

  inline CCSUsrMsg_VoiceMask_PlayerMask& operator=(const CCSUsrMsg_VoiceMask_PlayerMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask_PlayerMask& default_instance();

  void Swap(CCSUsrMsg_VoiceMask_PlayerMask* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VoiceMask_PlayerMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask_PlayerMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 game_rules_mask = 1;
  inline bool has_game_rules_mask() const;
  inline void clear_game_rules_mask();
  static const int kGameRulesMaskFieldNumber = 1;
  inline ::google::protobuf::int32 game_rules_mask() const;
  inline void set_game_rules_mask(::google::protobuf::int32 value);

  // optional int32 ban_masks = 2;
  inline bool has_ban_masks() const;
  inline void clear_ban_masks();
  static const int kBanMasksFieldNumber = 2;
  inline ::google::protobuf::int32 ban_masks() const;
  inline void set_ban_masks(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask.PlayerMask)
 private:
  inline void set_has_game_rules_mask();
  inline void clear_has_game_rules_mask();
  inline void set_has_ban_masks();
  inline void clear_has_ban_masks();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 game_rules_mask_;
  ::google::protobuf::int32 ban_masks_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VoiceMask_PlayerMask* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoiceMask : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoiceMask();
  virtual ~CCSUsrMsg_VoiceMask();

  CCSUsrMsg_VoiceMask(const CCSUsrMsg_VoiceMask& from);

  inline CCSUsrMsg_VoiceMask& operator=(const CCSUsrMsg_VoiceMask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoiceMask& default_instance();

  void Swap(CCSUsrMsg_VoiceMask* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VoiceMask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoiceMask& from);
  void MergeFrom(const CCSUsrMsg_VoiceMask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_VoiceMask_PlayerMask PlayerMask;

  // accessors -------------------------------------------------------

  // repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
  inline int player_masks_size() const;
  inline void clear_player_masks();
  static const int kPlayerMasksFieldNumber = 1;
  inline const ::CCSUsrMsg_VoiceMask_PlayerMask& player_masks(int index) const;
  inline ::CCSUsrMsg_VoiceMask_PlayerMask* mutable_player_masks(int index);
  inline ::CCSUsrMsg_VoiceMask_PlayerMask* add_player_masks();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
      player_masks() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
      mutable_player_masks();

  // optional bool player_mod_enable = 2;
  inline bool has_player_mod_enable() const;
  inline void clear_player_mod_enable();
  static const int kPlayerModEnableFieldNumber = 2;
  inline bool player_mod_enable() const;
  inline void set_player_mod_enable(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoiceMask)
 private:
  inline void set_has_player_mod_enable();
  inline void clear_has_player_mod_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask > player_masks_;
  bool player_mod_enable_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VoiceMask* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_Damage : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_Damage();
  virtual ~CCSUsrMsg_Damage();

  CCSUsrMsg_Damage(const CCSUsrMsg_Damage& from);

  inline CCSUsrMsg_Damage& operator=(const CCSUsrMsg_Damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_Damage& default_instance();

  void Swap(CCSUsrMsg_Damage* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_Damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_Damage& from);
  void MergeFrom(const CCSUsrMsg_Damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 amount = 1;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 1;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // optional .CMsgVector inflictor_world_pos = 2;
  inline bool has_inflictor_world_pos() const;
  inline void clear_inflictor_world_pos();
  static const int kInflictorWorldPosFieldNumber = 2;
  inline const ::CMsgVector& inflictor_world_pos() const;
  inline ::CMsgVector* mutable_inflictor_world_pos();
  inline ::CMsgVector* release_inflictor_world_pos();
  inline void set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos);

  // optional int32 victim_entindex = 3;
  inline bool has_victim_entindex() const;
  inline void clear_victim_entindex();
  static const int kVictimEntindexFieldNumber = 3;
  inline ::google::protobuf::int32 victim_entindex() const;
  inline void set_victim_entindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_Damage)
 private:
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_inflictor_world_pos();
  inline void clear_has_inflictor_world_pos();
  inline void set_has_victim_entindex();
  inline void clear_has_victim_entindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsgVector* inflictor_world_pos_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 victim_entindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_Damage* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RadioText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RadioText();
  virtual ~CCSUsrMsg_RadioText();

  CCSUsrMsg_RadioText(const CCSUsrMsg_RadioText& from);

  inline CCSUsrMsg_RadioText& operator=(const CCSUsrMsg_RadioText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RadioText& default_instance();

  void Swap(CCSUsrMsg_RadioText* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_RadioText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RadioText& from);
  void MergeFrom(const CCSUsrMsg_RadioText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 msg_dst = 1;
  inline bool has_msg_dst() const;
  inline void clear_msg_dst();
  static const int kMsgDstFieldNumber = 1;
  inline ::google::protobuf::int32 msg_dst() const;
  inline void set_msg_dst(::google::protobuf::int32 value);

  // optional int32 client = 2;
  inline bool has_client() const;
  inline void clear_client();
  static const int kClientFieldNumber = 2;
  inline ::google::protobuf::int32 client() const;
  inline void set_client(::google::protobuf::int32 value);

  // optional string msg_name = 3;
  inline bool has_msg_name() const;
  inline void clear_msg_name();
  static const int kMsgNameFieldNumber = 3;
  inline const ::std::string& msg_name() const;
  inline void set_msg_name(const ::std::string& value);
  inline void set_msg_name(const char* value);
  inline void set_msg_name(const char* value, size_t size);
  inline ::std::string* mutable_msg_name();
  inline ::std::string* release_msg_name();
  inline void set_allocated_msg_name(::std::string* msg_name);

  // repeated string params = 4;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 4;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RadioText)
 private:
  inline void set_has_msg_dst();
  inline void clear_has_msg_dst();
  inline void set_has_client();
  inline void clear_has_client();
  inline void set_has_msg_name();
  inline void clear_has_msg_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 msg_dst_;
  ::google::protobuf::int32 client_;
  ::std::string* msg_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_RadioText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_HintText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_HintText();
  virtual ~CCSUsrMsg_HintText();

  CCSUsrMsg_HintText(const CCSUsrMsg_HintText& from);

  inline CCSUsrMsg_HintText& operator=(const CCSUsrMsg_HintText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_HintText& default_instance();

  void Swap(CCSUsrMsg_HintText* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_HintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_HintText& from);
  void MergeFrom(const CCSUsrMsg_HintText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 1;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_HintText)
 private:
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* text_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_HintText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KeyHintText : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_KeyHintText();
  virtual ~CCSUsrMsg_KeyHintText();

  CCSUsrMsg_KeyHintText(const CCSUsrMsg_KeyHintText& from);

  inline CCSUsrMsg_KeyHintText& operator=(const CCSUsrMsg_KeyHintText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KeyHintText& default_instance();

  void Swap(CCSUsrMsg_KeyHintText* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_KeyHintText* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_KeyHintText& from);
  void MergeFrom(const CCSUsrMsg_KeyHintText& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string hints = 1;
  inline int hints_size() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 1;
  inline const ::std::string& hints(int index) const;
  inline ::std::string* mutable_hints(int index);
  inline void set_hints(int index, const ::std::string& value);
  inline void set_hints(int index, const char* value);
  inline void set_hints(int index, const char* value, size_t size);
  inline ::std::string* add_hints();
  inline void add_hints(const ::std::string& value);
  inline void add_hints(const char* value);
  inline void add_hints(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& hints() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hints();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KeyHintText)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> hints_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_KeyHintText* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate();

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);

  inline CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& default_instance();

  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity_idx = 1;
  inline bool has_entity_idx() const;
  inline void clear_entity_idx();
  static const int kEntityIdxFieldNumber = 1;
  inline ::google::protobuf::int32 entity_idx() const;
  inline void set_entity_idx(::google::protobuf::int32 value);

  // optional int32 class_id = 2;
  inline bool has_class_id() const;
  inline void clear_class_id();
  static const int kClassIdFieldNumber = 2;
  inline ::google::protobuf::int32 class_id() const;
  inline void set_class_id(::google::protobuf::int32 value);

  // optional int32 origin_x = 3;
  inline bool has_origin_x() const;
  inline void clear_origin_x();
  static const int kOriginXFieldNumber = 3;
  inline ::google::protobuf::int32 origin_x() const;
  inline void set_origin_x(::google::protobuf::int32 value);

  // optional int32 origin_y = 4;
  inline bool has_origin_y() const;
  inline void clear_origin_y();
  static const int kOriginYFieldNumber = 4;
  inline ::google::protobuf::int32 origin_y() const;
  inline void set_origin_y(::google::protobuf::int32 value);

  // optional int32 origin_z = 5;
  inline bool has_origin_z() const;
  inline void clear_origin_z();
  static const int kOriginZFieldNumber = 5;
  inline ::google::protobuf::int32 origin_z() const;
  inline void set_origin_z(::google::protobuf::int32 value);

  // optional int32 angle_y = 6;
  inline bool has_angle_y() const;
  inline void clear_angle_y();
  static const int kAngleYFieldNumber = 6;
  inline ::google::protobuf::int32 angle_y() const;
  inline void set_angle_y(::google::protobuf::int32 value);

  // optional bool defuser = 7;
  inline bool has_defuser() const;
  inline void clear_defuser();
  static const int kDefuserFieldNumber = 7;
  inline bool defuser() const;
  inline void set_defuser(bool value);

  // optional bool player_has_defuser = 8;
  inline bool has_player_has_defuser() const;
  inline void clear_player_has_defuser();
  static const int kPlayerHasDefuserFieldNumber = 8;
  inline bool player_has_defuser() const;
  inline void set_player_has_defuser(bool value);

  // optional bool player_has_c4 = 9;
  inline bool has_player_has_c4() const;
  inline void clear_player_has_c4();
  static const int kPlayerHasC4FieldNumber = 9;
  inline bool player_has_c4() const;
  inline void set_player_has_c4(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate)
 private:
  inline void set_has_entity_idx();
  inline void clear_has_entity_idx();
  inline void set_has_class_id();
  inline void clear_has_class_id();
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_origin_z();
  inline void clear_has_origin_z();
  inline void set_has_angle_y();
  inline void clear_has_angle_y();
  inline void set_has_defuser();
  inline void clear_has_defuser();
  inline void set_has_player_has_defuser();
  inline void clear_has_player_has_defuser();
  inline void set_has_player_has_c4();
  inline void clear_has_player_has_c4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entity_idx_;
  ::google::protobuf::int32 class_id_;
  ::google::protobuf::int32 origin_x_;
  ::google::protobuf::int32 origin_y_;
  ::google::protobuf::int32 origin_z_;
  ::google::protobuf::int32 angle_y_;
  bool defuser_;
  bool player_has_defuser_;
  bool player_has_c4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ProcessSpottedEntityUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ProcessSpottedEntityUpdate();
  virtual ~CCSUsrMsg_ProcessSpottedEntityUpdate();

  CCSUsrMsg_ProcessSpottedEntityUpdate(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);

  inline CCSUsrMsg_ProcessSpottedEntityUpdate& operator=(const CCSUsrMsg_ProcessSpottedEntityUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ProcessSpottedEntityUpdate& default_instance();

  void Swap(CCSUsrMsg_ProcessSpottedEntityUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ProcessSpottedEntityUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void MergeFrom(const CCSUsrMsg_ProcessSpottedEntityUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate SpottedEntityUpdate;

  // accessors -------------------------------------------------------

  // optional bool new_update = 1;
  inline bool has_new_update() const;
  inline void clear_new_update();
  static const int kNewUpdateFieldNumber = 1;
  inline bool new_update() const;
  inline void set_new_update(bool value);

  // repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
  inline int entity_updates_size() const;
  inline void clear_entity_updates();
  static const int kEntityUpdatesFieldNumber = 2;
  inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& entity_updates(int index) const;
  inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* mutable_entity_updates(int index);
  inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* add_entity_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
      entity_updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
      mutable_entity_updates();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ProcessSpottedEntityUpdate)
 private:
  inline void set_has_new_update();
  inline void clear_has_new_update();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate > entity_updates_;
  bool new_update_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ProcessSpottedEntityUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CEconItemPreviewDataBlock_Sticker : public ::google::protobuf::Message {
 public:
  CEconItemPreviewDataBlock_Sticker();
  virtual ~CEconItemPreviewDataBlock_Sticker();

  CEconItemPreviewDataBlock_Sticker(const CEconItemPreviewDataBlock_Sticker& from);

  inline CEconItemPreviewDataBlock_Sticker& operator=(const CEconItemPreviewDataBlock_Sticker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CEconItemPreviewDataBlock_Sticker& default_instance();

  void Swap(CEconItemPreviewDataBlock_Sticker* other);

  // implements Message ----------------------------------------------

  CEconItemPreviewDataBlock_Sticker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CEconItemPreviewDataBlock_Sticker& from);
  void MergeFrom(const CEconItemPreviewDataBlock_Sticker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  inline bool has_slot() const;
  inline void clear_slot();
  static const int kSlotFieldNumber = 1;
  inline ::google::protobuf::uint32 slot() const;
  inline void set_slot(::google::protobuf::uint32 value);

  // optional uint32 sticker_id = 2;
  inline bool has_sticker_id() const;
  inline void clear_sticker_id();
  static const int kStickerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 sticker_id() const;
  inline void set_sticker_id(::google::protobuf::uint32 value);

  // optional float wear = 3;
  inline bool has_wear() const;
  inline void clear_wear();
  static const int kWearFieldNumber = 3;
  inline float wear() const;
  inline void set_wear(float value);

  // optional float scale = 4;
  inline bool has_scale() const;
  inline void clear_scale();
  static const int kScaleFieldNumber = 4;
  inline float scale() const;
  inline void set_scale(float value);

  // optional float rotation = 5;
  inline bool has_rotation() const;
  inline void clear_rotation();
  static const int kRotationFieldNumber = 5;
  inline float rotation() const;
  inline void set_rotation(float value);

  // optional uint32 tint_id = 6;
  inline bool has_tint_id() const;
  inline void clear_tint_id();
  static const int kTintIdFieldNumber = 6;
  inline ::google::protobuf::uint32 tint_id() const;
  inline void set_tint_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock.Sticker)
 private:
  inline void set_has_slot();
  inline void clear_has_slot();
  inline void set_has_sticker_id();
  inline void clear_has_sticker_id();
  inline void set_has_wear();
  inline void clear_has_wear();
  inline void set_has_scale();
  inline void clear_has_scale();
  inline void set_has_rotation();
  inline void clear_has_rotation();
  inline void set_has_tint_id();
  inline void clear_has_tint_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 slot_;
  ::google::protobuf::uint32 sticker_id_;
  float wear_;
  float scale_;
  float rotation_;
  ::google::protobuf::uint32 tint_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CEconItemPreviewDataBlock_Sticker* default_instance_;
};
// -------------------------------------------------------------------

class CEconItemPreviewDataBlock : public ::google::protobuf::Message {
 public:
  CEconItemPreviewDataBlock();
  virtual ~CEconItemPreviewDataBlock();

  CEconItemPreviewDataBlock(const CEconItemPreviewDataBlock& from);

  inline CEconItemPreviewDataBlock& operator=(const CEconItemPreviewDataBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CEconItemPreviewDataBlock& default_instance();

  void Swap(CEconItemPreviewDataBlock* other);

  // implements Message ----------------------------------------------

  CEconItemPreviewDataBlock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CEconItemPreviewDataBlock& from);
  void MergeFrom(const CEconItemPreviewDataBlock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CEconItemPreviewDataBlock_Sticker Sticker;

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint64 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::uint64 itemid() const;
  inline void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 defindex = 3;
  inline bool has_defindex() const;
  inline void clear_defindex();
  static const int kDefindexFieldNumber = 3;
  inline ::google::protobuf::uint32 defindex() const;
  inline void set_defindex(::google::protobuf::uint32 value);

  // optional uint32 paintindex = 4;
  inline bool has_paintindex() const;
  inline void clear_paintindex();
  static const int kPaintindexFieldNumber = 4;
  inline ::google::protobuf::uint32 paintindex() const;
  inline void set_paintindex(::google::protobuf::uint32 value);

  // optional uint32 rarity = 5;
  inline bool has_rarity() const;
  inline void clear_rarity();
  static const int kRarityFieldNumber = 5;
  inline ::google::protobuf::uint32 rarity() const;
  inline void set_rarity(::google::protobuf::uint32 value);

  // optional uint32 quality = 6;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 6;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 paintwear = 7;
  inline bool has_paintwear() const;
  inline void clear_paintwear();
  static const int kPaintwearFieldNumber = 7;
  inline ::google::protobuf::uint32 paintwear() const;
  inline void set_paintwear(::google::protobuf::uint32 value);

  // optional uint32 paintseed = 8;
  inline bool has_paintseed() const;
  inline void clear_paintseed();
  static const int kPaintseedFieldNumber = 8;
  inline ::google::protobuf::uint32 paintseed() const;
  inline void set_paintseed(::google::protobuf::uint32 value);

  // optional uint32 killeaterscoretype = 9;
  inline bool has_killeaterscoretype() const;
  inline void clear_killeaterscoretype();
  static const int kKilleaterscoretypeFieldNumber = 9;
  inline ::google::protobuf::uint32 killeaterscoretype() const;
  inline void set_killeaterscoretype(::google::protobuf::uint32 value);

  // optional uint32 killeatervalue = 10;
  inline bool has_killeatervalue() const;
  inline void clear_killeatervalue();
  static const int kKilleatervalueFieldNumber = 10;
  inline ::google::protobuf::uint32 killeatervalue() const;
  inline void set_killeatervalue(::google::protobuf::uint32 value);

  // optional string customname = 11;
  inline bool has_customname() const;
  inline void clear_customname();
  static const int kCustomnameFieldNumber = 11;
  inline const ::std::string& customname() const;
  inline void set_customname(const ::std::string& value);
  inline void set_customname(const char* value);
  inline void set_customname(const char* value, size_t size);
  inline ::std::string* mutable_customname();
  inline ::std::string* release_customname();
  inline void set_allocated_customname(::std::string* customname);

  // repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
  inline int stickers_size() const;
  inline void clear_stickers();
  static const int kStickersFieldNumber = 12;
  inline const ::CEconItemPreviewDataBlock_Sticker& stickers(int index) const;
  inline ::CEconItemPreviewDataBlock_Sticker* mutable_stickers(int index);
  inline ::CEconItemPreviewDataBlock_Sticker* add_stickers();
  inline const ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock_Sticker >&
      stickers() const;
  inline ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock_Sticker >*
      mutable_stickers();

  // optional uint32 inventory = 13;
  inline bool has_inventory() const;
  inline void clear_inventory();
  static const int kInventoryFieldNumber = 13;
  inline ::google::protobuf::uint32 inventory() const;
  inline void set_inventory(::google::protobuf::uint32 value);

  // optional uint32 origin = 14;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 14;
  inline ::google::protobuf::uint32 origin() const;
  inline void set_origin(::google::protobuf::uint32 value);

  // optional uint32 questid = 15;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestidFieldNumber = 15;
  inline ::google::protobuf::uint32 questid() const;
  inline void set_questid(::google::protobuf::uint32 value);

  // optional uint32 dropreason = 16;
  inline bool has_dropreason() const;
  inline void clear_dropreason();
  static const int kDropreasonFieldNumber = 16;
  inline ::google::protobuf::uint32 dropreason() const;
  inline void set_dropreason(::google::protobuf::uint32 value);

  // optional uint32 musicindex = 17;
  inline bool has_musicindex() const;
  inline void clear_musicindex();
  static const int kMusicindexFieldNumber = 17;
  inline ::google::protobuf::uint32 musicindex() const;
  inline void set_musicindex(::google::protobuf::uint32 value);

  // optional int32 entindex = 18;
  inline bool has_entindex() const;
  inline void clear_entindex();
  static const int kEntindexFieldNumber = 18;
  inline ::google::protobuf::int32 entindex() const;
  inline void set_entindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_defindex();
  inline void clear_has_defindex();
  inline void set_has_paintindex();
  inline void clear_has_paintindex();
  inline void set_has_rarity();
  inline void clear_has_rarity();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_paintwear();
  inline void clear_has_paintwear();
  inline void set_has_paintseed();
  inline void clear_has_paintseed();
  inline void set_has_killeaterscoretype();
  inline void clear_has_killeaterscoretype();
  inline void set_has_killeatervalue();
  inline void clear_has_killeatervalue();
  inline void set_has_customname();
  inline void clear_has_customname();
  inline void set_has_inventory();
  inline void clear_has_inventory();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_dropreason();
  inline void clear_has_dropreason();
  inline void set_has_musicindex();
  inline void clear_has_musicindex();
  inline void set_has_entindex();
  inline void clear_has_entindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 defindex_;
  ::google::protobuf::uint32 paintindex_;
  ::google::protobuf::uint32 rarity_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 paintwear_;
  ::google::protobuf::uint32 paintseed_;
  ::google::protobuf::uint32 killeaterscoretype_;
  ::std::string* customname_;
  ::google::protobuf::uint32 killeatervalue_;
  ::google::protobuf::uint32 inventory_;
  ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock_Sticker > stickers_;
  ::google::protobuf::uint32 origin_;
  ::google::protobuf::uint32 questid_;
  ::google::protobuf::uint32 dropreason_;
  ::google::protobuf::uint32 musicindex_;
  ::google::protobuf::int32 entindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CEconItemPreviewDataBlock* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendPlayerItemDrops : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendPlayerItemDrops();
  virtual ~CCSUsrMsg_SendPlayerItemDrops();

  CCSUsrMsg_SendPlayerItemDrops(const CCSUsrMsg_SendPlayerItemDrops& from);

  inline CCSUsrMsg_SendPlayerItemDrops& operator=(const CCSUsrMsg_SendPlayerItemDrops& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendPlayerItemDrops& default_instance();

  void Swap(CCSUsrMsg_SendPlayerItemDrops* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SendPlayerItemDrops* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendPlayerItemDrops& from);
  void MergeFrom(const CCSUsrMsg_SendPlayerItemDrops& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CEconItemPreviewDataBlock entity_updates = 1;
  inline int entity_updates_size() const;
  inline void clear_entity_updates();
  static const int kEntityUpdatesFieldNumber = 1;
  inline const ::CEconItemPreviewDataBlock& entity_updates(int index) const;
  inline ::CEconItemPreviewDataBlock* mutable_entity_updates(int index);
  inline ::CEconItemPreviewDataBlock* add_entity_updates();
  inline const ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >&
      entity_updates() const;
  inline ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >*
      mutable_entity_updates();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendPlayerItemDrops)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock > entity_updates_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SendPlayerItemDrops* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendPlayerItemFound : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendPlayerItemFound();
  virtual ~CCSUsrMsg_SendPlayerItemFound();

  CCSUsrMsg_SendPlayerItemFound(const CCSUsrMsg_SendPlayerItemFound& from);

  inline CCSUsrMsg_SendPlayerItemFound& operator=(const CCSUsrMsg_SendPlayerItemFound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendPlayerItemFound& default_instance();

  void Swap(CCSUsrMsg_SendPlayerItemFound* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SendPlayerItemFound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendPlayerItemFound& from);
  void MergeFrom(const CCSUsrMsg_SendPlayerItemFound& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CEconItemPreviewDataBlock iteminfo = 1;
  inline bool has_iteminfo() const;
  inline void clear_iteminfo();
  static const int kIteminfoFieldNumber = 1;
  inline const ::CEconItemPreviewDataBlock& iteminfo() const;
  inline ::CEconItemPreviewDataBlock* mutable_iteminfo();
  inline ::CEconItemPreviewDataBlock* release_iteminfo();
  inline void set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo);

  // optional int32 entindex = 2;
  inline bool has_entindex() const;
  inline void clear_entindex();
  static const int kEntindexFieldNumber = 2;
  inline ::google::protobuf::int32 entindex() const;
  inline void set_entindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendPlayerItemFound)
 private:
  inline void set_has_iteminfo();
  inline void clear_has_iteminfo();
  inline void set_has_entindex();
  inline void clear_has_entindex();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CEconItemPreviewDataBlock* iteminfo_;
  ::google::protobuf::int32 entindex_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SendPlayerItemFound* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReloadEffect : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ReloadEffect();
  virtual ~CCSUsrMsg_ReloadEffect();

  CCSUsrMsg_ReloadEffect(const CCSUsrMsg_ReloadEffect& from);

  inline CCSUsrMsg_ReloadEffect& operator=(const CCSUsrMsg_ReloadEffect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ReloadEffect& default_instance();

  void Swap(CCSUsrMsg_ReloadEffect* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ReloadEffect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ReloadEffect& from);
  void MergeFrom(const CCSUsrMsg_ReloadEffect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // optional int32 actanim = 2;
  inline bool has_actanim() const;
  inline void clear_actanim();
  static const int kActanimFieldNumber = 2;
  inline ::google::protobuf::int32 actanim() const;
  inline void set_actanim(::google::protobuf::int32 value);

  // optional float origin_x = 3;
  inline bool has_origin_x() const;
  inline void clear_origin_x();
  static const int kOriginXFieldNumber = 3;
  inline float origin_x() const;
  inline void set_origin_x(float value);

  // optional float origin_y = 4;
  inline bool has_origin_y() const;
  inline void clear_origin_y();
  static const int kOriginYFieldNumber = 4;
  inline float origin_y() const;
  inline void set_origin_y(float value);

  // optional float origin_z = 5;
  inline bool has_origin_z() const;
  inline void clear_origin_z();
  static const int kOriginZFieldNumber = 5;
  inline float origin_z() const;
  inline void set_origin_z(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReloadEffect)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();
  inline void set_has_actanim();
  inline void clear_has_actanim();
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_origin_z();
  inline void clear_has_origin_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;
  ::google::protobuf::int32 actanim_;
  float origin_x_;
  float origin_y_;
  float origin_z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ReloadEffect* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AdjustMoney : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AdjustMoney();
  virtual ~CCSUsrMsg_AdjustMoney();

  CCSUsrMsg_AdjustMoney(const CCSUsrMsg_AdjustMoney& from);

  inline CCSUsrMsg_AdjustMoney& operator=(const CCSUsrMsg_AdjustMoney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AdjustMoney& default_instance();

  void Swap(CCSUsrMsg_AdjustMoney* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_AdjustMoney* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AdjustMoney& from);
  void MergeFrom(const CCSUsrMsg_AdjustMoney& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 amount = 1;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 1;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AdjustMoney)
 private:
  inline void set_has_amount();
  inline void clear_has_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 amount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_AdjustMoney* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ReportHit : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ReportHit();
  virtual ~CCSUsrMsg_ReportHit();

  CCSUsrMsg_ReportHit(const CCSUsrMsg_ReportHit& from);

  inline CCSUsrMsg_ReportHit& operator=(const CCSUsrMsg_ReportHit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ReportHit& default_instance();

  void Swap(CCSUsrMsg_ReportHit* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ReportHit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ReportHit& from);
  void MergeFrom(const CCSUsrMsg_ReportHit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float pos_x = 1;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 1;
  inline float pos_x() const;
  inline void set_pos_x(float value);

  // optional float pos_y = 2;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 2;
  inline float pos_y() const;
  inline void set_pos_y(float value);

  // optional float timestamp = 4;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  inline float timestamp() const;
  inline void set_timestamp(float value);

  // optional float pos_z = 3;
  inline bool has_pos_z() const;
  inline void clear_pos_z();
  static const int kPosZFieldNumber = 3;
  inline float pos_z() const;
  inline void set_pos_z(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ReportHit)
 private:
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_pos_z();
  inline void clear_has_pos_z();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float pos_x_;
  float pos_y_;
  float timestamp_;
  float pos_z_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ReportHit* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_KillCam : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_KillCam();
  virtual ~CCSUsrMsg_KillCam();

  CCSUsrMsg_KillCam(const CCSUsrMsg_KillCam& from);

  inline CCSUsrMsg_KillCam& operator=(const CCSUsrMsg_KillCam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_KillCam& default_instance();

  void Swap(CCSUsrMsg_KillCam* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_KillCam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_KillCam& from);
  void MergeFrom(const CCSUsrMsg_KillCam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 obs_mode = 1;
  inline bool has_obs_mode() const;
  inline void clear_obs_mode();
  static const int kObsModeFieldNumber = 1;
  inline ::google::protobuf::int32 obs_mode() const;
  inline void set_obs_mode(::google::protobuf::int32 value);

  // optional int32 first_target = 2;
  inline bool has_first_target() const;
  inline void clear_first_target();
  static const int kFirstTargetFieldNumber = 2;
  inline ::google::protobuf::int32 first_target() const;
  inline void set_first_target(::google::protobuf::int32 value);

  // optional int32 second_target = 3;
  inline bool has_second_target() const;
  inline void clear_second_target();
  static const int kSecondTargetFieldNumber = 3;
  inline ::google::protobuf::int32 second_target() const;
  inline void set_second_target(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_KillCam)
 private:
  inline void set_has_obs_mode();
  inline void clear_has_obs_mode();
  inline void set_has_first_target();
  inline void clear_has_first_target();
  inline void set_has_second_target();
  inline void clear_has_second_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 obs_mode_;
  ::google::protobuf::int32 first_target_;
  ::google::protobuf::int32 second_target_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_KillCam* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DesiredTimescale : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DesiredTimescale();
  virtual ~CCSUsrMsg_DesiredTimescale();

  CCSUsrMsg_DesiredTimescale(const CCSUsrMsg_DesiredTimescale& from);

  inline CCSUsrMsg_DesiredTimescale& operator=(const CCSUsrMsg_DesiredTimescale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DesiredTimescale& default_instance();

  void Swap(CCSUsrMsg_DesiredTimescale* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_DesiredTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DesiredTimescale& from);
  void MergeFrom(const CCSUsrMsg_DesiredTimescale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float desired_timescale = 1;
  inline bool has_desired_timescale() const;
  inline void clear_desired_timescale();
  static const int kDesiredTimescaleFieldNumber = 1;
  inline float desired_timescale() const;
  inline void set_desired_timescale(float value);

  // optional float duration_realtime_sec = 2;
  inline bool has_duration_realtime_sec() const;
  inline void clear_duration_realtime_sec();
  static const int kDurationRealtimeSecFieldNumber = 2;
  inline float duration_realtime_sec() const;
  inline void set_duration_realtime_sec(float value);

  // optional int32 interpolator_type = 3;
  inline bool has_interpolator_type() const;
  inline void clear_interpolator_type();
  static const int kInterpolatorTypeFieldNumber = 3;
  inline ::google::protobuf::int32 interpolator_type() const;
  inline void set_interpolator_type(::google::protobuf::int32 value);

  // optional float start_blend_time = 4;
  inline bool has_start_blend_time() const;
  inline void clear_start_blend_time();
  static const int kStartBlendTimeFieldNumber = 4;
  inline float start_blend_time() const;
  inline void set_start_blend_time(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DesiredTimescale)
 private:
  inline void set_has_desired_timescale();
  inline void clear_has_desired_timescale();
  inline void set_has_duration_realtime_sec();
  inline void clear_has_duration_realtime_sec();
  inline void set_has_interpolator_type();
  inline void clear_has_interpolator_type();
  inline void set_has_start_blend_time();
  inline void clear_has_start_blend_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float desired_timescale_;
  float duration_realtime_sec_;
  ::google::protobuf::int32 interpolator_type_;
  float start_blend_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_DesiredTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CurrentTimescale : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CurrentTimescale();
  virtual ~CCSUsrMsg_CurrentTimescale();

  CCSUsrMsg_CurrentTimescale(const CCSUsrMsg_CurrentTimescale& from);

  inline CCSUsrMsg_CurrentTimescale& operator=(const CCSUsrMsg_CurrentTimescale& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CurrentTimescale& default_instance();

  void Swap(CCSUsrMsg_CurrentTimescale* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_CurrentTimescale* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CurrentTimescale& from);
  void MergeFrom(const CCSUsrMsg_CurrentTimescale& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float cur_timescale = 1;
  inline bool has_cur_timescale() const;
  inline void clear_cur_timescale();
  static const int kCurTimescaleFieldNumber = 1;
  inline float cur_timescale() const;
  inline void set_cur_timescale(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CurrentTimescale)
 private:
  inline void set_has_cur_timescale();
  inline void clear_has_cur_timescale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  float cur_timescale_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_CurrentTimescale* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AchievementEvent : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AchievementEvent();
  virtual ~CCSUsrMsg_AchievementEvent();

  CCSUsrMsg_AchievementEvent(const CCSUsrMsg_AchievementEvent& from);

  inline CCSUsrMsg_AchievementEvent& operator=(const CCSUsrMsg_AchievementEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AchievementEvent& default_instance();

  void Swap(CCSUsrMsg_AchievementEvent* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_AchievementEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AchievementEvent& from);
  void MergeFrom(const CCSUsrMsg_AchievementEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline ::google::protobuf::int32 achievement() const;
  inline void set_achievement(::google::protobuf::int32 value);

  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AchievementEvent)
 private:
  inline void set_has_achievement();
  inline void clear_has_achievement();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 achievement_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_AchievementEvent* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchEndConditions : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MatchEndConditions();
  virtual ~CCSUsrMsg_MatchEndConditions();

  CCSUsrMsg_MatchEndConditions(const CCSUsrMsg_MatchEndConditions& from);

  inline CCSUsrMsg_MatchEndConditions& operator=(const CCSUsrMsg_MatchEndConditions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MatchEndConditions& default_instance();

  void Swap(CCSUsrMsg_MatchEndConditions* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_MatchEndConditions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MatchEndConditions& from);
  void MergeFrom(const CCSUsrMsg_MatchEndConditions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fraglimit = 1;
  inline bool has_fraglimit() const;
  inline void clear_fraglimit();
  static const int kFraglimitFieldNumber = 1;
  inline ::google::protobuf::int32 fraglimit() const;
  inline void set_fraglimit(::google::protobuf::int32 value);

  // optional int32 mp_maxrounds = 2;
  inline bool has_mp_maxrounds() const;
  inline void clear_mp_maxrounds();
  static const int kMpMaxroundsFieldNumber = 2;
  inline ::google::protobuf::int32 mp_maxrounds() const;
  inline void set_mp_maxrounds(::google::protobuf::int32 value);

  // optional int32 mp_winlimit = 3;
  inline bool has_mp_winlimit() const;
  inline void clear_mp_winlimit();
  static const int kMpWinlimitFieldNumber = 3;
  inline ::google::protobuf::int32 mp_winlimit() const;
  inline void set_mp_winlimit(::google::protobuf::int32 value);

  // optional int32 mp_timelimit = 4;
  inline bool has_mp_timelimit() const;
  inline void clear_mp_timelimit();
  static const int kMpTimelimitFieldNumber = 4;
  inline ::google::protobuf::int32 mp_timelimit() const;
  inline void set_mp_timelimit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchEndConditions)
 private:
  inline void set_has_fraglimit();
  inline void clear_has_fraglimit();
  inline void set_has_mp_maxrounds();
  inline void clear_has_mp_maxrounds();
  inline void set_has_mp_winlimit();
  inline void clear_has_mp_winlimit();
  inline void set_has_mp_timelimit();
  inline void clear_has_mp_timelimit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fraglimit_;
  ::google::protobuf::int32 mp_maxrounds_;
  ::google::protobuf::int32 mp_winlimit_;
  ::google::protobuf::int32 mp_timelimit_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_MatchEndConditions* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate_Stat : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_PlayerStatsUpdate_Stat();
  virtual ~CCSUsrMsg_PlayerStatsUpdate_Stat();

  CCSUsrMsg_PlayerStatsUpdate_Stat(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);

  inline CCSUsrMsg_PlayerStatsUpdate_Stat& operator=(const CCSUsrMsg_PlayerStatsUpdate_Stat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_PlayerStatsUpdate_Stat& default_instance();

  void Swap(CCSUsrMsg_PlayerStatsUpdate_Stat* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_PlayerStatsUpdate_Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate_Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 idx = 1;
  inline bool has_idx() const;
  inline void clear_idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::int32 idx() const;
  inline void set_idx(::google::protobuf::int32 value);

  // optional int32 delta = 2;
  inline bool has_delta() const;
  inline void clear_delta();
  static const int kDeltaFieldNumber = 2;
  inline ::google::protobuf::int32 delta() const;
  inline void set_delta(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate.Stat)
 private:
  inline void set_has_idx();
  inline void clear_has_idx();
  inline void set_has_delta();
  inline void clear_has_delta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 idx_;
  ::google::protobuf::int32 delta_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_PlayerStatsUpdate_Stat* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerStatsUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_PlayerStatsUpdate();
  virtual ~CCSUsrMsg_PlayerStatsUpdate();

  CCSUsrMsg_PlayerStatsUpdate(const CCSUsrMsg_PlayerStatsUpdate& from);

  inline CCSUsrMsg_PlayerStatsUpdate& operator=(const CCSUsrMsg_PlayerStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_PlayerStatsUpdate& default_instance();

  void Swap(CCSUsrMsg_PlayerStatsUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_PlayerStatsUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  void MergeFrom(const CCSUsrMsg_PlayerStatsUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_PlayerStatsUpdate_Stat Stat;

  // accessors -------------------------------------------------------

  // optional int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 4;
  inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& stats(int index) const;
  inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* mutable_stats(int index);
  inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
      mutable_stats();

  // optional int32 user_id = 5;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);

  // optional int32 crc = 6;
  inline bool has_crc() const;
  inline void clear_crc();
  static const int kCrcFieldNumber = 6;
  inline ::google::protobuf::int32 crc() const;
  inline void set_crc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerStatsUpdate)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_crc();
  inline void clear_has_crc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat > stats_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 crc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_PlayerStatsUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisplayInventory : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DisplayInventory();
  virtual ~CCSUsrMsg_DisplayInventory();

  CCSUsrMsg_DisplayInventory(const CCSUsrMsg_DisplayInventory& from);

  inline CCSUsrMsg_DisplayInventory& operator=(const CCSUsrMsg_DisplayInventory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisplayInventory& default_instance();

  void Swap(CCSUsrMsg_DisplayInventory* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_DisplayInventory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DisplayInventory& from);
  void MergeFrom(const CCSUsrMsg_DisplayInventory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool display = 1;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 1;
  inline bool display() const;
  inline void set_display(bool value);

  // optional int32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisplayInventory)
 private:
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool display_;
  ::google::protobuf::int32 user_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_DisplayInventory* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankGet : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_XRankGet();
  virtual ~CCSUsrMsg_XRankGet();

  CCSUsrMsg_XRankGet(const CCSUsrMsg_XRankGet& from);

  inline CCSUsrMsg_XRankGet& operator=(const CCSUsrMsg_XRankGet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_XRankGet& default_instance();

  void Swap(CCSUsrMsg_XRankGet* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_XRankGet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_XRankGet& from);
  void MergeFrom(const CCSUsrMsg_XRankGet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mode_idx = 1;
  inline bool has_mode_idx() const;
  inline void clear_mode_idx();
  static const int kModeIdxFieldNumber = 1;
  inline ::google::protobuf::int32 mode_idx() const;
  inline void set_mode_idx(::google::protobuf::int32 value);

  // optional int32 controller = 2;
  inline bool has_controller() const;
  inline void clear_controller();
  static const int kControllerFieldNumber = 2;
  inline ::google::protobuf::int32 controller() const;
  inline void set_controller(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankGet)
 private:
  inline void set_has_mode_idx();
  inline void clear_has_mode_idx();
  inline void set_has_controller();
  inline void clear_has_controller();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mode_idx_;
  ::google::protobuf::int32 controller_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_XRankGet* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XRankUpd : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_XRankUpd();
  virtual ~CCSUsrMsg_XRankUpd();

  CCSUsrMsg_XRankUpd(const CCSUsrMsg_XRankUpd& from);

  inline CCSUsrMsg_XRankUpd& operator=(const CCSUsrMsg_XRankUpd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_XRankUpd& default_instance();

  void Swap(CCSUsrMsg_XRankUpd* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_XRankUpd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_XRankUpd& from);
  void MergeFrom(const CCSUsrMsg_XRankUpd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mode_idx = 1;
  inline bool has_mode_idx() const;
  inline void clear_mode_idx();
  static const int kModeIdxFieldNumber = 1;
  inline ::google::protobuf::int32 mode_idx() const;
  inline void set_mode_idx(::google::protobuf::int32 value);

  // optional int32 controller = 2;
  inline bool has_controller() const;
  inline void clear_controller();
  static const int kControllerFieldNumber = 2;
  inline ::google::protobuf::int32 controller() const;
  inline void set_controller(::google::protobuf::int32 value);

  // optional int32 ranking = 3;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 3;
  inline ::google::protobuf::int32 ranking() const;
  inline void set_ranking(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XRankUpd)
 private:
  inline void set_has_mode_idx();
  inline void clear_has_mode_idx();
  inline void set_has_controller();
  inline void clear_has_controller();
  inline void set_has_ranking();
  inline void clear_has_ranking();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 mode_idx_;
  ::google::protobuf::int32 controller_;
  ::google::protobuf::int32 ranking_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_XRankUpd* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_CallVoteFailed : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_CallVoteFailed();
  virtual ~CCSUsrMsg_CallVoteFailed();

  CCSUsrMsg_CallVoteFailed(const CCSUsrMsg_CallVoteFailed& from);

  inline CCSUsrMsg_CallVoteFailed& operator=(const CCSUsrMsg_CallVoteFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_CallVoteFailed& default_instance();

  void Swap(CCSUsrMsg_CallVoteFailed* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_CallVoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_CallVoteFailed& from);
  void MergeFrom(const CCSUsrMsg_CallVoteFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // optional int32 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_CallVoteFailed)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reason_;
  ::google::protobuf::int32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_CallVoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteStart : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteStart();
  virtual ~CCSUsrMsg_VoteStart();

  CCSUsrMsg_VoteStart(const CCSUsrMsg_VoteStart& from);

  inline CCSUsrMsg_VoteStart& operator=(const CCSUsrMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteStart& default_instance();

  void Swap(CCSUsrMsg_VoteStart* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VoteStart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteStart& from);
  void MergeFrom(const CCSUsrMsg_VoteStart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 ent_idx = 2;
  inline bool has_ent_idx() const;
  inline void clear_ent_idx();
  static const int kEntIdxFieldNumber = 2;
  inline ::google::protobuf::int32 ent_idx() const;
  inline void set_ent_idx(::google::protobuf::int32 value);

  // optional int32 vote_type = 3;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 3;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);

  // optional string disp_str = 4;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 4;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  inline ::std::string* release_disp_str();
  inline void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 5;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 5;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  inline ::std::string* release_details_str();
  inline void set_allocated_details_str(::std::string* details_str);

  // optional string other_team_str = 6;
  inline bool has_other_team_str() const;
  inline void clear_other_team_str();
  static const int kOtherTeamStrFieldNumber = 6;
  inline const ::std::string& other_team_str() const;
  inline void set_other_team_str(const ::std::string& value);
  inline void set_other_team_str(const char* value);
  inline void set_other_team_str(const char* value, size_t size);
  inline ::std::string* mutable_other_team_str();
  inline ::std::string* release_other_team_str();
  inline void set_allocated_other_team_str(::std::string* other_team_str);

  // optional bool is_yes_no_vote = 7;
  inline bool has_is_yes_no_vote() const;
  inline void clear_is_yes_no_vote();
  static const int kIsYesNoVoteFieldNumber = 7;
  inline bool is_yes_no_vote() const;
  inline void set_is_yes_no_vote(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteStart)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_ent_idx();
  inline void clear_has_ent_idx();
  inline void set_has_vote_type();
  inline void clear_has_vote_type();
  inline void set_has_disp_str();
  inline void clear_has_disp_str();
  inline void set_has_details_str();
  inline void clear_has_details_str();
  inline void set_has_other_team_str();
  inline void clear_has_other_team_str();
  inline void set_has_is_yes_no_vote();
  inline void clear_has_is_yes_no_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 ent_idx_;
  ::std::string* disp_str_;
  ::std::string* details_str_;
  ::google::protobuf::int32 vote_type_;
  bool is_yes_no_vote_;
  ::std::string* other_team_str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteStart* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VotePass : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VotePass();
  virtual ~CCSUsrMsg_VotePass();

  CCSUsrMsg_VotePass(const CCSUsrMsg_VotePass& from);

  inline CCSUsrMsg_VotePass& operator=(const CCSUsrMsg_VotePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VotePass& default_instance();

  void Swap(CCSUsrMsg_VotePass* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VotePass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VotePass& from);
  void MergeFrom(const CCSUsrMsg_VotePass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 vote_type = 2;
  inline bool has_vote_type() const;
  inline void clear_vote_type();
  static const int kVoteTypeFieldNumber = 2;
  inline ::google::protobuf::int32 vote_type() const;
  inline void set_vote_type(::google::protobuf::int32 value);

  // optional string disp_str = 3;
  inline bool has_disp_str() const;
  inline void clear_disp_str();
  static const int kDispStrFieldNumber = 3;
  inline const ::std::string& disp_str() const;
  inline void set_disp_str(const ::std::string& value);
  inline void set_disp_str(const char* value);
  inline void set_disp_str(const char* value, size_t size);
  inline ::std::string* mutable_disp_str();
  inline ::std::string* release_disp_str();
  inline void set_allocated_disp_str(::std::string* disp_str);

  // optional string details_str = 4;
  inline bool has_details_str() const;
  inline void clear_details_str();
  static const int kDetailsStrFieldNumber = 4;
  inline const ::std::string& details_str() const;
  inline void set_details_str(const ::std::string& value);
  inline void set_details_str(const char* value);
  inline void set_details_str(const char* value, size_t size);
  inline ::std::string* mutable_details_str();
  inline ::std::string* release_details_str();
  inline void set_allocated_details_str(::std::string* details_str);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VotePass)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_vote_type();
  inline void clear_has_vote_type();
  inline void set_has_disp_str();
  inline void clear_has_disp_str();
  inline void set_has_details_str();
  inline void clear_has_details_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 vote_type_;
  ::std::string* disp_str_;
  ::std::string* details_str_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VotePass* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteFailed : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteFailed();
  virtual ~CCSUsrMsg_VoteFailed();

  CCSUsrMsg_VoteFailed(const CCSUsrMsg_VoteFailed& from);

  inline CCSUsrMsg_VoteFailed& operator=(const CCSUsrMsg_VoteFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteFailed& default_instance();

  void Swap(CCSUsrMsg_VoteFailed* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VoteFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteFailed& from);
  void MergeFrom(const CCSUsrMsg_VoteFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 team = 1;
  inline bool has_team() const;
  inline void clear_team();
  static const int kTeamFieldNumber = 1;
  inline ::google::protobuf::int32 team() const;
  inline void set_team(::google::protobuf::int32 value);

  // optional int32 reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteFailed)
 private:
  inline void set_has_team();
  inline void clear_has_team();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 team_;
  ::google::protobuf::int32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteFailed* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_VoteSetup : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_VoteSetup();
  virtual ~CCSUsrMsg_VoteSetup();

  CCSUsrMsg_VoteSetup(const CCSUsrMsg_VoteSetup& from);

  inline CCSUsrMsg_VoteSetup& operator=(const CCSUsrMsg_VoteSetup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_VoteSetup& default_instance();

  void Swap(CCSUsrMsg_VoteSetup* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_VoteSetup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_VoteSetup& from);
  void MergeFrom(const CCSUsrMsg_VoteSetup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string potential_issues = 1;
  inline int potential_issues_size() const;
  inline void clear_potential_issues();
  static const int kPotentialIssuesFieldNumber = 1;
  inline const ::std::string& potential_issues(int index) const;
  inline ::std::string* mutable_potential_issues(int index);
  inline void set_potential_issues(int index, const ::std::string& value);
  inline void set_potential_issues(int index, const char* value);
  inline void set_potential_issues(int index, const char* value, size_t size);
  inline ::std::string* add_potential_issues();
  inline void add_potential_issues(const ::std::string& value);
  inline void add_potential_issues(const char* value);
  inline void add_potential_issues(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& potential_issues() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_potential_issues();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_VoteSetup)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> potential_issues_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_VoteSetup* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SendLastKillerDamageToClient : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SendLastKillerDamageToClient();
  virtual ~CCSUsrMsg_SendLastKillerDamageToClient();

  CCSUsrMsg_SendLastKillerDamageToClient(const CCSUsrMsg_SendLastKillerDamageToClient& from);

  inline CCSUsrMsg_SendLastKillerDamageToClient& operator=(const CCSUsrMsg_SendLastKillerDamageToClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SendLastKillerDamageToClient& default_instance();

  void Swap(CCSUsrMsg_SendLastKillerDamageToClient* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SendLastKillerDamageToClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void MergeFrom(const CCSUsrMsg_SendLastKillerDamageToClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 num_hits_given = 1;
  inline bool has_num_hits_given() const;
  inline void clear_num_hits_given();
  static const int kNumHitsGivenFieldNumber = 1;
  inline ::google::protobuf::int32 num_hits_given() const;
  inline void set_num_hits_given(::google::protobuf::int32 value);

  // optional int32 damage_given = 2;
  inline bool has_damage_given() const;
  inline void clear_damage_given();
  static const int kDamageGivenFieldNumber = 2;
  inline ::google::protobuf::int32 damage_given() const;
  inline void set_damage_given(::google::protobuf::int32 value);

  // optional int32 num_hits_taken = 3;
  inline bool has_num_hits_taken() const;
  inline void clear_num_hits_taken();
  static const int kNumHitsTakenFieldNumber = 3;
  inline ::google::protobuf::int32 num_hits_taken() const;
  inline void set_num_hits_taken(::google::protobuf::int32 value);

  // optional int32 damage_taken = 4;
  inline bool has_damage_taken() const;
  inline void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 4;
  inline ::google::protobuf::int32 damage_taken() const;
  inline void set_damage_taken(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SendLastKillerDamageToClient)
 private:
  inline void set_has_num_hits_given();
  inline void clear_has_num_hits_given();
  inline void set_has_damage_given();
  inline void clear_has_damage_given();
  inline void set_has_num_hits_taken();
  inline void clear_has_num_hits_taken();
  inline void set_has_damage_taken();
  inline void clear_has_damage_taken();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_hits_given_;
  ::google::protobuf::int32 damage_given_;
  ::google::protobuf::int32 num_hits_taken_;
  ::google::protobuf::int32 damage_taken_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SendLastKillerDamageToClient* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate_RankUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankUpdate_RankUpdate();
  virtual ~CCSUsrMsg_ServerRankUpdate_RankUpdate();

  CCSUsrMsg_ServerRankUpdate_RankUpdate(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);

  inline CCSUsrMsg_ServerRankUpdate_RankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankUpdate_RankUpdate& default_instance();

  void Swap(CCSUsrMsg_ServerRankUpdate_RankUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ServerRankUpdate_RankUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate_RankUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 account_id = 1;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);

  // optional int32 rank_old = 2;
  inline bool has_rank_old() const;
  inline void clear_rank_old();
  static const int kRankOldFieldNumber = 2;
  inline ::google::protobuf::int32 rank_old() const;
  inline void set_rank_old(::google::protobuf::int32 value);

  // optional int32 rank_new = 3;
  inline bool has_rank_new() const;
  inline void clear_rank_new();
  static const int kRankNewFieldNumber = 3;
  inline ::google::protobuf::int32 rank_new() const;
  inline void set_rank_new(::google::protobuf::int32 value);

  // optional int32 num_wins = 4;
  inline bool has_num_wins() const;
  inline void clear_num_wins();
  static const int kNumWinsFieldNumber = 4;
  inline ::google::protobuf::int32 num_wins() const;
  inline void set_num_wins(::google::protobuf::int32 value);

  // optional float rank_change = 5;
  inline bool has_rank_change() const;
  inline void clear_rank_change();
  static const int kRankChangeFieldNumber = 5;
  inline float rank_change() const;
  inline void set_rank_change(float value);

  // optional int32 rank_type_id = 6;
  inline bool has_rank_type_id() const;
  inline void clear_rank_type_id();
  static const int kRankTypeIdFieldNumber = 6;
  inline ::google::protobuf::int32 rank_type_id() const;
  inline void set_rank_type_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate.RankUpdate)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_rank_old();
  inline void clear_has_rank_old();
  inline void set_has_rank_new();
  inline void clear_has_rank_new();
  inline void set_has_num_wins();
  inline void clear_has_num_wins();
  inline void set_has_rank_change();
  inline void clear_has_rank_change();
  inline void set_has_rank_type_id();
  inline void clear_has_rank_type_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 account_id_;
  ::google::protobuf::int32 rank_old_;
  ::google::protobuf::int32 rank_new_;
  ::google::protobuf::int32 num_wins_;
  float rank_change_;
  ::google::protobuf::int32 rank_type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankUpdate_RankUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankUpdate();
  virtual ~CCSUsrMsg_ServerRankUpdate();

  CCSUsrMsg_ServerRankUpdate(const CCSUsrMsg_ServerRankUpdate& from);

  inline CCSUsrMsg_ServerRankUpdate& operator=(const CCSUsrMsg_ServerRankUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankUpdate& default_instance();

  void Swap(CCSUsrMsg_ServerRankUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ServerRankUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankUpdate& from);
  void MergeFrom(const CCSUsrMsg_ServerRankUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_ServerRankUpdate_RankUpdate RankUpdate;

  // accessors -------------------------------------------------------

  // repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
  inline int rank_update_size() const;
  inline void clear_rank_update();
  static const int kRankUpdateFieldNumber = 1;
  inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& rank_update(int index) const;
  inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* mutable_rank_update(int index);
  inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* add_rank_update();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
      rank_update() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
      mutable_rank_update();

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankUpdate)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate > rank_update_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemPickup : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ItemPickup();
  virtual ~CCSUsrMsg_ItemPickup();

  CCSUsrMsg_ItemPickup(const CCSUsrMsg_ItemPickup& from);

  inline CCSUsrMsg_ItemPickup& operator=(const CCSUsrMsg_ItemPickup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemPickup& default_instance();

  void Swap(CCSUsrMsg_ItemPickup* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ItemPickup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ItemPickup& from);
  void MergeFrom(const CCSUsrMsg_ItemPickup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::std::string& item() const;
  inline void set_item(const ::std::string& value);
  inline void set_item(const char* value);
  inline void set_item(const char* value, size_t size);
  inline ::std::string* mutable_item();
  inline ::std::string* release_item();
  inline void set_allocated_item(::std::string* item);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemPickup)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ItemPickup* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ShowMenu : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ShowMenu();
  virtual ~CCSUsrMsg_ShowMenu();

  CCSUsrMsg_ShowMenu(const CCSUsrMsg_ShowMenu& from);

  inline CCSUsrMsg_ShowMenu& operator=(const CCSUsrMsg_ShowMenu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ShowMenu& default_instance();

  void Swap(CCSUsrMsg_ShowMenu* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ShowMenu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ShowMenu& from);
  void MergeFrom(const CCSUsrMsg_ShowMenu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bits_valid_slots = 1;
  inline bool has_bits_valid_slots() const;
  inline void clear_bits_valid_slots();
  static const int kBitsValidSlotsFieldNumber = 1;
  inline ::google::protobuf::int32 bits_valid_slots() const;
  inline void set_bits_valid_slots(::google::protobuf::int32 value);

  // optional int32 display_time = 2;
  inline bool has_display_time() const;
  inline void clear_display_time();
  static const int kDisplayTimeFieldNumber = 2;
  inline ::google::protobuf::int32 display_time() const;
  inline void set_display_time(::google::protobuf::int32 value);

  // optional string menu_string = 3;
  inline bool has_menu_string() const;
  inline void clear_menu_string();
  static const int kMenuStringFieldNumber = 3;
  inline const ::std::string& menu_string() const;
  inline void set_menu_string(const ::std::string& value);
  inline void set_menu_string(const char* value);
  inline void set_menu_string(const char* value, size_t size);
  inline ::std::string* mutable_menu_string();
  inline ::std::string* release_menu_string();
  inline void set_allocated_menu_string(::std::string* menu_string);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ShowMenu)
 private:
  inline void set_has_bits_valid_slots();
  inline void clear_has_bits_valid_slots();
  inline void set_has_display_time();
  inline void clear_has_display_time();
  inline void set_has_menu_string();
  inline void clear_has_menu_string();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 bits_valid_slots_;
  ::google::protobuf::int32 display_time_;
  ::std::string* menu_string_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ShowMenu* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_BarTime : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_BarTime();
  virtual ~CCSUsrMsg_BarTime();

  CCSUsrMsg_BarTime(const CCSUsrMsg_BarTime& from);

  inline CCSUsrMsg_BarTime& operator=(const CCSUsrMsg_BarTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_BarTime& default_instance();

  void Swap(CCSUsrMsg_BarTime* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_BarTime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_BarTime& from);
  void MergeFrom(const CCSUsrMsg_BarTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string time = 1;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 1;
  inline const ::std::string& time() const;
  inline void set_time(const ::std::string& value);
  inline void set_time(const char* value);
  inline void set_time(const char* value, size_t size);
  inline ::std::string* mutable_time();
  inline ::std::string* release_time();
  inline void set_allocated_time(::std::string* time);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_BarTime)
 private:
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_BarTime* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_AmmoDenied : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_AmmoDenied();
  virtual ~CCSUsrMsg_AmmoDenied();

  CCSUsrMsg_AmmoDenied(const CCSUsrMsg_AmmoDenied& from);

  inline CCSUsrMsg_AmmoDenied& operator=(const CCSUsrMsg_AmmoDenied& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_AmmoDenied& default_instance();

  void Swap(CCSUsrMsg_AmmoDenied* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_AmmoDenied* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_AmmoDenied& from);
  void MergeFrom(const CCSUsrMsg_AmmoDenied& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ammoIdx = 1;
  inline bool has_ammoidx() const;
  inline void clear_ammoidx();
  static const int kAmmoIdxFieldNumber = 1;
  inline ::google::protobuf::int32 ammoidx() const;
  inline void set_ammoidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_AmmoDenied)
 private:
  inline void set_has_ammoidx();
  inline void clear_has_ammoidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ammoidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_AmmoDenied* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MarkAchievement : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MarkAchievement();
  virtual ~CCSUsrMsg_MarkAchievement();

  CCSUsrMsg_MarkAchievement(const CCSUsrMsg_MarkAchievement& from);

  inline CCSUsrMsg_MarkAchievement& operator=(const CCSUsrMsg_MarkAchievement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MarkAchievement& default_instance();

  void Swap(CCSUsrMsg_MarkAchievement* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_MarkAchievement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MarkAchievement& from);
  void MergeFrom(const CCSUsrMsg_MarkAchievement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string achievement = 1;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 1;
  inline const ::std::string& achievement() const;
  inline void set_achievement(const ::std::string& value);
  inline void set_achievement(const char* value);
  inline void set_achievement(const char* value, size_t size);
  inline ::std::string* mutable_achievement();
  inline ::std::string* release_achievement();
  inline void set_allocated_achievement(::std::string* achievement);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MarkAchievement)
 private:
  inline void set_has_achievement();
  inline void clear_has_achievement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* achievement_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_MarkAchievement* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_MatchStatsUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_MatchStatsUpdate();
  virtual ~CCSUsrMsg_MatchStatsUpdate();

  CCSUsrMsg_MatchStatsUpdate(const CCSUsrMsg_MatchStatsUpdate& from);

  inline CCSUsrMsg_MatchStatsUpdate& operator=(const CCSUsrMsg_MatchStatsUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_MatchStatsUpdate& default_instance();

  void Swap(CCSUsrMsg_MatchStatsUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_MatchStatsUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  void MergeFrom(const CCSUsrMsg_MatchStatsUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string update = 1;
  inline bool has_update() const;
  inline void clear_update();
  static const int kUpdateFieldNumber = 1;
  inline const ::std::string& update() const;
  inline void set_update(const ::std::string& value);
  inline void set_update(const char* value);
  inline void set_update(const char* value, size_t size);
  inline ::std::string* mutable_update();
  inline ::std::string* release_update();
  inline void set_allocated_update(::std::string* update);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_MatchStatsUpdate)
 private:
  inline void set_has_update();
  inline void clear_has_update();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* update_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_MatchStatsUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ItemDrop : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ItemDrop();
  virtual ~CCSUsrMsg_ItemDrop();

  CCSUsrMsg_ItemDrop(const CCSUsrMsg_ItemDrop& from);

  inline CCSUsrMsg_ItemDrop& operator=(const CCSUsrMsg_ItemDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ItemDrop& default_instance();

  void Swap(CCSUsrMsg_ItemDrop* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ItemDrop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ItemDrop& from);
  void MergeFrom(const CCSUsrMsg_ItemDrop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);

  // optional bool death = 2;
  inline bool has_death() const;
  inline void clear_death();
  static const int kDeathFieldNumber = 2;
  inline bool death() const;
  inline void set_death(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ItemDrop)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_death();
  inline void clear_has_death();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 itemid_;
  bool death_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ItemDrop* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GlowPropTurnOff : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_GlowPropTurnOff();
  virtual ~CCSUsrMsg_GlowPropTurnOff();

  CCSUsrMsg_GlowPropTurnOff(const CCSUsrMsg_GlowPropTurnOff& from);

  inline CCSUsrMsg_GlowPropTurnOff& operator=(const CCSUsrMsg_GlowPropTurnOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_GlowPropTurnOff& default_instance();

  void Swap(CCSUsrMsg_GlowPropTurnOff* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_GlowPropTurnOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  void MergeFrom(const CCSUsrMsg_GlowPropTurnOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GlowPropTurnOff)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_GlowPropTurnOff* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RoundBackupFilenames : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RoundBackupFilenames();
  virtual ~CCSUsrMsg_RoundBackupFilenames();

  CCSUsrMsg_RoundBackupFilenames(const CCSUsrMsg_RoundBackupFilenames& from);

  inline CCSUsrMsg_RoundBackupFilenames& operator=(const CCSUsrMsg_RoundBackupFilenames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RoundBackupFilenames& default_instance();

  void Swap(CCSUsrMsg_RoundBackupFilenames* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_RoundBackupFilenames* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  void MergeFrom(const CCSUsrMsg_RoundBackupFilenames& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional string filename = 3;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 3;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional string nicename = 4;
  inline bool has_nicename() const;
  inline void clear_nicename();
  static const int kNicenameFieldNumber = 4;
  inline const ::std::string& nicename() const;
  inline void set_nicename(const ::std::string& value);
  inline void set_nicename(const char* value);
  inline void set_nicename(const char* value, size_t size);
  inline ::std::string* mutable_nicename();
  inline ::std::string* release_nicename();
  inline void set_allocated_nicename(::std::string* nicename);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RoundBackupFilenames)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_nicename();
  inline void clear_has_nicename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 index_;
  ::std::string* filename_;
  ::std::string* nicename_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_RoundBackupFilenames* default_instance_;
};
// -------------------------------------------------------------------

class XpProgressData : public ::google::protobuf::Message {
 public:
  XpProgressData();
  virtual ~XpProgressData();

  XpProgressData(const XpProgressData& from);

  inline XpProgressData& operator=(const XpProgressData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const XpProgressData& default_instance();

  void Swap(XpProgressData* other);

  // implements Message ----------------------------------------------

  XpProgressData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const XpProgressData& from);
  void MergeFrom(const XpProgressData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 xp_points = 1;
  inline bool has_xp_points() const;
  inline void clear_xp_points();
  static const int kXpPointsFieldNumber = 1;
  inline ::google::protobuf::uint32 xp_points() const;
  inline void set_xp_points(::google::protobuf::uint32 value);

  // optional int32 xp_category = 2;
  inline bool has_xp_category() const;
  inline void clear_xp_category();
  static const int kXpCategoryFieldNumber = 2;
  inline ::google::protobuf::int32 xp_category() const;
  inline void set_xp_category(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:XpProgressData)
 private:
  inline void set_has_xp_points();
  inline void clear_has_xp_points();
  inline void set_has_xp_category();
  inline void clear_has_xp_category();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 xp_points_;
  ::google::protobuf::int32 xp_category_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static XpProgressData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded : public ::google::protobuf::Message {
 public:
  CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded();
  virtual ~CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded();

  CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from);

  inline CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& operator=(const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& default_instance();

  void Swap(CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* other);

  // implements Message ----------------------------------------------

  CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from);
  void MergeFrom(const CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .XpProgressData xp_progress_data = 1;
  inline int xp_progress_data_size() const;
  inline void clear_xp_progress_data();
  static const int kXpProgressDataFieldNumber = 1;
  inline const ::XpProgressData& xp_progress_data(int index) const;
  inline ::XpProgressData* mutable_xp_progress_data(int index);
  inline ::XpProgressData* add_xp_progress_data();
  inline const ::google::protobuf::RepeatedPtrField< ::XpProgressData >&
      xp_progress_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::XpProgressData >*
      mutable_xp_progress_data();

  // optional uint32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 account_id() const;
  inline void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 current_xp = 3;
  inline bool has_current_xp() const;
  inline void clear_current_xp();
  static const int kCurrentXpFieldNumber = 3;
  inline ::google::protobuf::uint32 current_xp() const;
  inline void set_current_xp(::google::protobuf::uint32 value);

  // optional uint32 current_level = 4;
  inline bool has_current_level() const;
  inline void clear_current_level();
  static const int kCurrentLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 current_level() const;
  inline void set_current_level(::google::protobuf::uint32 value);

  // optional uint32 upgraded_defidx = 5;
  inline bool has_upgraded_defidx() const;
  inline void clear_upgraded_defidx();
  static const int kUpgradedDefidxFieldNumber = 5;
  inline ::google::protobuf::uint32 upgraded_defidx() const;
  inline void set_upgraded_defidx(::google::protobuf::uint32 value);

  // optional uint32 operation_points_awarded = 6;
  inline bool has_operation_points_awarded() const;
  inline void clear_operation_points_awarded();
  static const int kOperationPointsAwardedFieldNumber = 6;
  inline ::google::protobuf::uint32 operation_points_awarded() const;
  inline void set_operation_points_awarded(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
 private:
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_current_xp();
  inline void clear_has_current_xp();
  inline void set_has_current_level();
  inline void clear_has_current_level();
  inline void set_has_upgraded_defidx();
  inline void clear_has_upgraded_defidx();
  inline void set_has_operation_points_awarded();
  inline void clear_has_operation_points_awarded();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::XpProgressData > xp_progress_data_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 current_xp_;
  ::google::protobuf::uint32 current_level_;
  ::google::protobuf::uint32 upgraded_defidx_;
  ::google::protobuf::uint32 operation_points_awarded_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_XpUpdate : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_XpUpdate();
  virtual ~CCSUsrMsg_XpUpdate();

  CCSUsrMsg_XpUpdate(const CCSUsrMsg_XpUpdate& from);

  inline CCSUsrMsg_XpUpdate& operator=(const CCSUsrMsg_XpUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_XpUpdate& default_instance();

  void Swap(CCSUsrMsg_XpUpdate* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_XpUpdate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_XpUpdate& from);
  void MergeFrom(const CCSUsrMsg_XpUpdate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& data() const;
  inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* mutable_data();
  inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* release_data();
  inline void set_allocated_data(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_XpUpdate)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_XpUpdate* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_QuestProgress : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_QuestProgress();
  virtual ~CCSUsrMsg_QuestProgress();

  CCSUsrMsg_QuestProgress(const CCSUsrMsg_QuestProgress& from);

  inline CCSUsrMsg_QuestProgress& operator=(const CCSUsrMsg_QuestProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_QuestProgress& default_instance();

  void Swap(CCSUsrMsg_QuestProgress* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_QuestProgress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_QuestProgress& from);
  void MergeFrom(const CCSUsrMsg_QuestProgress& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint32 value);

  // optional uint32 normal_points = 2;
  inline bool has_normal_points() const;
  inline void clear_normal_points();
  static const int kNormalPointsFieldNumber = 2;
  inline ::google::protobuf::uint32 normal_points() const;
  inline void set_normal_points(::google::protobuf::uint32 value);

  // optional uint32 bonus_points = 3;
  inline bool has_bonus_points() const;
  inline void clear_bonus_points();
  static const int kBonusPointsFieldNumber = 3;
  inline ::google::protobuf::uint32 bonus_points() const;
  inline void set_bonus_points(::google::protobuf::uint32 value);

  // optional bool is_event_quest = 4;
  inline bool has_is_event_quest() const;
  inline void clear_is_event_quest();
  static const int kIsEventQuestFieldNumber = 4;
  inline bool is_event_quest() const;
  inline void set_is_event_quest(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_QuestProgress)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_normal_points();
  inline void clear_has_normal_points();
  inline void set_has_bonus_points();
  inline void clear_has_bonus_points();
  inline void set_has_is_event_quest();
  inline void clear_has_is_event_quest();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 normal_points_;
  ::google::protobuf::uint32 bonus_points_;
  bool is_event_quest_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_QuestProgress* default_instance_;
};
// -------------------------------------------------------------------

class ScoreLeaderboardData_Entry : public ::google::protobuf::Message {
 public:
  ScoreLeaderboardData_Entry();
  virtual ~ScoreLeaderboardData_Entry();

  ScoreLeaderboardData_Entry(const ScoreLeaderboardData_Entry& from);

  inline ScoreLeaderboardData_Entry& operator=(const ScoreLeaderboardData_Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreLeaderboardData_Entry& default_instance();

  void Swap(ScoreLeaderboardData_Entry* other);

  // implements Message ----------------------------------------------

  ScoreLeaderboardData_Entry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreLeaderboardData_Entry& from);
  void MergeFrom(const ScoreLeaderboardData_Entry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 tag = 1;
  inline bool has_tag() const;
  inline void clear_tag();
  static const int kTagFieldNumber = 1;
  inline ::google::protobuf::uint32 tag() const;
  inline void set_tag(::google::protobuf::uint32 value);

  // optional uint32 val = 2;
  inline bool has_val() const;
  inline void clear_val();
  static const int kValFieldNumber = 2;
  inline ::google::protobuf::uint32 val() const;
  inline void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ScoreLeaderboardData.Entry)
 private:
  inline void set_has_tag();
  inline void clear_has_tag();
  inline void set_has_val();
  inline void clear_has_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tag_;
  ::google::protobuf::uint32 val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static ScoreLeaderboardData_Entry* default_instance_;
};
// -------------------------------------------------------------------

class ScoreLeaderboardData_AccountEntries : public ::google::protobuf::Message {
 public:
  ScoreLeaderboardData_AccountEntries();
  virtual ~ScoreLeaderboardData_AccountEntries();

  ScoreLeaderboardData_AccountEntries(const ScoreLeaderboardData_AccountEntries& from);

  inline ScoreLeaderboardData_AccountEntries& operator=(const ScoreLeaderboardData_AccountEntries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreLeaderboardData_AccountEntries& default_instance();

  void Swap(ScoreLeaderboardData_AccountEntries* other);

  // implements Message ----------------------------------------------

  ScoreLeaderboardData_AccountEntries* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreLeaderboardData_AccountEntries& from);
  void MergeFrom(const ScoreLeaderboardData_AccountEntries& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // repeated .ScoreLeaderboardData.Entry entries = 2;
  inline int entries_size() const;
  inline void clear_entries();
  static const int kEntriesFieldNumber = 2;
  inline const ::ScoreLeaderboardData_Entry& entries(int index) const;
  inline ::ScoreLeaderboardData_Entry* mutable_entries(int index);
  inline ::ScoreLeaderboardData_Entry* add_entries();
  inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >&
      entries() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >*
      mutable_entries();

  // @@protoc_insertion_point(class_scope:ScoreLeaderboardData.AccountEntries)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry > entries_;
  ::google::protobuf::uint32 accountid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static ScoreLeaderboardData_AccountEntries* default_instance_;
};
// -------------------------------------------------------------------

class ScoreLeaderboardData : public ::google::protobuf::Message {
 public:
  ScoreLeaderboardData();
  virtual ~ScoreLeaderboardData();

  ScoreLeaderboardData(const ScoreLeaderboardData& from);

  inline ScoreLeaderboardData& operator=(const ScoreLeaderboardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreLeaderboardData& default_instance();

  void Swap(ScoreLeaderboardData* other);

  // implements Message ----------------------------------------------

  ScoreLeaderboardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScoreLeaderboardData& from);
  void MergeFrom(const ScoreLeaderboardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ScoreLeaderboardData_Entry Entry;
  typedef ScoreLeaderboardData_AccountEntries AccountEntries;

  // accessors -------------------------------------------------------

  // optional uint64 quest_id = 1;
  inline bool has_quest_id() const;
  inline void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::uint64 quest_id() const;
  inline void set_quest_id(::google::protobuf::uint64 value);

  // optional uint32 score = 2;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 2;
  inline ::google::protobuf::uint32 score() const;
  inline void set_score(::google::protobuf::uint32 value);

  // repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
  inline int accountentries_size() const;
  inline void clear_accountentries();
  static const int kAccountentriesFieldNumber = 3;
  inline const ::ScoreLeaderboardData_AccountEntries& accountentries(int index) const;
  inline ::ScoreLeaderboardData_AccountEntries* mutable_accountentries(int index);
  inline ::ScoreLeaderboardData_AccountEntries* add_accountentries();
  inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_AccountEntries >&
      accountentries() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_AccountEntries >*
      mutable_accountentries();

  // repeated .ScoreLeaderboardData.Entry matchentries = 5;
  inline int matchentries_size() const;
  inline void clear_matchentries();
  static const int kMatchentriesFieldNumber = 5;
  inline const ::ScoreLeaderboardData_Entry& matchentries(int index) const;
  inline ::ScoreLeaderboardData_Entry* mutable_matchentries(int index);
  inline ::ScoreLeaderboardData_Entry* add_matchentries();
  inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >&
      matchentries() const;
  inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >*
      mutable_matchentries();

  // @@protoc_insertion_point(class_scope:ScoreLeaderboardData)
 private:
  inline void set_has_quest_id();
  inline void clear_has_quest_id();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 quest_id_;
  ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_AccountEntries > accountentries_;
  ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry > matchentries_;
  ::google::protobuf::uint32 score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static ScoreLeaderboardData* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ScoreLeaderboardData : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ScoreLeaderboardData();
  virtual ~CCSUsrMsg_ScoreLeaderboardData();

  CCSUsrMsg_ScoreLeaderboardData(const CCSUsrMsg_ScoreLeaderboardData& from);

  inline CCSUsrMsg_ScoreLeaderboardData& operator=(const CCSUsrMsg_ScoreLeaderboardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ScoreLeaderboardData& default_instance();

  void Swap(CCSUsrMsg_ScoreLeaderboardData* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ScoreLeaderboardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ScoreLeaderboardData& from);
  void MergeFrom(const CCSUsrMsg_ScoreLeaderboardData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ScoreLeaderboardData data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::ScoreLeaderboardData& data() const;
  inline ::ScoreLeaderboardData* mutable_data();
  inline ::ScoreLeaderboardData* release_data();
  inline void set_allocated_data(::ScoreLeaderboardData* data);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ScoreLeaderboardData)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ScoreLeaderboardData* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ScoreLeaderboardData* default_instance_;
};
// -------------------------------------------------------------------

class PlayerDecalDigitalSignature : public ::google::protobuf::Message {
 public:
  PlayerDecalDigitalSignature();
  virtual ~PlayerDecalDigitalSignature();

  PlayerDecalDigitalSignature(const PlayerDecalDigitalSignature& from);

  inline PlayerDecalDigitalSignature& operator=(const PlayerDecalDigitalSignature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDecalDigitalSignature& default_instance();

  void Swap(PlayerDecalDigitalSignature* other);

  // implements Message ----------------------------------------------

  PlayerDecalDigitalSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerDecalDigitalSignature& from);
  void MergeFrom(const PlayerDecalDigitalSignature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes signature = 1;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 1;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const void* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // optional uint32 accountid = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 rtime = 3;
  inline bool has_rtime() const;
  inline void clear_rtime();
  static const int kRtimeFieldNumber = 3;
  inline ::google::protobuf::uint32 rtime() const;
  inline void set_rtime(::google::protobuf::uint32 value);

  // repeated float endpos = 4;
  inline int endpos_size() const;
  inline void clear_endpos();
  static const int kEndposFieldNumber = 4;
  inline float endpos(int index) const;
  inline void set_endpos(int index, float value);
  inline void add_endpos(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      endpos() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_endpos();

  // repeated float startpos = 5;
  inline int startpos_size() const;
  inline void clear_startpos();
  static const int kStartposFieldNumber = 5;
  inline float startpos(int index) const;
  inline void set_startpos(int index, float value);
  inline void add_startpos(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      startpos() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_startpos();

  // repeated float right = 6;
  inline int right_size() const;
  inline void clear_right();
  static const int kRightFieldNumber = 6;
  inline float right(int index) const;
  inline void set_right(int index, float value);
  inline void add_right(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      right() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_right();

  // optional uint32 tx_defidx = 7;
  inline bool has_tx_defidx() const;
  inline void clear_tx_defidx();
  static const int kTxDefidxFieldNumber = 7;
  inline ::google::protobuf::uint32 tx_defidx() const;
  inline void set_tx_defidx(::google::protobuf::uint32 value);

  // optional int32 entindex = 8;
  inline bool has_entindex() const;
  inline void clear_entindex();
  static const int kEntindexFieldNumber = 8;
  inline ::google::protobuf::int32 entindex() const;
  inline void set_entindex(::google::protobuf::int32 value);

  // optional uint32 hitbox = 9;
  inline bool has_hitbox() const;
  inline void clear_hitbox();
  static const int kHitboxFieldNumber = 9;
  inline ::google::protobuf::uint32 hitbox() const;
  inline void set_hitbox(::google::protobuf::uint32 value);

  // optional float creationtime = 10;
  inline bool has_creationtime() const;
  inline void clear_creationtime();
  static const int kCreationtimeFieldNumber = 10;
  inline float creationtime() const;
  inline void set_creationtime(float value);

  // optional uint32 equipslot = 11;
  inline bool has_equipslot() const;
  inline void clear_equipslot();
  static const int kEquipslotFieldNumber = 11;
  inline ::google::protobuf::uint32 equipslot() const;
  inline void set_equipslot(::google::protobuf::uint32 value);

  // optional uint32 trace_id = 12;
  inline bool has_trace_id() const;
  inline void clear_trace_id();
  static const int kTraceIdFieldNumber = 12;
  inline ::google::protobuf::uint32 trace_id() const;
  inline void set_trace_id(::google::protobuf::uint32 value);

  // repeated float normal = 13;
  inline int normal_size() const;
  inline void clear_normal();
  static const int kNormalFieldNumber = 13;
  inline float normal(int index) const;
  inline void set_normal(int index, float value);
  inline void add_normal(float value);
  inline const ::google::protobuf::RepeatedField< float >&
      normal() const;
  inline ::google::protobuf::RepeatedField< float >*
      mutable_normal();

  // optional uint32 tint_id = 14;
  inline bool has_tint_id() const;
  inline void clear_tint_id();
  static const int kTintIdFieldNumber = 14;
  inline ::google::protobuf::uint32 tint_id() const;
  inline void set_tint_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PlayerDecalDigitalSignature)
 private:
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_rtime();
  inline void clear_has_rtime();
  inline void set_has_tx_defidx();
  inline void clear_has_tx_defidx();
  inline void set_has_entindex();
  inline void clear_has_entindex();
  inline void set_has_hitbox();
  inline void clear_has_hitbox();
  inline void set_has_creationtime();
  inline void clear_has_creationtime();
  inline void set_has_equipslot();
  inline void clear_has_equipslot();
  inline void set_has_trace_id();
  inline void clear_has_trace_id();
  inline void set_has_tint_id();
  inline void clear_has_tint_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* signature_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 rtime_;
  ::google::protobuf::RepeatedField< float > endpos_;
  ::google::protobuf::RepeatedField< float > startpos_;
  ::google::protobuf::RepeatedField< float > right_;
  ::google::protobuf::uint32 tx_defidx_;
  ::google::protobuf::int32 entindex_;
  ::google::protobuf::uint32 hitbox_;
  float creationtime_;
  ::google::protobuf::uint32 equipslot_;
  ::google::protobuf::uint32 trace_id_;
  ::google::protobuf::RepeatedField< float > normal_;
  ::google::protobuf::uint32 tint_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static PlayerDecalDigitalSignature* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_PlayerDecalDigitalSignature : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_PlayerDecalDigitalSignature();
  virtual ~CCSUsrMsg_PlayerDecalDigitalSignature();

  CCSUsrMsg_PlayerDecalDigitalSignature(const CCSUsrMsg_PlayerDecalDigitalSignature& from);

  inline CCSUsrMsg_PlayerDecalDigitalSignature& operator=(const CCSUsrMsg_PlayerDecalDigitalSignature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_PlayerDecalDigitalSignature& default_instance();

  void Swap(CCSUsrMsg_PlayerDecalDigitalSignature* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_PlayerDecalDigitalSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from);
  void MergeFrom(const CCSUsrMsg_PlayerDecalDigitalSignature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PlayerDecalDigitalSignature data = 1;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::PlayerDecalDigitalSignature& data() const;
  inline ::PlayerDecalDigitalSignature* mutable_data();
  inline ::PlayerDecalDigitalSignature* release_data();
  inline void set_allocated_data(::PlayerDecalDigitalSignature* data);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_PlayerDecalDigitalSignature)
 private:
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PlayerDecalDigitalSignature* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_PlayerDecalDigitalSignature* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_WeaponSound : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_WeaponSound();
  virtual ~CCSUsrMsg_WeaponSound();

  CCSUsrMsg_WeaponSound(const CCSUsrMsg_WeaponSound& from);

  inline CCSUsrMsg_WeaponSound& operator=(const CCSUsrMsg_WeaponSound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_WeaponSound& default_instance();

  void Swap(CCSUsrMsg_WeaponSound* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_WeaponSound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_WeaponSound& from);
  void MergeFrom(const CCSUsrMsg_WeaponSound& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // optional float origin_x = 2;
  inline bool has_origin_x() const;
  inline void clear_origin_x();
  static const int kOriginXFieldNumber = 2;
  inline float origin_x() const;
  inline void set_origin_x(float value);

  // optional float origin_y = 3;
  inline bool has_origin_y() const;
  inline void clear_origin_y();
  static const int kOriginYFieldNumber = 3;
  inline float origin_y() const;
  inline void set_origin_y(float value);

  // optional float origin_z = 4;
  inline bool has_origin_z() const;
  inline void clear_origin_z();
  static const int kOriginZFieldNumber = 4;
  inline float origin_z() const;
  inline void set_origin_z(float value);

  // optional string sound = 5;
  inline bool has_sound() const;
  inline void clear_sound();
  static const int kSoundFieldNumber = 5;
  inline const ::std::string& sound() const;
  inline void set_sound(const ::std::string& value);
  inline void set_sound(const char* value);
  inline void set_sound(const char* value, size_t size);
  inline ::std::string* mutable_sound();
  inline ::std::string* release_sound();
  inline void set_allocated_sound(::std::string* sound);

  // optional float timestamp = 6;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  inline float timestamp() const;
  inline void set_timestamp(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_WeaponSound)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();
  inline void set_has_origin_x();
  inline void clear_has_origin_x();
  inline void set_has_origin_y();
  inline void clear_has_origin_y();
  inline void set_has_origin_z();
  inline void clear_has_origin_z();
  inline void set_has_sound();
  inline void clear_has_sound();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;
  float origin_x_;
  float origin_y_;
  float origin_z_;
  ::std::string* sound_;
  float timestamp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_WeaponSound* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_UpdateScreenHealthBar : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_UpdateScreenHealthBar();
  virtual ~CCSUsrMsg_UpdateScreenHealthBar();

  CCSUsrMsg_UpdateScreenHealthBar(const CCSUsrMsg_UpdateScreenHealthBar& from);

  inline CCSUsrMsg_UpdateScreenHealthBar& operator=(const CCSUsrMsg_UpdateScreenHealthBar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_UpdateScreenHealthBar& default_instance();

  void Swap(CCSUsrMsg_UpdateScreenHealthBar* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_UpdateScreenHealthBar* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_UpdateScreenHealthBar& from);
  void MergeFrom(const CCSUsrMsg_UpdateScreenHealthBar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // optional float healthratio_old = 2;
  inline bool has_healthratio_old() const;
  inline void clear_healthratio_old();
  static const int kHealthratioOldFieldNumber = 2;
  inline float healthratio_old() const;
  inline void set_healthratio_old(float value);

  // optional float healthratio_new = 3;
  inline bool has_healthratio_new() const;
  inline void clear_healthratio_new();
  static const int kHealthratioNewFieldNumber = 3;
  inline float healthratio_new() const;
  inline void set_healthratio_new(float value);

  // optional int32 style = 4;
  inline bool has_style() const;
  inline void clear_style();
  static const int kStyleFieldNumber = 4;
  inline ::google::protobuf::int32 style() const;
  inline void set_style(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_UpdateScreenHealthBar)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();
  inline void set_has_healthratio_old();
  inline void clear_has_healthratio_old();
  inline void set_has_healthratio_new();
  inline void clear_has_healthratio_new();
  inline void set_has_style();
  inline void clear_has_style();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;
  float healthratio_old_;
  float healthratio_new_;
  ::google::protobuf::int32 style_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_UpdateScreenHealthBar* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_EntityOutlineHighlight : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_EntityOutlineHighlight();
  virtual ~CCSUsrMsg_EntityOutlineHighlight();

  CCSUsrMsg_EntityOutlineHighlight(const CCSUsrMsg_EntityOutlineHighlight& from);

  inline CCSUsrMsg_EntityOutlineHighlight& operator=(const CCSUsrMsg_EntityOutlineHighlight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_EntityOutlineHighlight& default_instance();

  void Swap(CCSUsrMsg_EntityOutlineHighlight* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_EntityOutlineHighlight* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_EntityOutlineHighlight& from);
  void MergeFrom(const CCSUsrMsg_EntityOutlineHighlight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entidx = 1;
  inline bool has_entidx() const;
  inline void clear_entidx();
  static const int kEntidxFieldNumber = 1;
  inline ::google::protobuf::int32 entidx() const;
  inline void set_entidx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_EntityOutlineHighlight)
 private:
  inline void set_has_entidx();
  inline void clear_has_entidx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 entidx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_EntityOutlineHighlight* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SSUI : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SSUI();
  virtual ~CCSUsrMsg_SSUI();

  CCSUsrMsg_SSUI(const CCSUsrMsg_SSUI& from);

  inline CCSUsrMsg_SSUI& operator=(const CCSUsrMsg_SSUI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SSUI& default_instance();

  void Swap(CCSUsrMsg_SSUI* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SSUI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SSUI& from);
  void MergeFrom(const CCSUsrMsg_SSUI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool show = 1;
  inline bool has_show() const;
  inline void clear_show();
  static const int kShowFieldNumber = 1;
  inline bool show() const;
  inline void set_show(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SSUI)
 private:
  inline void set_has_show();
  inline void clear_has_show();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool show_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SSUI* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SurvivalStats_Fact : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SurvivalStats_Fact();
  virtual ~CCSUsrMsg_SurvivalStats_Fact();

  CCSUsrMsg_SurvivalStats_Fact(const CCSUsrMsg_SurvivalStats_Fact& from);

  inline CCSUsrMsg_SurvivalStats_Fact& operator=(const CCSUsrMsg_SurvivalStats_Fact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SurvivalStats_Fact& default_instance();

  void Swap(CCSUsrMsg_SurvivalStats_Fact* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SurvivalStats_Fact* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SurvivalStats_Fact& from);
  void MergeFrom(const CCSUsrMsg_SurvivalStats_Fact& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 display = 2;
  inline bool has_display() const;
  inline void clear_display();
  static const int kDisplayFieldNumber = 2;
  inline ::google::protobuf::int32 display() const;
  inline void set_display(::google::protobuf::int32 value);

  // optional int32 value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional float interestingness = 4;
  inline bool has_interestingness() const;
  inline void clear_interestingness();
  static const int kInterestingnessFieldNumber = 4;
  inline float interestingness() const;
  inline void set_interestingness(float value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SurvivalStats.Fact)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_display();
  inline void clear_has_display();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_interestingness();
  inline void clear_has_interestingness();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 display_;
  ::google::protobuf::int32 value_;
  float interestingness_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SurvivalStats_Fact* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SurvivalStats_Placement : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SurvivalStats_Placement();
  virtual ~CCSUsrMsg_SurvivalStats_Placement();

  CCSUsrMsg_SurvivalStats_Placement(const CCSUsrMsg_SurvivalStats_Placement& from);

  inline CCSUsrMsg_SurvivalStats_Placement& operator=(const CCSUsrMsg_SurvivalStats_Placement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SurvivalStats_Placement& default_instance();

  void Swap(CCSUsrMsg_SurvivalStats_Placement* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SurvivalStats_Placement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SurvivalStats_Placement& from);
  void MergeFrom(const CCSUsrMsg_SurvivalStats_Placement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 xuid = 1;
  inline bool has_xuid() const;
  inline void clear_xuid();
  static const int kXuidFieldNumber = 1;
  inline ::google::protobuf::uint64 xuid() const;
  inline void set_xuid(::google::protobuf::uint64 value);

  // optional int32 teamnumber = 2;
  inline bool has_teamnumber() const;
  inline void clear_teamnumber();
  static const int kTeamnumberFieldNumber = 2;
  inline ::google::protobuf::int32 teamnumber() const;
  inline void set_teamnumber(::google::protobuf::int32 value);

  // optional int32 placement = 3;
  inline bool has_placement() const;
  inline void clear_placement();
  static const int kPlacementFieldNumber = 3;
  inline ::google::protobuf::int32 placement() const;
  inline void set_placement(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SurvivalStats.Placement)
 private:
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_teamnumber();
  inline void clear_has_teamnumber();
  inline void set_has_placement();
  inline void clear_has_placement();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::int32 teamnumber_;
  ::google::protobuf::int32 placement_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SurvivalStats_Placement* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SurvivalStats_Damage : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SurvivalStats_Damage();
  virtual ~CCSUsrMsg_SurvivalStats_Damage();

  CCSUsrMsg_SurvivalStats_Damage(const CCSUsrMsg_SurvivalStats_Damage& from);

  inline CCSUsrMsg_SurvivalStats_Damage& operator=(const CCSUsrMsg_SurvivalStats_Damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SurvivalStats_Damage& default_instance();

  void Swap(CCSUsrMsg_SurvivalStats_Damage* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SurvivalStats_Damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SurvivalStats_Damage& from);
  void MergeFrom(const CCSUsrMsg_SurvivalStats_Damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 xuid = 1;
  inline bool has_xuid() const;
  inline void clear_xuid();
  static const int kXuidFieldNumber = 1;
  inline ::google::protobuf::uint64 xuid() const;
  inline void set_xuid(::google::protobuf::uint64 value);

  // optional int32 to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline ::google::protobuf::int32 to() const;
  inline void set_to(::google::protobuf::int32 value);

  // optional int32 to_hits = 3;
  inline bool has_to_hits() const;
  inline void clear_to_hits();
  static const int kToHitsFieldNumber = 3;
  inline ::google::protobuf::int32 to_hits() const;
  inline void set_to_hits(::google::protobuf::int32 value);

  // optional int32 from = 4;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 4;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);

  // optional int32 from_hits = 5;
  inline bool has_from_hits() const;
  inline void clear_from_hits();
  static const int kFromHitsFieldNumber = 5;
  inline ::google::protobuf::int32 from_hits() const;
  inline void set_from_hits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SurvivalStats.Damage)
 private:
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_to_hits();
  inline void clear_has_to_hits();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_from_hits();
  inline void clear_has_from_hits();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::int32 to_;
  ::google::protobuf::int32 to_hits_;
  ::google::protobuf::int32 from_;
  ::google::protobuf::int32 from_hits_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SurvivalStats_Damage* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_SurvivalStats : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_SurvivalStats();
  virtual ~CCSUsrMsg_SurvivalStats();

  CCSUsrMsg_SurvivalStats(const CCSUsrMsg_SurvivalStats& from);

  inline CCSUsrMsg_SurvivalStats& operator=(const CCSUsrMsg_SurvivalStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_SurvivalStats& default_instance();

  void Swap(CCSUsrMsg_SurvivalStats* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_SurvivalStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_SurvivalStats& from);
  void MergeFrom(const CCSUsrMsg_SurvivalStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CCSUsrMsg_SurvivalStats_Fact Fact;
  typedef CCSUsrMsg_SurvivalStats_Placement Placement;
  typedef CCSUsrMsg_SurvivalStats_Damage Damage;

  // accessors -------------------------------------------------------

  // optional uint64 xuid = 1;
  inline bool has_xuid() const;
  inline void clear_xuid();
  static const int kXuidFieldNumber = 1;
  inline ::google::protobuf::uint64 xuid() const;
  inline void set_xuid(::google::protobuf::uint64 value);

  // repeated .CCSUsrMsg_SurvivalStats.Fact facts = 2;
  inline int facts_size() const;
  inline void clear_facts();
  static const int kFactsFieldNumber = 2;
  inline const ::CCSUsrMsg_SurvivalStats_Fact& facts(int index) const;
  inline ::CCSUsrMsg_SurvivalStats_Fact* mutable_facts(int index);
  inline ::CCSUsrMsg_SurvivalStats_Fact* add_facts();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Fact >&
      facts() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Fact >*
      mutable_facts();

  // repeated .CCSUsrMsg_SurvivalStats.Placement users = 3;
  inline int users_size() const;
  inline void clear_users();
  static const int kUsersFieldNumber = 3;
  inline const ::CCSUsrMsg_SurvivalStats_Placement& users(int index) const;
  inline ::CCSUsrMsg_SurvivalStats_Placement* mutable_users(int index);
  inline ::CCSUsrMsg_SurvivalStats_Placement* add_users();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Placement >&
      users() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Placement >*
      mutable_users();

  // repeated .CCSUsrMsg_SurvivalStats.Damage damages = 5;
  inline int damages_size() const;
  inline void clear_damages();
  static const int kDamagesFieldNumber = 5;
  inline const ::CCSUsrMsg_SurvivalStats_Damage& damages(int index) const;
  inline ::CCSUsrMsg_SurvivalStats_Damage* mutable_damages(int index);
  inline ::CCSUsrMsg_SurvivalStats_Damage* add_damages();
  inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Damage >&
      damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Damage >*
      mutable_damages();

  // optional int32 ticknumber = 4;
  inline bool has_ticknumber() const;
  inline void clear_ticknumber();
  static const int kTicknumberFieldNumber = 4;
  inline ::google::protobuf::int32 ticknumber() const;
  inline void set_ticknumber(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_SurvivalStats)
 private:
  inline void set_has_xuid();
  inline void clear_has_xuid();
  inline void set_has_ticknumber();
  inline void clear_has_ticknumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 xuid_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Fact > facts_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Placement > users_;
  ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Damage > damages_;
  ::google::protobuf::int32 ticknumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_SurvivalStats* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ResetHud : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ResetHud();
  virtual ~CCSUsrMsg_ResetHud();

  CCSUsrMsg_ResetHud(const CCSUsrMsg_ResetHud& from);

  inline CCSUsrMsg_ResetHud& operator=(const CCSUsrMsg_ResetHud& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ResetHud& default_instance();

  void Swap(CCSUsrMsg_ResetHud* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ResetHud* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ResetHud& from);
  void MergeFrom(const CCSUsrMsg_ResetHud& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reset = 1;
  inline bool has_reset() const;
  inline void clear_reset();
  static const int kResetFieldNumber = 1;
  inline bool reset() const;
  inline void set_reset(bool value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ResetHud)
 private:
  inline void set_has_reset();
  inline void clear_has_reset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool reset_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ResetHud* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_GameTitle : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_GameTitle();
  virtual ~CCSUsrMsg_GameTitle();

  CCSUsrMsg_GameTitle(const CCSUsrMsg_GameTitle& from);

  inline CCSUsrMsg_GameTitle& operator=(const CCSUsrMsg_GameTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_GameTitle& default_instance();

  void Swap(CCSUsrMsg_GameTitle* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_GameTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_GameTitle& from);
  void MergeFrom(const CCSUsrMsg_GameTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_GameTitle)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_GameTitle* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_RequestState : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_RequestState();
  virtual ~CCSUsrMsg_RequestState();

  CCSUsrMsg_RequestState(const CCSUsrMsg_RequestState& from);

  inline CCSUsrMsg_RequestState& operator=(const CCSUsrMsg_RequestState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_RequestState& default_instance();

  void Swap(CCSUsrMsg_RequestState* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_RequestState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_RequestState& from);
  void MergeFrom(const CCSUsrMsg_RequestState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_RequestState)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_RequestState* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_StopSpectatorMode : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_StopSpectatorMode();
  virtual ~CCSUsrMsg_StopSpectatorMode();

  CCSUsrMsg_StopSpectatorMode(const CCSUsrMsg_StopSpectatorMode& from);

  inline CCSUsrMsg_StopSpectatorMode& operator=(const CCSUsrMsg_StopSpectatorMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_StopSpectatorMode& default_instance();

  void Swap(CCSUsrMsg_StopSpectatorMode* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_StopSpectatorMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void MergeFrom(const CCSUsrMsg_StopSpectatorMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_StopSpectatorMode)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_StopSpectatorMode* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_DisconnectToLobby : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_DisconnectToLobby();
  virtual ~CCSUsrMsg_DisconnectToLobby();

  CCSUsrMsg_DisconnectToLobby(const CCSUsrMsg_DisconnectToLobby& from);

  inline CCSUsrMsg_DisconnectToLobby& operator=(const CCSUsrMsg_DisconnectToLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_DisconnectToLobby& default_instance();

  void Swap(CCSUsrMsg_DisconnectToLobby* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_DisconnectToLobby* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void MergeFrom(const CCSUsrMsg_DisconnectToLobby& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_DisconnectToLobby)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_DisconnectToLobby* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_WarmupHasEnded : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_WarmupHasEnded();
  virtual ~CCSUsrMsg_WarmupHasEnded();

  CCSUsrMsg_WarmupHasEnded(const CCSUsrMsg_WarmupHasEnded& from);

  inline CCSUsrMsg_WarmupHasEnded& operator=(const CCSUsrMsg_WarmupHasEnded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_WarmupHasEnded& default_instance();

  void Swap(CCSUsrMsg_WarmupHasEnded* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_WarmupHasEnded* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void MergeFrom(const CCSUsrMsg_WarmupHasEnded& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_WarmupHasEnded)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_WarmupHasEnded* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ClientInfo : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ClientInfo();
  virtual ~CCSUsrMsg_ClientInfo();

  CCSUsrMsg_ClientInfo(const CCSUsrMsg_ClientInfo& from);

  inline CCSUsrMsg_ClientInfo& operator=(const CCSUsrMsg_ClientInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ClientInfo& default_instance();

  void Swap(CCSUsrMsg_ClientInfo* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ClientInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ClientInfo& from);
  void MergeFrom(const CCSUsrMsg_ClientInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dummy = 1;
  inline bool has_dummy() const;
  inline void clear_dummy();
  static const int kDummyFieldNumber = 1;
  inline ::google::protobuf::int32 dummy() const;
  inline void set_dummy(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ClientInfo)
 private:
  inline void set_has_dummy();
  inline void clear_has_dummy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dummy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ClientInfo* default_instance_;
};
// -------------------------------------------------------------------

class CCSUsrMsg_ServerRankRevealAll : public ::google::protobuf::Message {
 public:
  CCSUsrMsg_ServerRankRevealAll();
  virtual ~CCSUsrMsg_ServerRankRevealAll();

  CCSUsrMsg_ServerRankRevealAll(const CCSUsrMsg_ServerRankRevealAll& from);

  inline CCSUsrMsg_ServerRankRevealAll& operator=(const CCSUsrMsg_ServerRankRevealAll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCSUsrMsg_ServerRankRevealAll& default_instance();

  void Swap(CCSUsrMsg_ServerRankRevealAll* other);

  // implements Message ----------------------------------------------

  CCSUsrMsg_ServerRankRevealAll* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  void MergeFrom(const CCSUsrMsg_ServerRankRevealAll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seconds_till_shutdown = 1;
  inline bool has_seconds_till_shutdown() const;
  inline void clear_seconds_till_shutdown();
  static const int kSecondsTillShutdownFieldNumber = 1;
  inline ::google::protobuf::int32 seconds_till_shutdown() const;
  inline void set_seconds_till_shutdown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CCSUsrMsg_ServerRankRevealAll)
 private:
  inline void set_has_seconds_till_shutdown();
  inline void clear_has_seconds_till_shutdown();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seconds_till_shutdown_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_AssignDesc_cstrike15_5fusermessages_2eproto();
  friend void protobuf_ShutdownFile_cstrike15_5fusermessages_2eproto();

  void InitAsDefaultInstance();
  static CCSUsrMsg_ServerRankRevealAll* default_instance_;
};
// ===================================================================


// ===================================================================

// CCSUsrMsg_VGUIMenu_Subkey

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::name() const {
  return *name_;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string str = 2;
inline bool CCSUsrMsg_VGUIMenu_Subkey::has_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_has_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_has_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::clear_str() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    str_->clear();
  }
  clear_has_str();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu_Subkey::str() const {
  return *str_;
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const ::std::string& value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_str(const char* value, size_t size) {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::mutable_str() {
  set_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    str_ = new ::std::string;
  }
  return str_;
}
inline ::std::string* CCSUsrMsg_VGUIMenu_Subkey::release_str() {
  clear_has_str();
  if (str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = str_;
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VGUIMenu_Subkey::set_allocated_str(::std::string* str) {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (str) {
    set_has_str();
    str_ = str;
  } else {
    clear_has_str();
    str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_VGUIMenu

// optional string name = 1;
inline bool CCSUsrMsg_VGUIMenu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VGUIMenu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VGUIMenu::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CCSUsrMsg_VGUIMenu::name() const {
  return *name_;
}
inline void CCSUsrMsg_VGUIMenu::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CCSUsrMsg_VGUIMenu::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VGUIMenu::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CCSUsrMsg_VGUIMenu::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VGUIMenu::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool show = 2;
inline bool CCSUsrMsg_VGUIMenu::has_show() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VGUIMenu::set_has_show() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu::clear_has_show() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VGUIMenu::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CCSUsrMsg_VGUIMenu::show() const {
  return show_;
}
inline void CCSUsrMsg_VGUIMenu::set_show(bool value) {
  set_has_show();
  show_ = value;
}

// repeated .CCSUsrMsg_VGUIMenu.Subkey subkeys = 3;
inline int CCSUsrMsg_VGUIMenu::subkeys_size() const {
  return subkeys_.size();
}
inline void CCSUsrMsg_VGUIMenu::clear_subkeys() {
  subkeys_.Clear();
}
inline const ::CCSUsrMsg_VGUIMenu_Subkey& CCSUsrMsg_VGUIMenu::subkeys(int index) const {
  return subkeys_.Get(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::mutable_subkeys(int index) {
  return subkeys_.Mutable(index);
}
inline ::CCSUsrMsg_VGUIMenu_Subkey* CCSUsrMsg_VGUIMenu::add_subkeys() {
  return subkeys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >&
CCSUsrMsg_VGUIMenu::subkeys() const {
  return subkeys_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VGUIMenu_Subkey >*
CCSUsrMsg_VGUIMenu::mutable_subkeys() {
  return &subkeys_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Geiger

// optional int32 range = 1;
inline bool CCSUsrMsg_Geiger::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Geiger::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Geiger::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Geiger::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline ::google::protobuf::int32 CCSUsrMsg_Geiger::range() const {
  return range_;
}
inline void CCSUsrMsg_Geiger::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Train

// optional int32 train = 1;
inline bool CCSUsrMsg_Train::has_train() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Train::set_has_train() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Train::clear_has_train() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Train::clear_train() {
  train_ = 0;
  clear_has_train();
}
inline ::google::protobuf::int32 CCSUsrMsg_Train::train() const {
  return train_;
}
inline void CCSUsrMsg_Train::set_train(::google::protobuf::int32 value) {
  set_has_train();
  train_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudText

// optional string text = 1;
inline bool CCSUsrMsg_HudText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HudText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HudText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HudText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HudText::text() const {
  return *text_;
}
inline void CCSUsrMsg_HudText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HudText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CCSUsrMsg_HudText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_HudText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SayText::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SayText::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_SayText::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional string text = 2;
inline bool CCSUsrMsg_SayText::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SayText::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SayText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_SayText::text() const {
  return *text_;
}
inline void CCSUsrMsg_SayText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_SayText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_SayText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CCSUsrMsg_SayText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_SayText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool chat = 3;
inline bool CCSUsrMsg_SayText::has_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SayText::clear_has_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SayText::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CCSUsrMsg_SayText::chat() const {
  return chat_;
}
inline void CCSUsrMsg_SayText::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// optional bool textallchat = 4;
inline bool CCSUsrMsg_SayText::has_textallchat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SayText::set_has_textallchat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SayText::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SayText::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CCSUsrMsg_SayText::textallchat() const {
  return textallchat_;
}
inline void CCSUsrMsg_SayText::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SayText2

// optional int32 ent_idx = 1;
inline bool CCSUsrMsg_SayText2::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SayText2::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SayText2::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_SayText2::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_SayText2::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional bool chat = 2;
inline bool CCSUsrMsg_SayText2::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SayText2::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SayText2::clear_chat() {
  chat_ = false;
  clear_has_chat();
}
inline bool CCSUsrMsg_SayText2::chat() const {
  return chat_;
}
inline void CCSUsrMsg_SayText2::set_chat(bool value) {
  set_has_chat();
  chat_ = value;
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_SayText2::has_msg_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_msg_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SayText2::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SayText2::clear_msg_name() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_name_->clear();
  }
  clear_has_msg_name();
}
inline const ::std::string& CCSUsrMsg_SayText2::msg_name() const {
  return *msg_name_;
}
inline void CCSUsrMsg_SayText2::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_SayText2::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_msg_name() {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}
inline ::std::string* CCSUsrMsg_SayText2::release_msg_name() {
  clear_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_name_;
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_SayText2::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_name_;
  }
  if (msg_name) {
    set_has_msg_name();
    msg_name_ = msg_name;
  } else {
    clear_has_msg_name();
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string params = 4;
inline int CCSUsrMsg_SayText2::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_SayText2::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_SayText2::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_SayText2::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_SayText2::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SayText2::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_SayText2::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_SayText2::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_SayText2::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_SayText2::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_SayText2::mutable_params() {
  return &params_;
}

// optional bool textallchat = 5;
inline bool CCSUsrMsg_SayText2::has_textallchat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_SayText2::set_has_textallchat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_SayText2::clear_has_textallchat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_SayText2::clear_textallchat() {
  textallchat_ = false;
  clear_has_textallchat();
}
inline bool CCSUsrMsg_SayText2::textallchat() const {
  return textallchat_;
}
inline void CCSUsrMsg_SayText2::set_textallchat(bool value) {
  set_has_textallchat();
  textallchat_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_TextMsg

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_TextMsg::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_TextMsg::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_TextMsg::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_TextMsg::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
inline ::google::protobuf::int32 CCSUsrMsg_TextMsg::msg_dst() const {
  return msg_dst_;
}
inline void CCSUsrMsg_TextMsg::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
}

// repeated string params = 3;
inline int CCSUsrMsg_TextMsg::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_TextMsg::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_TextMsg::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_TextMsg::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_TextMsg::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_TextMsg::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_TextMsg::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_TextMsg::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_TextMsg::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_TextMsg::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HudMsg

// optional int32 channel = 1;
inline bool CCSUsrMsg_HudMsg::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HudMsg::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HudMsg::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::channel() const {
  return channel_;
}
inline void CCSUsrMsg_HudMsg::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional .CMsgVector2D pos = 2;
inline bool CCSUsrMsg_HudMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_HudMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_HudMsg::clear_pos() {
  if (pos_ != NULL) pos_->::CMsgVector2D::Clear();
  clear_has_pos();
}
inline const ::CMsgVector2D& CCSUsrMsg_HudMsg::pos() const {
  return pos_ != NULL ? *pos_ : *default_instance_->pos_;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) pos_ = new ::CMsgVector2D;
  return pos_;
}
inline ::CMsgVector2D* CCSUsrMsg_HudMsg::release_pos() {
  clear_has_pos();
  ::CMsgVector2D* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CCSUsrMsg_HudMsg::set_allocated_pos(::CMsgVector2D* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
}

// optional .CMsgRGBA clr1 = 3;
inline bool CCSUsrMsg_HudMsg::has_clr1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_clr1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_HudMsg::clear_has_clr1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_HudMsg::clear_clr1() {
  if (clr1_ != NULL) clr1_->::CMsgRGBA::Clear();
  clear_has_clr1();
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr1() const {
  return clr1_ != NULL ? *clr1_ : *default_instance_->clr1_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr1() {
  set_has_clr1();
  if (clr1_ == NULL) clr1_ = new ::CMsgRGBA;
  return clr1_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr1() {
  clear_has_clr1();
  ::CMsgRGBA* temp = clr1_;
  clr1_ = NULL;
  return temp;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr1(::CMsgRGBA* clr1) {
  delete clr1_;
  clr1_ = clr1;
  if (clr1) {
    set_has_clr1();
  } else {
    clear_has_clr1();
  }
}

// optional .CMsgRGBA clr2 = 4;
inline bool CCSUsrMsg_HudMsg::has_clr2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_clr2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_HudMsg::clear_has_clr2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_HudMsg::clear_clr2() {
  if (clr2_ != NULL) clr2_->::CMsgRGBA::Clear();
  clear_has_clr2();
}
inline const ::CMsgRGBA& CCSUsrMsg_HudMsg::clr2() const {
  return clr2_ != NULL ? *clr2_ : *default_instance_->clr2_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::mutable_clr2() {
  set_has_clr2();
  if (clr2_ == NULL) clr2_ = new ::CMsgRGBA;
  return clr2_;
}
inline ::CMsgRGBA* CCSUsrMsg_HudMsg::release_clr2() {
  clear_has_clr2();
  ::CMsgRGBA* temp = clr2_;
  clr2_ = NULL;
  return temp;
}
inline void CCSUsrMsg_HudMsg::set_allocated_clr2(::CMsgRGBA* clr2) {
  delete clr2_;
  clr2_ = clr2;
  if (clr2) {
    set_has_clr2();
  } else {
    clear_has_clr2();
  }
}

// optional int32 effect = 5;
inline bool CCSUsrMsg_HudMsg::has_effect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_effect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_HudMsg::clear_has_effect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_HudMsg::clear_effect() {
  effect_ = 0;
  clear_has_effect();
}
inline ::google::protobuf::int32 CCSUsrMsg_HudMsg::effect() const {
  return effect_;
}
inline void CCSUsrMsg_HudMsg::set_effect(::google::protobuf::int32 value) {
  set_has_effect();
  effect_ = value;
}

// optional float fade_in_time = 6;
inline bool CCSUsrMsg_HudMsg::has_fade_in_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fade_in_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fade_in_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_HudMsg::clear_fade_in_time() {
  fade_in_time_ = 0;
  clear_has_fade_in_time();
}
inline float CCSUsrMsg_HudMsg::fade_in_time() const {
  return fade_in_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_in_time(float value) {
  set_has_fade_in_time();
  fade_in_time_ = value;
}

// optional float fade_out_time = 7;
inline bool CCSUsrMsg_HudMsg::has_fade_out_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fade_out_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fade_out_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_HudMsg::clear_fade_out_time() {
  fade_out_time_ = 0;
  clear_has_fade_out_time();
}
inline float CCSUsrMsg_HudMsg::fade_out_time() const {
  return fade_out_time_;
}
inline void CCSUsrMsg_HudMsg::set_fade_out_time(float value) {
  set_has_fade_out_time();
  fade_out_time_ = value;
}

// optional float hold_time = 9;
inline bool CCSUsrMsg_HudMsg::has_hold_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_hold_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CCSUsrMsg_HudMsg::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CCSUsrMsg_HudMsg::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline float CCSUsrMsg_HudMsg::hold_time() const {
  return hold_time_;
}
inline void CCSUsrMsg_HudMsg::set_hold_time(float value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional float fx_time = 10;
inline bool CCSUsrMsg_HudMsg::has_fx_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_fx_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CCSUsrMsg_HudMsg::clear_has_fx_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CCSUsrMsg_HudMsg::clear_fx_time() {
  fx_time_ = 0;
  clear_has_fx_time();
}
inline float CCSUsrMsg_HudMsg::fx_time() const {
  return fx_time_;
}
inline void CCSUsrMsg_HudMsg::set_fx_time(float value) {
  set_has_fx_time();
  fx_time_ = value;
}

// optional string text = 11;
inline bool CCSUsrMsg_HudMsg::has_text() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CCSUsrMsg_HudMsg::set_has_text() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CCSUsrMsg_HudMsg::clear_has_text() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CCSUsrMsg_HudMsg::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HudMsg::text() const {
  return *text_;
}
inline void CCSUsrMsg_HudMsg::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudMsg::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HudMsg::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HudMsg::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CCSUsrMsg_HudMsg::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_HudMsg::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_Shake

// optional int32 command = 1;
inline bool CCSUsrMsg_Shake::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Shake::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Shake::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::google::protobuf::int32 CCSUsrMsg_Shake::command() const {
  return command_;
}
inline void CCSUsrMsg_Shake::set_command(::google::protobuf::int32 value) {
  set_has_command();
  command_ = value;
}

// optional float local_amplitude = 2;
inline bool CCSUsrMsg_Shake::has_local_amplitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_local_amplitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Shake::clear_has_local_amplitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Shake::clear_local_amplitude() {
  local_amplitude_ = 0;
  clear_has_local_amplitude();
}
inline float CCSUsrMsg_Shake::local_amplitude() const {
  return local_amplitude_;
}
inline void CCSUsrMsg_Shake::set_local_amplitude(float value) {
  set_has_local_amplitude();
  local_amplitude_ = value;
}

// optional float frequency = 3;
inline bool CCSUsrMsg_Shake::has_frequency() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_frequency() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Shake::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Shake::clear_frequency() {
  frequency_ = 0;
  clear_has_frequency();
}
inline float CCSUsrMsg_Shake::frequency() const {
  return frequency_;
}
inline void CCSUsrMsg_Shake::set_frequency(float value) {
  set_has_frequency();
  frequency_ = value;
}

// optional float duration = 4;
inline bool CCSUsrMsg_Shake::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_Shake::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_Shake::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_Shake::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CCSUsrMsg_Shake::duration() const {
  return duration_;
}
inline void CCSUsrMsg_Shake::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Fade

// optional int32 duration = 1;
inline bool CCSUsrMsg_Fade::has_duration() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_duration() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Fade::clear_has_duration() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Fade::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::duration() const {
  return duration_;
}
inline void CCSUsrMsg_Fade::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional int32 hold_time = 2;
inline bool CCSUsrMsg_Fade::has_hold_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_hold_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Fade::clear_has_hold_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Fade::clear_hold_time() {
  hold_time_ = 0;
  clear_has_hold_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::hold_time() const {
  return hold_time_;
}
inline void CCSUsrMsg_Fade::set_hold_time(::google::protobuf::int32 value) {
  set_has_hold_time();
  hold_time_ = value;
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Fade::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Fade::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Fade::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CCSUsrMsg_Fade::flags() const {
  return flags_;
}
inline void CCSUsrMsg_Fade::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// optional .CMsgRGBA clr = 4;
inline bool CCSUsrMsg_Fade::has_clr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_Fade::set_has_clr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_Fade::clear_has_clr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_Fade::clear_clr() {
  if (clr_ != NULL) clr_->::CMsgRGBA::Clear();
  clear_has_clr();
}
inline const ::CMsgRGBA& CCSUsrMsg_Fade::clr() const {
  return clr_ != NULL ? *clr_ : *default_instance_->clr_;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::mutable_clr() {
  set_has_clr();
  if (clr_ == NULL) clr_ = new ::CMsgRGBA;
  return clr_;
}
inline ::CMsgRGBA* CCSUsrMsg_Fade::release_clr() {
  clear_has_clr();
  ::CMsgRGBA* temp = clr_;
  clr_ = NULL;
  return temp;
}
inline void CCSUsrMsg_Fade::set_allocated_clr(::CMsgRGBA* clr) {
  delete clr_;
  clr_ = clr;
  if (clr) {
    set_has_clr();
  } else {
    clear_has_clr();
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_Rumble

// optional int32 index = 1;
inline bool CCSUsrMsg_Rumble::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Rumble::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Rumble::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::index() const {
  return index_;
}
inline void CCSUsrMsg_Rumble::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 data = 2;
inline bool CCSUsrMsg_Rumble::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Rumble::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Rumble::clear_data() {
  data_ = 0;
  clear_has_data();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::data() const {
  return data_;
}
inline void CCSUsrMsg_Rumble::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
}

// optional int32 flags = 3;
inline bool CCSUsrMsg_Rumble::has_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Rumble::set_has_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Rumble::clear_has_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Rumble::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 CCSUsrMsg_Rumble::flags() const {
  return flags_;
}
inline void CCSUsrMsg_Rumble::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaption

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaption::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CloseCaption::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaption::hash() const {
  return hash_;
}
inline void CCSUsrMsg_CloseCaption::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaption::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CloseCaption::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaption::duration() const {
  return duration_;
}
inline void CCSUsrMsg_CloseCaption::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaption::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_CloseCaption::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_CloseCaption::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_CloseCaption::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CCSUsrMsg_CloseCaption::from_player() const {
  return from_player_;
}
inline void CCSUsrMsg_CloseCaption::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CloseCaptionDirect

// optional uint32 hash = 1;
inline bool CCSUsrMsg_CloseCaptionDirect::has_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_hash() {
  hash_ = 0u;
  clear_has_hash();
}
inline ::google::protobuf::uint32 CCSUsrMsg_CloseCaptionDirect::hash() const {
  return hash_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_hash(::google::protobuf::uint32 value) {
  set_has_hash();
  hash_ = value;
}

// optional int32 duration = 2;
inline bool CCSUsrMsg_CloseCaptionDirect::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CCSUsrMsg_CloseCaptionDirect::duration() const {
  return duration_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
}

// optional bool from_player = 3;
inline bool CCSUsrMsg_CloseCaptionDirect::has_from_player() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_has_from_player() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_has_from_player() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_CloseCaptionDirect::clear_from_player() {
  from_player_ = false;
  clear_has_from_player();
}
inline bool CCSUsrMsg_CloseCaptionDirect::from_player() const {
  return from_player_;
}
inline void CCSUsrMsg_CloseCaptionDirect::set_from_player(bool value) {
  set_has_from_player();
  from_player_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendAudio

// optional string radio_sound = 1;
inline bool CCSUsrMsg_SendAudio::has_radio_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SendAudio::set_has_radio_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SendAudio::clear_has_radio_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SendAudio::clear_radio_sound() {
  if (radio_sound_ != &::google::protobuf::internal::kEmptyString) {
    radio_sound_->clear();
  }
  clear_has_radio_sound();
}
inline const ::std::string& CCSUsrMsg_SendAudio::radio_sound() const {
  return *radio_sound_;
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const ::std::string& value) {
  set_has_radio_sound();
  if (radio_sound_ == &::google::protobuf::internal::kEmptyString) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(value);
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value) {
  set_has_radio_sound();
  if (radio_sound_ == &::google::protobuf::internal::kEmptyString) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(value);
}
inline void CCSUsrMsg_SendAudio::set_radio_sound(const char* value, size_t size) {
  set_has_radio_sound();
  if (radio_sound_ == &::google::protobuf::internal::kEmptyString) {
    radio_sound_ = new ::std::string;
  }
  radio_sound_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_SendAudio::mutable_radio_sound() {
  set_has_radio_sound();
  if (radio_sound_ == &::google::protobuf::internal::kEmptyString) {
    radio_sound_ = new ::std::string;
  }
  return radio_sound_;
}
inline ::std::string* CCSUsrMsg_SendAudio::release_radio_sound() {
  clear_has_radio_sound();
  if (radio_sound_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = radio_sound_;
    radio_sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_SendAudio::set_allocated_radio_sound(::std::string* radio_sound) {
  if (radio_sound_ != &::google::protobuf::internal::kEmptyString) {
    delete radio_sound_;
  }
  if (radio_sound) {
    set_has_radio_sound();
    radio_sound_ = radio_sound;
  } else {
    clear_has_radio_sound();
    radio_sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_RawAudio

// optional int32 pitch = 1;
inline bool CCSUsrMsg_RawAudio::has_pitch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_pitch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RawAudio::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RawAudio::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::pitch() const {
  return pitch_;
}
inline void CCSUsrMsg_RawAudio::set_pitch(::google::protobuf::int32 value) {
  set_has_pitch();
  pitch_ = value;
}

// optional int32 entidx = 2;
inline bool CCSUsrMsg_RawAudio::has_entidx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_entidx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RawAudio::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RawAudio::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_RawAudio::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_RawAudio::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// optional float duration = 3;
inline bool CCSUsrMsg_RawAudio::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RawAudio::clear_has_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RawAudio::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CCSUsrMsg_RawAudio::duration() const {
  return duration_;
}
inline void CCSUsrMsg_RawAudio::set_duration(float value) {
  set_has_duration();
  duration_ = value;
}

// optional string voice_filename = 4;
inline bool CCSUsrMsg_RawAudio::has_voice_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_RawAudio::set_has_voice_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_RawAudio::clear_has_voice_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_RawAudio::clear_voice_filename() {
  if (voice_filename_ != &::google::protobuf::internal::kEmptyString) {
    voice_filename_->clear();
  }
  clear_has_voice_filename();
}
inline const ::std::string& CCSUsrMsg_RawAudio::voice_filename() const {
  return *voice_filename_;
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const ::std::string& value) {
  set_has_voice_filename();
  if (voice_filename_ == &::google::protobuf::internal::kEmptyString) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(value);
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value) {
  set_has_voice_filename();
  if (voice_filename_ == &::google::protobuf::internal::kEmptyString) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(value);
}
inline void CCSUsrMsg_RawAudio::set_voice_filename(const char* value, size_t size) {
  set_has_voice_filename();
  if (voice_filename_ == &::google::protobuf::internal::kEmptyString) {
    voice_filename_ = new ::std::string;
  }
  voice_filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RawAudio::mutable_voice_filename() {
  set_has_voice_filename();
  if (voice_filename_ == &::google::protobuf::internal::kEmptyString) {
    voice_filename_ = new ::std::string;
  }
  return voice_filename_;
}
inline ::std::string* CCSUsrMsg_RawAudio::release_voice_filename() {
  clear_has_voice_filename();
  if (voice_filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = voice_filename_;
    voice_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_RawAudio::set_allocated_voice_filename(::std::string* voice_filename) {
  if (voice_filename_ != &::google::protobuf::internal::kEmptyString) {
    delete voice_filename_;
  }
  if (voice_filename) {
    set_has_voice_filename();
    voice_filename_ = voice_filename;
  } else {
    clear_has_voice_filename();
    voice_filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask_PlayerMask

// optional int32 game_rules_mask = 1;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_game_rules_mask() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_has_game_rules_mask() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_game_rules_mask() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_game_rules_mask() {
  game_rules_mask_ = 0;
  clear_has_game_rules_mask();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::game_rules_mask() const {
  return game_rules_mask_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_game_rules_mask(::google::protobuf::int32 value) {
  set_has_game_rules_mask();
  game_rules_mask_ = value;
}

// optional int32 ban_masks = 2;
inline bool CCSUsrMsg_VoiceMask_PlayerMask::has_ban_masks() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_has_ban_masks() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_has_ban_masks() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::clear_ban_masks() {
  ban_masks_ = 0;
  clear_has_ban_masks();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoiceMask_PlayerMask::ban_masks() const {
  return ban_masks_;
}
inline void CCSUsrMsg_VoiceMask_PlayerMask::set_ban_masks(::google::protobuf::int32 value) {
  set_has_ban_masks();
  ban_masks_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoiceMask

// repeated .CCSUsrMsg_VoiceMask.PlayerMask player_masks = 1;
inline int CCSUsrMsg_VoiceMask::player_masks_size() const {
  return player_masks_.size();
}
inline void CCSUsrMsg_VoiceMask::clear_player_masks() {
  player_masks_.Clear();
}
inline const ::CCSUsrMsg_VoiceMask_PlayerMask& CCSUsrMsg_VoiceMask::player_masks(int index) const {
  return player_masks_.Get(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::mutable_player_masks(int index) {
  return player_masks_.Mutable(index);
}
inline ::CCSUsrMsg_VoiceMask_PlayerMask* CCSUsrMsg_VoiceMask::add_player_masks() {
  return player_masks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >&
CCSUsrMsg_VoiceMask::player_masks() const {
  return player_masks_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_VoiceMask_PlayerMask >*
CCSUsrMsg_VoiceMask::mutable_player_masks() {
  return &player_masks_;
}

// optional bool player_mod_enable = 2;
inline bool CCSUsrMsg_VoiceMask::has_player_mod_enable() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoiceMask::set_has_player_mod_enable() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoiceMask::clear_has_player_mod_enable() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoiceMask::clear_player_mod_enable() {
  player_mod_enable_ = false;
  clear_has_player_mod_enable();
}
inline bool CCSUsrMsg_VoiceMask::player_mod_enable() const {
  return player_mod_enable_;
}
inline void CCSUsrMsg_VoiceMask::set_player_mod_enable(bool value) {
  set_has_player_mod_enable();
  player_mod_enable_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_Damage

// optional int32 amount = 1;
inline bool CCSUsrMsg_Damage::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_Damage::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_Damage::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_Damage::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CCSUsrMsg_Damage::amount() const {
  return amount_;
}
inline void CCSUsrMsg_Damage::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
}

// optional .CMsgVector inflictor_world_pos = 2;
inline bool CCSUsrMsg_Damage::has_inflictor_world_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_Damage::set_has_inflictor_world_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_Damage::clear_has_inflictor_world_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_Damage::clear_inflictor_world_pos() {
  if (inflictor_world_pos_ != NULL) inflictor_world_pos_->::CMsgVector::Clear();
  clear_has_inflictor_world_pos();
}
inline const ::CMsgVector& CCSUsrMsg_Damage::inflictor_world_pos() const {
  return inflictor_world_pos_ != NULL ? *inflictor_world_pos_ : *default_instance_->inflictor_world_pos_;
}
inline ::CMsgVector* CCSUsrMsg_Damage::mutable_inflictor_world_pos() {
  set_has_inflictor_world_pos();
  if (inflictor_world_pos_ == NULL) inflictor_world_pos_ = new ::CMsgVector;
  return inflictor_world_pos_;
}
inline ::CMsgVector* CCSUsrMsg_Damage::release_inflictor_world_pos() {
  clear_has_inflictor_world_pos();
  ::CMsgVector* temp = inflictor_world_pos_;
  inflictor_world_pos_ = NULL;
  return temp;
}
inline void CCSUsrMsg_Damage::set_allocated_inflictor_world_pos(::CMsgVector* inflictor_world_pos) {
  delete inflictor_world_pos_;
  inflictor_world_pos_ = inflictor_world_pos;
  if (inflictor_world_pos) {
    set_has_inflictor_world_pos();
  } else {
    clear_has_inflictor_world_pos();
  }
}

// optional int32 victim_entindex = 3;
inline bool CCSUsrMsg_Damage::has_victim_entindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_Damage::set_has_victim_entindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_Damage::clear_has_victim_entindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_Damage::clear_victim_entindex() {
  victim_entindex_ = 0;
  clear_has_victim_entindex();
}
inline ::google::protobuf::int32 CCSUsrMsg_Damage::victim_entindex() const {
  return victim_entindex_;
}
inline void CCSUsrMsg_Damage::set_victim_entindex(::google::protobuf::int32 value) {
  set_has_victim_entindex();
  victim_entindex_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RadioText

// optional int32 msg_dst = 1;
inline bool CCSUsrMsg_RadioText::has_msg_dst() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_msg_dst() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RadioText::clear_has_msg_dst() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RadioText::clear_msg_dst() {
  msg_dst_ = 0;
  clear_has_msg_dst();
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::msg_dst() const {
  return msg_dst_;
}
inline void CCSUsrMsg_RadioText::set_msg_dst(::google::protobuf::int32 value) {
  set_has_msg_dst();
  msg_dst_ = value;
}

// optional int32 client = 2;
inline bool CCSUsrMsg_RadioText::has_client() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_client() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RadioText::clear_has_client() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RadioText::clear_client() {
  client_ = 0;
  clear_has_client();
}
inline ::google::protobuf::int32 CCSUsrMsg_RadioText::client() const {
  return client_;
}
inline void CCSUsrMsg_RadioText::set_client(::google::protobuf::int32 value) {
  set_has_client();
  client_ = value;
}

// optional string msg_name = 3;
inline bool CCSUsrMsg_RadioText::has_msg_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RadioText::set_has_msg_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RadioText::clear_has_msg_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RadioText::clear_msg_name() {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    msg_name_->clear();
  }
  clear_has_msg_name();
}
inline const ::std::string& CCSUsrMsg_RadioText::msg_name() const {
  return *msg_name_;
}
inline void CCSUsrMsg_RadioText::set_msg_name(const ::std::string& value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(value);
}
inline void CCSUsrMsg_RadioText::set_msg_name(const char* value, size_t size) {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  msg_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_msg_name() {
  set_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    msg_name_ = new ::std::string;
  }
  return msg_name_;
}
inline ::std::string* CCSUsrMsg_RadioText::release_msg_name() {
  clear_has_msg_name();
  if (msg_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_name_;
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_RadioText::set_allocated_msg_name(::std::string* msg_name) {
  if (msg_name_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_name_;
  }
  if (msg_name) {
    set_has_msg_name();
    msg_name_ = msg_name;
  } else {
    clear_has_msg_name();
    msg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string params = 4;
inline int CCSUsrMsg_RadioText::params_size() const {
  return params_.size();
}
inline void CCSUsrMsg_RadioText::clear_params() {
  params_.Clear();
}
inline const ::std::string& CCSUsrMsg_RadioText::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* CCSUsrMsg_RadioText::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_RadioText::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RadioText::add_params() {
  return params_.Add();
}
inline void CCSUsrMsg_RadioText::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_RadioText::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void CCSUsrMsg_RadioText::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_RadioText::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_RadioText::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_HintText

// optional string text = 1;
inline bool CCSUsrMsg_HintText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_HintText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_HintText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_HintText::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& CCSUsrMsg_HintText::text() const {
  return *text_;
}
inline void CCSUsrMsg_HintText::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HintText::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void CCSUsrMsg_HintText::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_HintText::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* CCSUsrMsg_HintText::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_HintText::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_KeyHintText

// repeated string hints = 1;
inline int CCSUsrMsg_KeyHintText::hints_size() const {
  return hints_.size();
}
inline void CCSUsrMsg_KeyHintText::clear_hints() {
  hints_.Clear();
}
inline const ::std::string& CCSUsrMsg_KeyHintText::hints(int index) const {
  return hints_.Get(index);
}
inline ::std::string* CCSUsrMsg_KeyHintText::mutable_hints(int index) {
  return hints_.Mutable(index);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const ::std::string& value) {
  hints_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value) {
  hints_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_KeyHintText::set_hints(int index, const char* value, size_t size) {
  hints_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_KeyHintText::add_hints() {
  return hints_.Add();
}
inline void CCSUsrMsg_KeyHintText::add_hints(const ::std::string& value) {
  hints_.Add()->assign(value);
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value) {
  hints_.Add()->assign(value);
}
inline void CCSUsrMsg_KeyHintText::add_hints(const char* value, size_t size) {
  hints_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_KeyHintText::hints() const {
  return hints_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_KeyHintText::mutable_hints() {
  return &hints_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate

// optional int32 entity_idx = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_entity_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_entity_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_entity_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_entity_idx() {
  entity_idx_ = 0;
  clear_has_entity_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::entity_idx() const {
  return entity_idx_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_entity_idx(::google::protobuf::int32 value) {
  set_has_entity_idx();
  entity_idx_ = value;
}

// optional int32 class_id = 2;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_class_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_class_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_class_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_class_id() {
  class_id_ = 0;
  clear_has_class_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::class_id() const {
  return class_id_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_class_id(::google::protobuf::int32 value) {
  set_has_class_id();
  class_id_ = value;
}

// optional int32 origin_x = 3;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_x() const {
  return origin_x_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_x(::google::protobuf::int32 value) {
  set_has_origin_x();
  origin_x_ = value;
}

// optional int32 origin_y = 4;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_y() const {
  return origin_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_y(::google::protobuf::int32 value) {
  set_has_origin_y();
  origin_y_ = value;
}

// optional int32 origin_z = 5;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_origin_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_origin_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::origin_z() const {
  return origin_z_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_origin_z(::google::protobuf::int32 value) {
  set_has_origin_z();
  origin_z_ = value;
}

// optional int32 angle_y = 6;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_angle_y() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_angle_y() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_angle_y() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_angle_y() {
  angle_y_ = 0;
  clear_has_angle_y();
}
inline ::google::protobuf::int32 CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::angle_y() const {
  return angle_y_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_angle_y(::google::protobuf::int32 value) {
  set_has_angle_y();
  angle_y_ = value;
}

// optional bool defuser = 7;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_defuser() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_defuser() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_defuser() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_defuser() {
  defuser_ = false;
  clear_has_defuser();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::defuser() const {
  return defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_defuser(bool value) {
  set_has_defuser();
  defuser_ = value;
}

// optional bool player_has_defuser = 8;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_defuser() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_defuser() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_defuser() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_defuser() {
  player_has_defuser_ = false;
  clear_has_player_has_defuser();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_defuser() const {
  return player_has_defuser_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_defuser(bool value) {
  set_has_player_has_defuser();
  player_has_defuser_ = value;
}

// optional bool player_has_c4 = 9;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::has_player_has_c4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_has_player_has_c4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_has_player_has_c4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::clear_player_has_c4() {
  player_has_c4_ = false;
  clear_has_player_has_c4();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::player_has_c4() const {
  return player_has_c4_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate::set_player_has_c4(bool value) {
  set_has_player_has_c4();
  player_has_c4_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ProcessSpottedEntityUpdate

// optional bool new_update = 1;
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::has_new_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_has_new_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_has_new_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_new_update() {
  new_update_ = false;
  clear_has_new_update();
}
inline bool CCSUsrMsg_ProcessSpottedEntityUpdate::new_update() const {
  return new_update_;
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::set_new_update(bool value) {
  set_has_new_update();
  new_update_ = value;
}

// repeated .CCSUsrMsg_ProcessSpottedEntityUpdate.SpottedEntityUpdate entity_updates = 2;
inline int CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates_size() const {
  return entity_updates_.size();
}
inline void CCSUsrMsg_ProcessSpottedEntityUpdate::clear_entity_updates() {
  entity_updates_.Clear();
}
inline const ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate& CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates(int index) const {
  return entity_updates_.Get(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates(int index) {
  return entity_updates_.Mutable(index);
}
inline ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate* CCSUsrMsg_ProcessSpottedEntityUpdate::add_entity_updates() {
  return entity_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >&
CCSUsrMsg_ProcessSpottedEntityUpdate::entity_updates() const {
  return entity_updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate >*
CCSUsrMsg_ProcessSpottedEntityUpdate::mutable_entity_updates() {
  return &entity_updates_;
}

// -------------------------------------------------------------------

// CEconItemPreviewDataBlock_Sticker

// optional uint32 slot = 1;
inline bool CEconItemPreviewDataBlock_Sticker::has_slot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_slot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_slot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_slot() {
  slot_ = 0u;
  clear_has_slot();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock_Sticker::slot() const {
  return slot_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_slot(::google::protobuf::uint32 value) {
  set_has_slot();
  slot_ = value;
}

// optional uint32 sticker_id = 2;
inline bool CEconItemPreviewDataBlock_Sticker::has_sticker_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_sticker_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_sticker_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_sticker_id() {
  sticker_id_ = 0u;
  clear_has_sticker_id();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock_Sticker::sticker_id() const {
  return sticker_id_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_sticker_id(::google::protobuf::uint32 value) {
  set_has_sticker_id();
  sticker_id_ = value;
}

// optional float wear = 3;
inline bool CEconItemPreviewDataBlock_Sticker::has_wear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_wear() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_wear() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_wear() {
  wear_ = 0;
  clear_has_wear();
}
inline float CEconItemPreviewDataBlock_Sticker::wear() const {
  return wear_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_wear(float value) {
  set_has_wear();
  wear_ = value;
}

// optional float scale = 4;
inline bool CEconItemPreviewDataBlock_Sticker::has_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_scale() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_scale() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline float CEconItemPreviewDataBlock_Sticker::scale() const {
  return scale_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_scale(float value) {
  set_has_scale();
  scale_ = value;
}

// optional float rotation = 5;
inline bool CEconItemPreviewDataBlock_Sticker::has_rotation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_rotation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
inline float CEconItemPreviewDataBlock_Sticker::rotation() const {
  return rotation_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_rotation(float value) {
  set_has_rotation();
  rotation_ = value;
}

// optional uint32 tint_id = 6;
inline bool CEconItemPreviewDataBlock_Sticker::has_tint_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CEconItemPreviewDataBlock_Sticker::set_has_tint_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_has_tint_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CEconItemPreviewDataBlock_Sticker::clear_tint_id() {
  tint_id_ = 0u;
  clear_has_tint_id();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock_Sticker::tint_id() const {
  return tint_id_;
}
inline void CEconItemPreviewDataBlock_Sticker::set_tint_id(::google::protobuf::uint32 value) {
  set_has_tint_id();
  tint_id_ = value;
}

// -------------------------------------------------------------------

// CEconItemPreviewDataBlock

// optional uint32 accountid = 1;
inline bool CEconItemPreviewDataBlock::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CEconItemPreviewDataBlock::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CEconItemPreviewDataBlock::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::accountid() const {
  return accountid_;
}
inline void CEconItemPreviewDataBlock::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint64 itemid = 2;
inline bool CEconItemPreviewDataBlock::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CEconItemPreviewDataBlock::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CEconItemPreviewDataBlock::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 CEconItemPreviewDataBlock::itemid() const {
  return itemid_;
}
inline void CEconItemPreviewDataBlock::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional uint32 defindex = 3;
inline bool CEconItemPreviewDataBlock::has_defindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_defindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CEconItemPreviewDataBlock::clear_has_defindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CEconItemPreviewDataBlock::clear_defindex() {
  defindex_ = 0u;
  clear_has_defindex();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::defindex() const {
  return defindex_;
}
inline void CEconItemPreviewDataBlock::set_defindex(::google::protobuf::uint32 value) {
  set_has_defindex();
  defindex_ = value;
}

// optional uint32 paintindex = 4;
inline bool CEconItemPreviewDataBlock::has_paintindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_paintindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CEconItemPreviewDataBlock::clear_has_paintindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CEconItemPreviewDataBlock::clear_paintindex() {
  paintindex_ = 0u;
  clear_has_paintindex();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::paintindex() const {
  return paintindex_;
}
inline void CEconItemPreviewDataBlock::set_paintindex(::google::protobuf::uint32 value) {
  set_has_paintindex();
  paintindex_ = value;
}

// optional uint32 rarity = 5;
inline bool CEconItemPreviewDataBlock::has_rarity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_rarity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CEconItemPreviewDataBlock::clear_has_rarity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CEconItemPreviewDataBlock::clear_rarity() {
  rarity_ = 0u;
  clear_has_rarity();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::rarity() const {
  return rarity_;
}
inline void CEconItemPreviewDataBlock::set_rarity(::google::protobuf::uint32 value) {
  set_has_rarity();
  rarity_ = value;
}

// optional uint32 quality = 6;
inline bool CEconItemPreviewDataBlock::has_quality() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_quality() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CEconItemPreviewDataBlock::clear_has_quality() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CEconItemPreviewDataBlock::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::quality() const {
  return quality_;
}
inline void CEconItemPreviewDataBlock::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// optional uint32 paintwear = 7;
inline bool CEconItemPreviewDataBlock::has_paintwear() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_paintwear() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CEconItemPreviewDataBlock::clear_has_paintwear() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CEconItemPreviewDataBlock::clear_paintwear() {
  paintwear_ = 0u;
  clear_has_paintwear();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::paintwear() const {
  return paintwear_;
}
inline void CEconItemPreviewDataBlock::set_paintwear(::google::protobuf::uint32 value) {
  set_has_paintwear();
  paintwear_ = value;
}

// optional uint32 paintseed = 8;
inline bool CEconItemPreviewDataBlock::has_paintseed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_paintseed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CEconItemPreviewDataBlock::clear_has_paintseed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CEconItemPreviewDataBlock::clear_paintseed() {
  paintseed_ = 0u;
  clear_has_paintseed();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::paintseed() const {
  return paintseed_;
}
inline void CEconItemPreviewDataBlock::set_paintseed(::google::protobuf::uint32 value) {
  set_has_paintseed();
  paintseed_ = value;
}

// optional uint32 killeaterscoretype = 9;
inline bool CEconItemPreviewDataBlock::has_killeaterscoretype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_killeaterscoretype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CEconItemPreviewDataBlock::clear_has_killeaterscoretype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CEconItemPreviewDataBlock::clear_killeaterscoretype() {
  killeaterscoretype_ = 0u;
  clear_has_killeaterscoretype();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::killeaterscoretype() const {
  return killeaterscoretype_;
}
inline void CEconItemPreviewDataBlock::set_killeaterscoretype(::google::protobuf::uint32 value) {
  set_has_killeaterscoretype();
  killeaterscoretype_ = value;
}

// optional uint32 killeatervalue = 10;
inline bool CEconItemPreviewDataBlock::has_killeatervalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_killeatervalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CEconItemPreviewDataBlock::clear_has_killeatervalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CEconItemPreviewDataBlock::clear_killeatervalue() {
  killeatervalue_ = 0u;
  clear_has_killeatervalue();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::killeatervalue() const {
  return killeatervalue_;
}
inline void CEconItemPreviewDataBlock::set_killeatervalue(::google::protobuf::uint32 value) {
  set_has_killeatervalue();
  killeatervalue_ = value;
}

// optional string customname = 11;
inline bool CEconItemPreviewDataBlock::has_customname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_customname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CEconItemPreviewDataBlock::clear_has_customname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CEconItemPreviewDataBlock::clear_customname() {
  if (customname_ != &::google::protobuf::internal::kEmptyString) {
    customname_->clear();
  }
  clear_has_customname();
}
inline const ::std::string& CEconItemPreviewDataBlock::customname() const {
  return *customname_;
}
inline void CEconItemPreviewDataBlock::set_customname(const ::std::string& value) {
  set_has_customname();
  if (customname_ == &::google::protobuf::internal::kEmptyString) {
    customname_ = new ::std::string;
  }
  customname_->assign(value);
}
inline void CEconItemPreviewDataBlock::set_customname(const char* value) {
  set_has_customname();
  if (customname_ == &::google::protobuf::internal::kEmptyString) {
    customname_ = new ::std::string;
  }
  customname_->assign(value);
}
inline void CEconItemPreviewDataBlock::set_customname(const char* value, size_t size) {
  set_has_customname();
  if (customname_ == &::google::protobuf::internal::kEmptyString) {
    customname_ = new ::std::string;
  }
  customname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CEconItemPreviewDataBlock::mutable_customname() {
  set_has_customname();
  if (customname_ == &::google::protobuf::internal::kEmptyString) {
    customname_ = new ::std::string;
  }
  return customname_;
}
inline ::std::string* CEconItemPreviewDataBlock::release_customname() {
  clear_has_customname();
  if (customname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = customname_;
    customname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CEconItemPreviewDataBlock::set_allocated_customname(::std::string* customname) {
  if (customname_ != &::google::protobuf::internal::kEmptyString) {
    delete customname_;
  }
  if (customname) {
    set_has_customname();
    customname_ = customname;
  } else {
    clear_has_customname();
    customname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;
inline int CEconItemPreviewDataBlock::stickers_size() const {
  return stickers_.size();
}
inline void CEconItemPreviewDataBlock::clear_stickers() {
  stickers_.Clear();
}
inline const ::CEconItemPreviewDataBlock_Sticker& CEconItemPreviewDataBlock::stickers(int index) const {
  return stickers_.Get(index);
}
inline ::CEconItemPreviewDataBlock_Sticker* CEconItemPreviewDataBlock::mutable_stickers(int index) {
  return stickers_.Mutable(index);
}
inline ::CEconItemPreviewDataBlock_Sticker* CEconItemPreviewDataBlock::add_stickers() {
  return stickers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock_Sticker >&
CEconItemPreviewDataBlock::stickers() const {
  return stickers_;
}
inline ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock_Sticker >*
CEconItemPreviewDataBlock::mutable_stickers() {
  return &stickers_;
}

// optional uint32 inventory = 13;
inline bool CEconItemPreviewDataBlock::has_inventory() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_inventory() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CEconItemPreviewDataBlock::clear_has_inventory() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CEconItemPreviewDataBlock::clear_inventory() {
  inventory_ = 0u;
  clear_has_inventory();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::inventory() const {
  return inventory_;
}
inline void CEconItemPreviewDataBlock::set_inventory(::google::protobuf::uint32 value) {
  set_has_inventory();
  inventory_ = value;
}

// optional uint32 origin = 14;
inline bool CEconItemPreviewDataBlock::has_origin() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_origin() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CEconItemPreviewDataBlock::clear_has_origin() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CEconItemPreviewDataBlock::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::origin() const {
  return origin_;
}
inline void CEconItemPreviewDataBlock::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
}

// optional uint32 questid = 15;
inline bool CEconItemPreviewDataBlock::has_questid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_questid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CEconItemPreviewDataBlock::clear_has_questid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CEconItemPreviewDataBlock::clear_questid() {
  questid_ = 0u;
  clear_has_questid();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::questid() const {
  return questid_;
}
inline void CEconItemPreviewDataBlock::set_questid(::google::protobuf::uint32 value) {
  set_has_questid();
  questid_ = value;
}

// optional uint32 dropreason = 16;
inline bool CEconItemPreviewDataBlock::has_dropreason() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_dropreason() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CEconItemPreviewDataBlock::clear_has_dropreason() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CEconItemPreviewDataBlock::clear_dropreason() {
  dropreason_ = 0u;
  clear_has_dropreason();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::dropreason() const {
  return dropreason_;
}
inline void CEconItemPreviewDataBlock::set_dropreason(::google::protobuf::uint32 value) {
  set_has_dropreason();
  dropreason_ = value;
}

// optional uint32 musicindex = 17;
inline bool CEconItemPreviewDataBlock::has_musicindex() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_musicindex() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CEconItemPreviewDataBlock::clear_has_musicindex() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CEconItemPreviewDataBlock::clear_musicindex() {
  musicindex_ = 0u;
  clear_has_musicindex();
}
inline ::google::protobuf::uint32 CEconItemPreviewDataBlock::musicindex() const {
  return musicindex_;
}
inline void CEconItemPreviewDataBlock::set_musicindex(::google::protobuf::uint32 value) {
  set_has_musicindex();
  musicindex_ = value;
}

// optional int32 entindex = 18;
inline bool CEconItemPreviewDataBlock::has_entindex() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CEconItemPreviewDataBlock::set_has_entindex() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CEconItemPreviewDataBlock::clear_has_entindex() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CEconItemPreviewDataBlock::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CEconItemPreviewDataBlock::entindex() const {
  return entindex_;
}
inline void CEconItemPreviewDataBlock::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendPlayerItemDrops

// repeated .CEconItemPreviewDataBlock entity_updates = 1;
inline int CCSUsrMsg_SendPlayerItemDrops::entity_updates_size() const {
  return entity_updates_.size();
}
inline void CCSUsrMsg_SendPlayerItemDrops::clear_entity_updates() {
  entity_updates_.Clear();
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemDrops::entity_updates(int index) const {
  return entity_updates_.Get(index);
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates(int index) {
  return entity_updates_.Mutable(index);
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemDrops::add_entity_updates() {
  return entity_updates_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >&
CCSUsrMsg_SendPlayerItemDrops::entity_updates() const {
  return entity_updates_;
}
inline ::google::protobuf::RepeatedPtrField< ::CEconItemPreviewDataBlock >*
CCSUsrMsg_SendPlayerItemDrops::mutable_entity_updates() {
  return &entity_updates_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendPlayerItemFound

// optional .CEconItemPreviewDataBlock iteminfo = 1;
inline bool CCSUsrMsg_SendPlayerItemFound::has_iteminfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_has_iteminfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SendPlayerItemFound::clear_has_iteminfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SendPlayerItemFound::clear_iteminfo() {
  if (iteminfo_ != NULL) iteminfo_->::CEconItemPreviewDataBlock::Clear();
  clear_has_iteminfo();
}
inline const ::CEconItemPreviewDataBlock& CCSUsrMsg_SendPlayerItemFound::iteminfo() const {
  return iteminfo_ != NULL ? *iteminfo_ : *default_instance_->iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::mutable_iteminfo() {
  set_has_iteminfo();
  if (iteminfo_ == NULL) iteminfo_ = new ::CEconItemPreviewDataBlock;
  return iteminfo_;
}
inline ::CEconItemPreviewDataBlock* CCSUsrMsg_SendPlayerItemFound::release_iteminfo() {
  clear_has_iteminfo();
  ::CEconItemPreviewDataBlock* temp = iteminfo_;
  iteminfo_ = NULL;
  return temp;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_allocated_iteminfo(::CEconItemPreviewDataBlock* iteminfo) {
  delete iteminfo_;
  iteminfo_ = iteminfo;
  if (iteminfo) {
    set_has_iteminfo();
  } else {
    clear_has_iteminfo();
  }
}

// optional int32 entindex = 2;
inline bool CCSUsrMsg_SendPlayerItemFound::has_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_has_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SendPlayerItemFound::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SendPlayerItemFound::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendPlayerItemFound::entindex() const {
  return entindex_;
}
inline void CCSUsrMsg_SendPlayerItemFound::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReloadEffect

// optional int32 entidx = 1;
inline bool CCSUsrMsg_ReloadEffect::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ReloadEffect::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_ReloadEffect::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_ReloadEffect::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// optional int32 actanim = 2;
inline bool CCSUsrMsg_ReloadEffect::has_actanim() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_actanim() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_actanim() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ReloadEffect::clear_actanim() {
  actanim_ = 0;
  clear_has_actanim();
}
inline ::google::protobuf::int32 CCSUsrMsg_ReloadEffect::actanim() const {
  return actanim_;
}
inline void CCSUsrMsg_ReloadEffect::set_actanim(::google::protobuf::int32 value) {
  set_has_actanim();
  actanim_ = value;
}

// optional float origin_x = 3;
inline bool CCSUsrMsg_ReloadEffect::has_origin_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_origin_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline float CCSUsrMsg_ReloadEffect::origin_x() const {
  return origin_x_;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_x(float value) {
  set_has_origin_x();
  origin_x_ = value;
}

// optional float origin_y = 4;
inline bool CCSUsrMsg_ReloadEffect::has_origin_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_origin_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline float CCSUsrMsg_ReloadEffect::origin_y() const {
  return origin_y_;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_y(float value) {
  set_has_origin_y();
  origin_y_ = value;
}

// optional float origin_z = 5;
inline bool CCSUsrMsg_ReloadEffect::has_origin_z() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_ReloadEffect::set_has_origin_z() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_ReloadEffect::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_ReloadEffect::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline float CCSUsrMsg_ReloadEffect::origin_z() const {
  return origin_z_;
}
inline void CCSUsrMsg_ReloadEffect::set_origin_z(float value) {
  set_has_origin_z();
  origin_z_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_AdjustMoney

// optional int32 amount = 1;
inline bool CCSUsrMsg_AdjustMoney::has_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AdjustMoney::set_has_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AdjustMoney::clear_has_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AdjustMoney::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 CCSUsrMsg_AdjustMoney::amount() const {
  return amount_;
}
inline void CCSUsrMsg_AdjustMoney::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ReportHit

// optional float pos_x = 1;
inline bool CCSUsrMsg_ReportHit::has_pos_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ReportHit::set_has_pos_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ReportHit::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ReportHit::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CCSUsrMsg_ReportHit::pos_x() const {
  return pos_x_;
}
inline void CCSUsrMsg_ReportHit::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
}

// optional float pos_y = 2;
inline bool CCSUsrMsg_ReportHit::has_pos_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ReportHit::set_has_pos_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ReportHit::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ReportHit::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CCSUsrMsg_ReportHit::pos_y() const {
  return pos_y_;
}
inline void CCSUsrMsg_ReportHit::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
}

// optional float timestamp = 4;
inline bool CCSUsrMsg_ReportHit::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ReportHit::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ReportHit::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ReportHit::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline float CCSUsrMsg_ReportHit::timestamp() const {
  return timestamp_;
}
inline void CCSUsrMsg_ReportHit::set_timestamp(float value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional float pos_z = 3;
inline bool CCSUsrMsg_ReportHit::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_ReportHit::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_ReportHit::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_ReportHit::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CCSUsrMsg_ReportHit::pos_z() const {
  return pos_z_;
}
inline void CCSUsrMsg_ReportHit::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_KillCam

// optional int32 obs_mode = 1;
inline bool CCSUsrMsg_KillCam::has_obs_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_obs_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_KillCam::clear_has_obs_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_KillCam::clear_obs_mode() {
  obs_mode_ = 0;
  clear_has_obs_mode();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::obs_mode() const {
  return obs_mode_;
}
inline void CCSUsrMsg_KillCam::set_obs_mode(::google::protobuf::int32 value) {
  set_has_obs_mode();
  obs_mode_ = value;
}

// optional int32 first_target = 2;
inline bool CCSUsrMsg_KillCam::has_first_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_first_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_KillCam::clear_has_first_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_KillCam::clear_first_target() {
  first_target_ = 0;
  clear_has_first_target();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::first_target() const {
  return first_target_;
}
inline void CCSUsrMsg_KillCam::set_first_target(::google::protobuf::int32 value) {
  set_has_first_target();
  first_target_ = value;
}

// optional int32 second_target = 3;
inline bool CCSUsrMsg_KillCam::has_second_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_KillCam::set_has_second_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_KillCam::clear_has_second_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_KillCam::clear_second_target() {
  second_target_ = 0;
  clear_has_second_target();
}
inline ::google::protobuf::int32 CCSUsrMsg_KillCam::second_target() const {
  return second_target_;
}
inline void CCSUsrMsg_KillCam::set_second_target(::google::protobuf::int32 value) {
  set_has_second_target();
  second_target_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DesiredTimescale

// optional float desired_timescale = 1;
inline bool CCSUsrMsg_DesiredTimescale::has_desired_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_desired_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_desired_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_desired_timescale() {
  desired_timescale_ = 0;
  clear_has_desired_timescale();
}
inline float CCSUsrMsg_DesiredTimescale::desired_timescale() const {
  return desired_timescale_;
}
inline void CCSUsrMsg_DesiredTimescale::set_desired_timescale(float value) {
  set_has_desired_timescale();
  desired_timescale_ = value;
}

// optional float duration_realtime_sec = 2;
inline bool CCSUsrMsg_DesiredTimescale::has_duration_realtime_sec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_duration_realtime_sec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_duration_realtime_sec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_duration_realtime_sec() {
  duration_realtime_sec_ = 0;
  clear_has_duration_realtime_sec();
}
inline float CCSUsrMsg_DesiredTimescale::duration_realtime_sec() const {
  return duration_realtime_sec_;
}
inline void CCSUsrMsg_DesiredTimescale::set_duration_realtime_sec(float value) {
  set_has_duration_realtime_sec();
  duration_realtime_sec_ = value;
}

// optional int32 interpolator_type = 3;
inline bool CCSUsrMsg_DesiredTimescale::has_interpolator_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_interpolator_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_interpolator_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_interpolator_type() {
  interpolator_type_ = 0;
  clear_has_interpolator_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_DesiredTimescale::interpolator_type() const {
  return interpolator_type_;
}
inline void CCSUsrMsg_DesiredTimescale::set_interpolator_type(::google::protobuf::int32 value) {
  set_has_interpolator_type();
  interpolator_type_ = value;
}

// optional float start_blend_time = 4;
inline bool CCSUsrMsg_DesiredTimescale::has_start_blend_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_DesiredTimescale::set_has_start_blend_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_has_start_blend_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_DesiredTimescale::clear_start_blend_time() {
  start_blend_time_ = 0;
  clear_has_start_blend_time();
}
inline float CCSUsrMsg_DesiredTimescale::start_blend_time() const {
  return start_blend_time_;
}
inline void CCSUsrMsg_DesiredTimescale::set_start_blend_time(float value) {
  set_has_start_blend_time();
  start_blend_time_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CurrentTimescale

// optional float cur_timescale = 1;
inline bool CCSUsrMsg_CurrentTimescale::has_cur_timescale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CurrentTimescale::set_has_cur_timescale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CurrentTimescale::clear_has_cur_timescale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CurrentTimescale::clear_cur_timescale() {
  cur_timescale_ = 0;
  clear_has_cur_timescale();
}
inline float CCSUsrMsg_CurrentTimescale::cur_timescale() const {
  return cur_timescale_;
}
inline void CCSUsrMsg_CurrentTimescale::set_cur_timescale(float value) {
  set_has_cur_timescale();
  cur_timescale_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_AchievementEvent

// optional int32 achievement = 1;
inline bool CCSUsrMsg_AchievementEvent::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AchievementEvent::clear_achievement() {
  achievement_ = 0;
  clear_has_achievement();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::achievement() const {
  return achievement_;
}
inline void CCSUsrMsg_AchievementEvent::set_achievement(::google::protobuf::int32 value) {
  set_has_achievement();
  achievement_ = value;
}

// optional int32 count = 2;
inline bool CCSUsrMsg_AchievementEvent::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_AchievementEvent::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::count() const {
  return count_;
}
inline void CCSUsrMsg_AchievementEvent::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 user_id = 3;
inline bool CCSUsrMsg_AchievementEvent::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_AchievementEvent::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_AchievementEvent::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_AchievementEvent::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_AchievementEvent::user_id() const {
  return user_id_;
}
inline void CCSUsrMsg_AchievementEvent::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchEndConditions

// optional int32 fraglimit = 1;
inline bool CCSUsrMsg_MatchEndConditions::has_fraglimit() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_fraglimit() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_fraglimit() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_fraglimit() {
  fraglimit_ = 0;
  clear_has_fraglimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::fraglimit() const {
  return fraglimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_fraglimit(::google::protobuf::int32 value) {
  set_has_fraglimit();
  fraglimit_ = value;
}

// optional int32 mp_maxrounds = 2;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_maxrounds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_maxrounds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_maxrounds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_maxrounds() {
  mp_maxrounds_ = 0;
  clear_has_mp_maxrounds();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_maxrounds() const {
  return mp_maxrounds_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_maxrounds(::google::protobuf::int32 value) {
  set_has_mp_maxrounds();
  mp_maxrounds_ = value;
}

// optional int32 mp_winlimit = 3;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_winlimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_winlimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_winlimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_winlimit() {
  mp_winlimit_ = 0;
  clear_has_mp_winlimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_winlimit() const {
  return mp_winlimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_winlimit(::google::protobuf::int32 value) {
  set_has_mp_winlimit();
  mp_winlimit_ = value;
}

// optional int32 mp_timelimit = 4;
inline bool CCSUsrMsg_MatchEndConditions::has_mp_timelimit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_MatchEndConditions::set_has_mp_timelimit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_has_mp_timelimit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_MatchEndConditions::clear_mp_timelimit() {
  mp_timelimit_ = 0;
  clear_has_mp_timelimit();
}
inline ::google::protobuf::int32 CCSUsrMsg_MatchEndConditions::mp_timelimit() const {
  return mp_timelimit_;
}
inline void CCSUsrMsg_MatchEndConditions::set_mp_timelimit(::google::protobuf::int32 value) {
  set_has_mp_timelimit();
  mp_timelimit_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate_Stat

// optional int32 idx = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_has_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_has_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_idx() {
  idx_ = 0;
  clear_has_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::idx() const {
  return idx_;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_idx(::google::protobuf::int32 value) {
  set_has_idx();
  idx_ = value;
}

// optional int32 delta = 2;
inline bool CCSUsrMsg_PlayerStatsUpdate_Stat::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate_Stat::delta() const {
  return delta_;
}
inline void CCSUsrMsg_PlayerStatsUpdate_Stat::set_delta(::google::protobuf::int32 value) {
  set_has_delta();
  delta_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerStatsUpdate

// optional int32 version = 1;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::version() const {
  return version_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// repeated .CCSUsrMsg_PlayerStatsUpdate.Stat stats = 4;
inline int CCSUsrMsg_PlayerStatsUpdate::stats_size() const {
  return stats_.size();
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_stats() {
  stats_.Clear();
}
inline const ::CCSUsrMsg_PlayerStatsUpdate_Stat& CCSUsrMsg_PlayerStatsUpdate::stats(int index) const {
  return stats_.Get(index);
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CCSUsrMsg_PlayerStatsUpdate_Stat* CCSUsrMsg_PlayerStatsUpdate::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >&
CCSUsrMsg_PlayerStatsUpdate::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_PlayerStatsUpdate_Stat >*
CCSUsrMsg_PlayerStatsUpdate::mutable_stats() {
  return &stats_;
}

// optional int32 user_id = 5;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_user_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_has_user_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::user_id() const {
  return user_id_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
}

// optional int32 crc = 6;
inline bool CCSUsrMsg_PlayerStatsUpdate::has_crc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_has_crc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_has_crc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_PlayerStatsUpdate::clear_crc() {
  crc_ = 0;
  clear_has_crc();
}
inline ::google::protobuf::int32 CCSUsrMsg_PlayerStatsUpdate::crc() const {
  return crc_;
}
inline void CCSUsrMsg_PlayerStatsUpdate::set_crc(::google::protobuf::int32 value) {
  set_has_crc();
  crc_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisplayInventory

// optional bool display = 1;
inline bool CCSUsrMsg_DisplayInventory::has_display() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DisplayInventory::set_has_display() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DisplayInventory::clear_has_display() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DisplayInventory::clear_display() {
  display_ = false;
  clear_has_display();
}
inline bool CCSUsrMsg_DisplayInventory::display() const {
  return display_;
}
inline void CCSUsrMsg_DisplayInventory::set_display(bool value) {
  set_has_display();
  display_ = value;
}

// optional int32 user_id = 2;
inline bool CCSUsrMsg_DisplayInventory::has_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_DisplayInventory::set_has_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_DisplayInventory::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_DisplayInventory::clear_user_id() {
  user_id_ = 0;
  clear_has_user_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_DisplayInventory::user_id() const {
  return user_id_;
}
inline void CCSUsrMsg_DisplayInventory::set_user_id(::google::protobuf::int32 value) {
  set_has_user_id();
  user_id_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankGet

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankGet::has_mode_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_XRankGet::set_has_mode_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_XRankGet::clear_has_mode_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_XRankGet::clear_mode_idx() {
  mode_idx_ = 0;
  clear_has_mode_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankGet::mode_idx() const {
  return mode_idx_;
}
inline void CCSUsrMsg_XRankGet::set_mode_idx(::google::protobuf::int32 value) {
  set_has_mode_idx();
  mode_idx_ = value;
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankGet::has_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_XRankGet::set_has_controller() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_XRankGet::clear_has_controller() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_XRankGet::clear_controller() {
  controller_ = 0;
  clear_has_controller();
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankGet::controller() const {
  return controller_;
}
inline void CCSUsrMsg_XRankGet::set_controller(::google::protobuf::int32 value) {
  set_has_controller();
  controller_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XRankUpd

// optional int32 mode_idx = 1;
inline bool CCSUsrMsg_XRankUpd::has_mode_idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_XRankUpd::set_has_mode_idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_XRankUpd::clear_has_mode_idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_XRankUpd::clear_mode_idx() {
  mode_idx_ = 0;
  clear_has_mode_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::mode_idx() const {
  return mode_idx_;
}
inline void CCSUsrMsg_XRankUpd::set_mode_idx(::google::protobuf::int32 value) {
  set_has_mode_idx();
  mode_idx_ = value;
}

// optional int32 controller = 2;
inline bool CCSUsrMsg_XRankUpd::has_controller() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_XRankUpd::set_has_controller() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_XRankUpd::clear_has_controller() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_XRankUpd::clear_controller() {
  controller_ = 0;
  clear_has_controller();
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::controller() const {
  return controller_;
}
inline void CCSUsrMsg_XRankUpd::set_controller(::google::protobuf::int32 value) {
  set_has_controller();
  controller_ = value;
}

// optional int32 ranking = 3;
inline bool CCSUsrMsg_XRankUpd::has_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_XRankUpd::set_has_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_XRankUpd::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_XRankUpd::clear_ranking() {
  ranking_ = 0;
  clear_has_ranking();
}
inline ::google::protobuf::int32 CCSUsrMsg_XRankUpd::ranking() const {
  return ranking_;
}
inline void CCSUsrMsg_XRankUpd::set_ranking(::google::protobuf::int32 value) {
  set_has_ranking();
  ranking_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_CallVoteFailed

// optional int32 reason = 1;
inline bool CCSUsrMsg_CallVoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_CallVoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::reason() const {
  return reason_;
}
inline void CCSUsrMsg_CallVoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// optional int32 time = 2;
inline bool CCSUsrMsg_CallVoteFailed::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_CallVoteFailed::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_CallVoteFailed::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_CallVoteFailed::time() const {
  return time_;
}
inline void CCSUsrMsg_CallVoteFailed::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteStart

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteStart::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoteStart::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoteStart::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::team() const {
  return team_;
}
inline void CCSUsrMsg_VoteStart::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 ent_idx = 2;
inline bool CCSUsrMsg_VoteStart::has_ent_idx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_ent_idx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoteStart::clear_has_ent_idx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoteStart::clear_ent_idx() {
  ent_idx_ = 0;
  clear_has_ent_idx();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::ent_idx() const {
  return ent_idx_;
}
inline void CCSUsrMsg_VoteStart::set_ent_idx(::google::protobuf::int32 value) {
  set_has_ent_idx();
  ent_idx_ = value;
}

// optional int32 vote_type = 3;
inline bool CCSUsrMsg_VoteStart::has_vote_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_vote_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_VoteStart::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_VoteStart::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteStart::vote_type() const {
  return vote_type_;
}
inline void CCSUsrMsg_VoteStart::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
}

// optional string disp_str = 4;
inline bool CCSUsrMsg_VoteStart::has_disp_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_disp_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_VoteStart::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_VoteStart::clear_disp_str() {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    disp_str_->clear();
  }
  clear_has_disp_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::disp_str() const {
  return *disp_str_;
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_disp_str() {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}
inline ::std::string* CCSUsrMsg_VoteStart::release_disp_str() {
  clear_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = disp_str_;
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VoteStart::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    delete disp_str_;
  }
  if (disp_str) {
    set_has_disp_str();
    disp_str_ = disp_str;
  } else {
    clear_has_disp_str();
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string details_str = 5;
inline bool CCSUsrMsg_VoteStart::has_details_str() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_details_str() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_VoteStart::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_VoteStart::clear_details_str() {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    details_str_->clear();
  }
  clear_has_details_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::details_str() const {
  return *details_str_;
}
inline void CCSUsrMsg_VoteStart::set_details_str(const ::std::string& value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_details_str() {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}
inline ::std::string* CCSUsrMsg_VoteStart::release_details_str() {
  clear_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = details_str_;
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VoteStart::set_allocated_details_str(::std::string* details_str) {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    delete details_str_;
  }
  if (details_str) {
    set_has_details_str();
    details_str_ = details_str;
  } else {
    clear_has_details_str();
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string other_team_str = 6;
inline bool CCSUsrMsg_VoteStart::has_other_team_str() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_other_team_str() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_VoteStart::clear_has_other_team_str() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_VoteStart::clear_other_team_str() {
  if (other_team_str_ != &::google::protobuf::internal::kEmptyString) {
    other_team_str_->clear();
  }
  clear_has_other_team_str();
}
inline const ::std::string& CCSUsrMsg_VoteStart::other_team_str() const {
  return *other_team_str_;
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const ::std::string& value) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(value);
}
inline void CCSUsrMsg_VoteStart::set_other_team_str(const char* value, size_t size) {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  other_team_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteStart::mutable_other_team_str() {
  set_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    other_team_str_ = new ::std::string;
  }
  return other_team_str_;
}
inline ::std::string* CCSUsrMsg_VoteStart::release_other_team_str() {
  clear_has_other_team_str();
  if (other_team_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = other_team_str_;
    other_team_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VoteStart::set_allocated_other_team_str(::std::string* other_team_str) {
  if (other_team_str_ != &::google::protobuf::internal::kEmptyString) {
    delete other_team_str_;
  }
  if (other_team_str) {
    set_has_other_team_str();
    other_team_str_ = other_team_str;
  } else {
    clear_has_other_team_str();
    other_team_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_yes_no_vote = 7;
inline bool CCSUsrMsg_VoteStart::has_is_yes_no_vote() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCSUsrMsg_VoteStart::set_has_is_yes_no_vote() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCSUsrMsg_VoteStart::clear_has_is_yes_no_vote() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCSUsrMsg_VoteStart::clear_is_yes_no_vote() {
  is_yes_no_vote_ = false;
  clear_has_is_yes_no_vote();
}
inline bool CCSUsrMsg_VoteStart::is_yes_no_vote() const {
  return is_yes_no_vote_;
}
inline void CCSUsrMsg_VoteStart::set_is_yes_no_vote(bool value) {
  set_has_is_yes_no_vote();
  is_yes_no_vote_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VotePass

// optional int32 team = 1;
inline bool CCSUsrMsg_VotePass::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VotePass::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VotePass::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::team() const {
  return team_;
}
inline void CCSUsrMsg_VotePass::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 vote_type = 2;
inline bool CCSUsrMsg_VotePass::has_vote_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_vote_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VotePass::clear_has_vote_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VotePass::clear_vote_type() {
  vote_type_ = 0;
  clear_has_vote_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_VotePass::vote_type() const {
  return vote_type_;
}
inline void CCSUsrMsg_VotePass::set_vote_type(::google::protobuf::int32 value) {
  set_has_vote_type();
  vote_type_ = value;
}

// optional string disp_str = 3;
inline bool CCSUsrMsg_VotePass::has_disp_str() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_disp_str() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_VotePass::clear_has_disp_str() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_VotePass::clear_disp_str() {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    disp_str_->clear();
  }
  clear_has_disp_str();
}
inline const ::std::string& CCSUsrMsg_VotePass::disp_str() const {
  return *disp_str_;
}
inline void CCSUsrMsg_VotePass::set_disp_str(const ::std::string& value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_disp_str(const char* value, size_t size) {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  disp_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_disp_str() {
  set_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    disp_str_ = new ::std::string;
  }
  return disp_str_;
}
inline ::std::string* CCSUsrMsg_VotePass::release_disp_str() {
  clear_has_disp_str();
  if (disp_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = disp_str_;
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VotePass::set_allocated_disp_str(::std::string* disp_str) {
  if (disp_str_ != &::google::protobuf::internal::kEmptyString) {
    delete disp_str_;
  }
  if (disp_str) {
    set_has_disp_str();
    disp_str_ = disp_str;
  } else {
    clear_has_disp_str();
    disp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string details_str = 4;
inline bool CCSUsrMsg_VotePass::has_details_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_VotePass::set_has_details_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_VotePass::clear_has_details_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_VotePass::clear_details_str() {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    details_str_->clear();
  }
  clear_has_details_str();
}
inline const ::std::string& CCSUsrMsg_VotePass::details_str() const {
  return *details_str_;
}
inline void CCSUsrMsg_VotePass::set_details_str(const ::std::string& value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_details_str(const char* value) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(value);
}
inline void CCSUsrMsg_VotePass::set_details_str(const char* value, size_t size) {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  details_str_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VotePass::mutable_details_str() {
  set_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    details_str_ = new ::std::string;
  }
  return details_str_;
}
inline ::std::string* CCSUsrMsg_VotePass::release_details_str() {
  clear_has_details_str();
  if (details_str_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = details_str_;
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_VotePass::set_allocated_details_str(::std::string* details_str) {
  if (details_str_ != &::google::protobuf::internal::kEmptyString) {
    delete details_str_;
  }
  if (details_str) {
    set_has_details_str();
    details_str_ = details_str;
  } else {
    clear_has_details_str();
    details_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteFailed

// optional int32 team = 1;
inline bool CCSUsrMsg_VoteFailed::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_VoteFailed::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_VoteFailed::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_VoteFailed::clear_team() {
  team_ = 0;
  clear_has_team();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::team() const {
  return team_;
}
inline void CCSUsrMsg_VoteFailed::set_team(::google::protobuf::int32 value) {
  set_has_team();
  team_ = value;
}

// optional int32 reason = 2;
inline bool CCSUsrMsg_VoteFailed::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_VoteFailed::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_VoteFailed::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_VoteFailed::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 CCSUsrMsg_VoteFailed::reason() const {
  return reason_;
}
inline void CCSUsrMsg_VoteFailed::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_VoteSetup

// repeated string potential_issues = 1;
inline int CCSUsrMsg_VoteSetup::potential_issues_size() const {
  return potential_issues_.size();
}
inline void CCSUsrMsg_VoteSetup::clear_potential_issues() {
  potential_issues_.Clear();
}
inline const ::std::string& CCSUsrMsg_VoteSetup::potential_issues(int index) const {
  return potential_issues_.Get(index);
}
inline ::std::string* CCSUsrMsg_VoteSetup::mutable_potential_issues(int index) {
  return potential_issues_.Mutable(index);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const ::std::string& value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value) {
  potential_issues_.Mutable(index)->assign(value);
}
inline void CCSUsrMsg_VoteSetup::set_potential_issues(int index, const char* value, size_t size) {
  potential_issues_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_VoteSetup::add_potential_issues() {
  return potential_issues_.Add();
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const ::std::string& value) {
  potential_issues_.Add()->assign(value);
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value) {
  potential_issues_.Add()->assign(value);
}
inline void CCSUsrMsg_VoteSetup::add_potential_issues(const char* value, size_t size) {
  potential_issues_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CCSUsrMsg_VoteSetup::potential_issues() const {
  return potential_issues_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CCSUsrMsg_VoteSetup::mutable_potential_issues() {
  return &potential_issues_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SendLastKillerDamageToClient

// optional int32 num_hits_given = 1;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_given() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_given() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_given() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_given() {
  num_hits_given_ = 0;
  clear_has_num_hits_given();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_given() const {
  return num_hits_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_given(::google::protobuf::int32 value) {
  set_has_num_hits_given();
  num_hits_given_ = value;
}

// optional int32 damage_given = 2;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_given() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_given() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_given() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_given() {
  damage_given_ = 0;
  clear_has_damage_given();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_given() const {
  return damage_given_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_given(::google::protobuf::int32 value) {
  set_has_damage_given();
  damage_given_ = value;
}

// optional int32 num_hits_taken = 3;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_num_hits_taken() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_num_hits_taken() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_num_hits_taken() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_num_hits_taken() {
  num_hits_taken_ = 0;
  clear_has_num_hits_taken();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::num_hits_taken() const {
  return num_hits_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_num_hits_taken(::google::protobuf::int32 value) {
  set_has_num_hits_taken();
  num_hits_taken_ = value;
}

// optional int32 damage_taken = 4;
inline bool CCSUsrMsg_SendLastKillerDamageToClient::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::clear_damage_taken() {
  damage_taken_ = 0;
  clear_has_damage_taken();
}
inline ::google::protobuf::int32 CCSUsrMsg_SendLastKillerDamageToClient::damage_taken() const {
  return damage_taken_;
}
inline void CCSUsrMsg_SendLastKillerDamageToClient::set_damage_taken(::google::protobuf::int32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate_RankUpdate

// optional int32 account_id = 1;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_account_id() {
  account_id_ = 0;
  clear_has_account_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::account_id() const {
  return account_id_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_account_id(::google::protobuf::int32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional int32 rank_old = 2;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_old() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_old() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_old() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_old() {
  rank_old_ = 0;
  clear_has_rank_old();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_old() const {
  return rank_old_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_old(::google::protobuf::int32 value) {
  set_has_rank_old();
  rank_old_ = value;
}

// optional int32 rank_new = 3;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_new() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_new() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_new() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_new() {
  rank_new_ = 0;
  clear_has_rank_new();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_new() const {
  return rank_new_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_new(::google::protobuf::int32 value) {
  set_has_rank_new();
  rank_new_ = value;
}

// optional int32 num_wins = 4;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_num_wins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_num_wins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_num_wins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_num_wins() {
  num_wins_ = 0;
  clear_has_num_wins();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::num_wins() const {
  return num_wins_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_num_wins(::google::protobuf::int32 value) {
  set_has_num_wins();
  num_wins_ = value;
}

// optional float rank_change = 5;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_change() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_change() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_change() {
  rank_change_ = 0;
  clear_has_rank_change();
}
inline float CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_change() const {
  return rank_change_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_change(float value) {
  set_has_rank_change();
  rank_change_ = value;
}

// optional int32 rank_type_id = 6;
inline bool CCSUsrMsg_ServerRankUpdate_RankUpdate::has_rank_type_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_has_rank_type_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_has_rank_type_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::clear_rank_type_id() {
  rank_type_id_ = 0;
  clear_has_rank_type_id();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankUpdate_RankUpdate::rank_type_id() const {
  return rank_type_id_;
}
inline void CCSUsrMsg_ServerRankUpdate_RankUpdate::set_rank_type_id(::google::protobuf::int32 value) {
  set_has_rank_type_id();
  rank_type_id_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankUpdate

// repeated .CCSUsrMsg_ServerRankUpdate.RankUpdate rank_update = 1;
inline int CCSUsrMsg_ServerRankUpdate::rank_update_size() const {
  return rank_update_.size();
}
inline void CCSUsrMsg_ServerRankUpdate::clear_rank_update() {
  rank_update_.Clear();
}
inline const ::CCSUsrMsg_ServerRankUpdate_RankUpdate& CCSUsrMsg_ServerRankUpdate::rank_update(int index) const {
  return rank_update_.Get(index);
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::mutable_rank_update(int index) {
  return rank_update_.Mutable(index);
}
inline ::CCSUsrMsg_ServerRankUpdate_RankUpdate* CCSUsrMsg_ServerRankUpdate::add_rank_update() {
  return rank_update_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >&
CCSUsrMsg_ServerRankUpdate::rank_update() const {
  return rank_update_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_ServerRankUpdate_RankUpdate >*
CCSUsrMsg_ServerRankUpdate::mutable_rank_update() {
  return &rank_update_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemPickup

// optional string item = 1;
inline bool CCSUsrMsg_ItemPickup::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ItemPickup::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ItemPickup::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ItemPickup::clear_item() {
  if (item_ != &::google::protobuf::internal::kEmptyString) {
    item_->clear();
  }
  clear_has_item();
}
inline const ::std::string& CCSUsrMsg_ItemPickup::item() const {
  return *item_;
}
inline void CCSUsrMsg_ItemPickup::set_item(const ::std::string& value) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::kEmptyString) {
    item_ = new ::std::string;
  }
  item_->assign(value);
}
inline void CCSUsrMsg_ItemPickup::set_item(const char* value) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::kEmptyString) {
    item_ = new ::std::string;
  }
  item_->assign(value);
}
inline void CCSUsrMsg_ItemPickup::set_item(const char* value, size_t size) {
  set_has_item();
  if (item_ == &::google::protobuf::internal::kEmptyString) {
    item_ = new ::std::string;
  }
  item_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_ItemPickup::mutable_item() {
  set_has_item();
  if (item_ == &::google::protobuf::internal::kEmptyString) {
    item_ = new ::std::string;
  }
  return item_;
}
inline ::std::string* CCSUsrMsg_ItemPickup::release_item() {
  clear_has_item();
  if (item_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = item_;
    item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_ItemPickup::set_allocated_item(::std::string* item) {
  if (item_ != &::google::protobuf::internal::kEmptyString) {
    delete item_;
  }
  if (item) {
    set_has_item();
    item_ = item;
  } else {
    clear_has_item();
    item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_ShowMenu

// optional int32 bits_valid_slots = 1;
inline bool CCSUsrMsg_ShowMenu::has_bits_valid_slots() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_bits_valid_slots() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_bits_valid_slots() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ShowMenu::clear_bits_valid_slots() {
  bits_valid_slots_ = 0;
  clear_has_bits_valid_slots();
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::bits_valid_slots() const {
  return bits_valid_slots_;
}
inline void CCSUsrMsg_ShowMenu::set_bits_valid_slots(::google::protobuf::int32 value) {
  set_has_bits_valid_slots();
  bits_valid_slots_ = value;
}

// optional int32 display_time = 2;
inline bool CCSUsrMsg_ShowMenu::has_display_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_display_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_display_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ShowMenu::clear_display_time() {
  display_time_ = 0;
  clear_has_display_time();
}
inline ::google::protobuf::int32 CCSUsrMsg_ShowMenu::display_time() const {
  return display_time_;
}
inline void CCSUsrMsg_ShowMenu::set_display_time(::google::protobuf::int32 value) {
  set_has_display_time();
  display_time_ = value;
}

// optional string menu_string = 3;
inline bool CCSUsrMsg_ShowMenu::has_menu_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_ShowMenu::set_has_menu_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_ShowMenu::clear_has_menu_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_ShowMenu::clear_menu_string() {
  if (menu_string_ != &::google::protobuf::internal::kEmptyString) {
    menu_string_->clear();
  }
  clear_has_menu_string();
}
inline const ::std::string& CCSUsrMsg_ShowMenu::menu_string() const {
  return *menu_string_;
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const ::std::string& value) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(value);
}
inline void CCSUsrMsg_ShowMenu::set_menu_string(const char* value, size_t size) {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  menu_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_ShowMenu::mutable_menu_string() {
  set_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    menu_string_ = new ::std::string;
  }
  return menu_string_;
}
inline ::std::string* CCSUsrMsg_ShowMenu::release_menu_string() {
  clear_has_menu_string();
  if (menu_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = menu_string_;
    menu_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_ShowMenu::set_allocated_menu_string(::std::string* menu_string) {
  if (menu_string_ != &::google::protobuf::internal::kEmptyString) {
    delete menu_string_;
  }
  if (menu_string) {
    set_has_menu_string();
    menu_string_ = menu_string;
  } else {
    clear_has_menu_string();
    menu_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_BarTime

// optional string time = 1;
inline bool CCSUsrMsg_BarTime::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_BarTime::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_BarTime::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_BarTime::clear_time() {
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    time_->clear();
  }
  clear_has_time();
}
inline const ::std::string& CCSUsrMsg_BarTime::time() const {
  return *time_;
}
inline void CCSUsrMsg_BarTime::set_time(const ::std::string& value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void CCSUsrMsg_BarTime::set_time(const char* value) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(value);
}
inline void CCSUsrMsg_BarTime::set_time(const char* value, size_t size) {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_BarTime::mutable_time() {
  set_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    time_ = new ::std::string;
  }
  return time_;
}
inline ::std::string* CCSUsrMsg_BarTime::release_time() {
  clear_has_time();
  if (time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = time_;
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_BarTime::set_allocated_time(::std::string* time) {
  if (time_ != &::google::protobuf::internal::kEmptyString) {
    delete time_;
  }
  if (time) {
    set_has_time();
    time_ = time;
  } else {
    clear_has_time();
    time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_AmmoDenied

// optional int32 ammoIdx = 1;
inline bool CCSUsrMsg_AmmoDenied::has_ammoidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_AmmoDenied::set_has_ammoidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_AmmoDenied::clear_has_ammoidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_AmmoDenied::clear_ammoidx() {
  ammoidx_ = 0;
  clear_has_ammoidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_AmmoDenied::ammoidx() const {
  return ammoidx_;
}
inline void CCSUsrMsg_AmmoDenied::set_ammoidx(::google::protobuf::int32 value) {
  set_has_ammoidx();
  ammoidx_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_MarkAchievement

// optional string achievement = 1;
inline bool CCSUsrMsg_MarkAchievement::has_achievement() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_MarkAchievement::set_has_achievement() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_MarkAchievement::clear_has_achievement() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_MarkAchievement::clear_achievement() {
  if (achievement_ != &::google::protobuf::internal::kEmptyString) {
    achievement_->clear();
  }
  clear_has_achievement();
}
inline const ::std::string& CCSUsrMsg_MarkAchievement::achievement() const {
  return *achievement_;
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const ::std::string& value) {
  set_has_achievement();
  if (achievement_ == &::google::protobuf::internal::kEmptyString) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(value);
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value) {
  set_has_achievement();
  if (achievement_ == &::google::protobuf::internal::kEmptyString) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(value);
}
inline void CCSUsrMsg_MarkAchievement::set_achievement(const char* value, size_t size) {
  set_has_achievement();
  if (achievement_ == &::google::protobuf::internal::kEmptyString) {
    achievement_ = new ::std::string;
  }
  achievement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_MarkAchievement::mutable_achievement() {
  set_has_achievement();
  if (achievement_ == &::google::protobuf::internal::kEmptyString) {
    achievement_ = new ::std::string;
  }
  return achievement_;
}
inline ::std::string* CCSUsrMsg_MarkAchievement::release_achievement() {
  clear_has_achievement();
  if (achievement_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = achievement_;
    achievement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_MarkAchievement::set_allocated_achievement(::std::string* achievement) {
  if (achievement_ != &::google::protobuf::internal::kEmptyString) {
    delete achievement_;
  }
  if (achievement) {
    set_has_achievement();
    achievement_ = achievement;
  } else {
    clear_has_achievement();
    achievement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_MatchStatsUpdate

// optional string update = 1;
inline bool CCSUsrMsg_MatchStatsUpdate::has_update() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_MatchStatsUpdate::set_has_update() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_MatchStatsUpdate::clear_has_update() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_MatchStatsUpdate::clear_update() {
  if (update_ != &::google::protobuf::internal::kEmptyString) {
    update_->clear();
  }
  clear_has_update();
}
inline const ::std::string& CCSUsrMsg_MatchStatsUpdate::update() const {
  return *update_;
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const ::std::string& value) {
  set_has_update();
  if (update_ == &::google::protobuf::internal::kEmptyString) {
    update_ = new ::std::string;
  }
  update_->assign(value);
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value) {
  set_has_update();
  if (update_ == &::google::protobuf::internal::kEmptyString) {
    update_ = new ::std::string;
  }
  update_->assign(value);
}
inline void CCSUsrMsg_MatchStatsUpdate::set_update(const char* value, size_t size) {
  set_has_update();
  if (update_ == &::google::protobuf::internal::kEmptyString) {
    update_ = new ::std::string;
  }
  update_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_MatchStatsUpdate::mutable_update() {
  set_has_update();
  if (update_ == &::google::protobuf::internal::kEmptyString) {
    update_ = new ::std::string;
  }
  return update_;
}
inline ::std::string* CCSUsrMsg_MatchStatsUpdate::release_update() {
  clear_has_update();
  if (update_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = update_;
    update_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_MatchStatsUpdate::set_allocated_update(::std::string* update) {
  if (update_ != &::google::protobuf::internal::kEmptyString) {
    delete update_;
  }
  if (update) {
    set_has_update();
    update_ = update;
  } else {
    clear_has_update();
    update_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_ItemDrop

// optional int64 itemid = 1;
inline bool CCSUsrMsg_ItemDrop::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ItemDrop::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ItemDrop::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ItemDrop::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 CCSUsrMsg_ItemDrop::itemid() const {
  return itemid_;
}
inline void CCSUsrMsg_ItemDrop::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional bool death = 2;
inline bool CCSUsrMsg_ItemDrop::has_death() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_ItemDrop::set_has_death() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_ItemDrop::clear_has_death() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_ItemDrop::clear_death() {
  death_ = false;
  clear_has_death();
}
inline bool CCSUsrMsg_ItemDrop::death() const {
  return death_;
}
inline void CCSUsrMsg_ItemDrop::set_death(bool value) {
  set_has_death();
  death_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_GlowPropTurnOff

// optional int32 entidx = 1;
inline bool CCSUsrMsg_GlowPropTurnOff::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_GlowPropTurnOff::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_GlowPropTurnOff::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_GlowPropTurnOff::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_GlowPropTurnOff::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_GlowPropTurnOff::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RoundBackupFilenames

// optional int32 count = 1;
inline bool CCSUsrMsg_RoundBackupFilenames::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::count() const {
  return count_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional int32 index = 2;
inline bool CCSUsrMsg_RoundBackupFilenames::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CCSUsrMsg_RoundBackupFilenames::index() const {
  return index_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional string filename = 3;
inline bool CCSUsrMsg_RoundBackupFilenames::has_filename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_filename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_filename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CCSUsrMsg_RoundBackupFilenames::filename() const {
  return *filename_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CCSUsrMsg_RoundBackupFilenames::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string nicename = 4;
inline bool CCSUsrMsg_RoundBackupFilenames::has_nicename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_has_nicename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_has_nicename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_RoundBackupFilenames::clear_nicename() {
  if (nicename_ != &::google::protobuf::internal::kEmptyString) {
    nicename_->clear();
  }
  clear_has_nicename();
}
inline const ::std::string& CCSUsrMsg_RoundBackupFilenames::nicename() const {
  return *nicename_;
}
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const ::std::string& value) {
  set_has_nicename();
  if (nicename_ == &::google::protobuf::internal::kEmptyString) {
    nicename_ = new ::std::string;
  }
  nicename_->assign(value);
}
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value) {
  set_has_nicename();
  if (nicename_ == &::google::protobuf::internal::kEmptyString) {
    nicename_ = new ::std::string;
  }
  nicename_->assign(value);
}
inline void CCSUsrMsg_RoundBackupFilenames::set_nicename(const char* value, size_t size) {
  set_has_nicename();
  if (nicename_ == &::google::protobuf::internal::kEmptyString) {
    nicename_ = new ::std::string;
  }
  nicename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::mutable_nicename() {
  set_has_nicename();
  if (nicename_ == &::google::protobuf::internal::kEmptyString) {
    nicename_ = new ::std::string;
  }
  return nicename_;
}
inline ::std::string* CCSUsrMsg_RoundBackupFilenames::release_nicename() {
  clear_has_nicename();
  if (nicename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nicename_;
    nicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_RoundBackupFilenames::set_allocated_nicename(::std::string* nicename) {
  if (nicename_ != &::google::protobuf::internal::kEmptyString) {
    delete nicename_;
  }
  if (nicename) {
    set_has_nicename();
    nicename_ = nicename;
  } else {
    clear_has_nicename();
    nicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// XpProgressData

// optional uint32 xp_points = 1;
inline bool XpProgressData::has_xp_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void XpProgressData::set_has_xp_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void XpProgressData::clear_has_xp_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void XpProgressData::clear_xp_points() {
  xp_points_ = 0u;
  clear_has_xp_points();
}
inline ::google::protobuf::uint32 XpProgressData::xp_points() const {
  return xp_points_;
}
inline void XpProgressData::set_xp_points(::google::protobuf::uint32 value) {
  set_has_xp_points();
  xp_points_ = value;
}

// optional int32 xp_category = 2;
inline bool XpProgressData::has_xp_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void XpProgressData::set_has_xp_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void XpProgressData::clear_has_xp_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void XpProgressData::clear_xp_category() {
  xp_category_ = 0;
  clear_has_xp_category();
}
inline ::google::protobuf::int32 XpProgressData::xp_category() const {
  return xp_category_;
}
inline void XpProgressData::set_xp_category(::google::protobuf::int32 value) {
  set_has_xp_category();
  xp_category_ = value;
}

// -------------------------------------------------------------------

// CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded

// repeated .XpProgressData xp_progress_data = 1;
inline int CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::xp_progress_data_size() const {
  return xp_progress_data_.size();
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_xp_progress_data() {
  xp_progress_data_.Clear();
}
inline const ::XpProgressData& CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::xp_progress_data(int index) const {
  return xp_progress_data_.Get(index);
}
inline ::XpProgressData* CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::mutable_xp_progress_data(int index) {
  return xp_progress_data_.Mutable(index);
}
inline ::XpProgressData* CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::add_xp_progress_data() {
  return xp_progress_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::XpProgressData >&
CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::xp_progress_data() const {
  return xp_progress_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::XpProgressData >*
CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::mutable_xp_progress_data() {
  return &xp_progress_data_;
}

// optional uint32 account_id = 2;
inline bool CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::account_id() const {
  return account_id_;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
}

// optional uint32 current_xp = 3;
inline bool CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::has_current_xp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_has_current_xp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_has_current_xp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_current_xp() {
  current_xp_ = 0u;
  clear_has_current_xp();
}
inline ::google::protobuf::uint32 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::current_xp() const {
  return current_xp_;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_current_xp(::google::protobuf::uint32 value) {
  set_has_current_xp();
  current_xp_ = value;
}

// optional uint32 current_level = 4;
inline bool CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::has_current_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_has_current_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_has_current_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_current_level() {
  current_level_ = 0u;
  clear_has_current_level();
}
inline ::google::protobuf::uint32 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::current_level() const {
  return current_level_;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_current_level(::google::protobuf::uint32 value) {
  set_has_current_level();
  current_level_ = value;
}

// optional uint32 upgraded_defidx = 5;
inline bool CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::has_upgraded_defidx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_has_upgraded_defidx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_has_upgraded_defidx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_upgraded_defidx() {
  upgraded_defidx_ = 0u;
  clear_has_upgraded_defidx();
}
inline ::google::protobuf::uint32 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::upgraded_defidx() const {
  return upgraded_defidx_;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_upgraded_defidx(::google::protobuf::uint32 value) {
  set_has_upgraded_defidx();
  upgraded_defidx_ = value;
}

// optional uint32 operation_points_awarded = 6;
inline bool CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::has_operation_points_awarded() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_has_operation_points_awarded() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_has_operation_points_awarded() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::clear_operation_points_awarded() {
  operation_points_awarded_ = 0u;
  clear_has_operation_points_awarded();
}
inline ::google::protobuf::uint32 CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::operation_points_awarded() const {
  return operation_points_awarded_;
}
inline void CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::set_operation_points_awarded(::google::protobuf::uint32 value) {
  set_has_operation_points_awarded();
  operation_points_awarded_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_XpUpdate

// optional .CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded data = 1;
inline bool CCSUsrMsg_XpUpdate::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_XpUpdate::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_XpUpdate::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_XpUpdate::clear_data() {
  if (data_ != NULL) data_->::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded::Clear();
  clear_has_data();
}
inline const ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded& CCSUsrMsg_XpUpdate::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded;
  return data_;
}
inline ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* CCSUsrMsg_XpUpdate::release_data() {
  clear_has_data();
  ::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CCSUsrMsg_XpUpdate::set_allocated_data(::CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_QuestProgress

// optional uint32 quest_id = 1;
inline bool CCSUsrMsg_QuestProgress::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_QuestProgress::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_QuestProgress::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_QuestProgress::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CCSUsrMsg_QuestProgress::quest_id() const {
  return quest_id_;
}
inline void CCSUsrMsg_QuestProgress::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// optional uint32 normal_points = 2;
inline bool CCSUsrMsg_QuestProgress::has_normal_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_QuestProgress::set_has_normal_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_QuestProgress::clear_has_normal_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_QuestProgress::clear_normal_points() {
  normal_points_ = 0u;
  clear_has_normal_points();
}
inline ::google::protobuf::uint32 CCSUsrMsg_QuestProgress::normal_points() const {
  return normal_points_;
}
inline void CCSUsrMsg_QuestProgress::set_normal_points(::google::protobuf::uint32 value) {
  set_has_normal_points();
  normal_points_ = value;
}

// optional uint32 bonus_points = 3;
inline bool CCSUsrMsg_QuestProgress::has_bonus_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_QuestProgress::set_has_bonus_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_QuestProgress::clear_has_bonus_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_QuestProgress::clear_bonus_points() {
  bonus_points_ = 0u;
  clear_has_bonus_points();
}
inline ::google::protobuf::uint32 CCSUsrMsg_QuestProgress::bonus_points() const {
  return bonus_points_;
}
inline void CCSUsrMsg_QuestProgress::set_bonus_points(::google::protobuf::uint32 value) {
  set_has_bonus_points();
  bonus_points_ = value;
}

// optional bool is_event_quest = 4;
inline bool CCSUsrMsg_QuestProgress::has_is_event_quest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_QuestProgress::set_has_is_event_quest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_QuestProgress::clear_has_is_event_quest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_QuestProgress::clear_is_event_quest() {
  is_event_quest_ = false;
  clear_has_is_event_quest();
}
inline bool CCSUsrMsg_QuestProgress::is_event_quest() const {
  return is_event_quest_;
}
inline void CCSUsrMsg_QuestProgress::set_is_event_quest(bool value) {
  set_has_is_event_quest();
  is_event_quest_ = value;
}

// -------------------------------------------------------------------

// ScoreLeaderboardData_Entry

// optional uint32 tag = 1;
inline bool ScoreLeaderboardData_Entry::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreLeaderboardData_Entry::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreLeaderboardData_Entry::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreLeaderboardData_Entry::clear_tag() {
  tag_ = 0u;
  clear_has_tag();
}
inline ::google::protobuf::uint32 ScoreLeaderboardData_Entry::tag() const {
  return tag_;
}
inline void ScoreLeaderboardData_Entry::set_tag(::google::protobuf::uint32 value) {
  set_has_tag();
  tag_ = value;
}

// optional uint32 val = 2;
inline bool ScoreLeaderboardData_Entry::has_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreLeaderboardData_Entry::set_has_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreLeaderboardData_Entry::clear_has_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreLeaderboardData_Entry::clear_val() {
  val_ = 0u;
  clear_has_val();
}
inline ::google::protobuf::uint32 ScoreLeaderboardData_Entry::val() const {
  return val_;
}
inline void ScoreLeaderboardData_Entry::set_val(::google::protobuf::uint32 value) {
  set_has_val();
  val_ = value;
}

// -------------------------------------------------------------------

// ScoreLeaderboardData_AccountEntries

// optional uint32 accountid = 1;
inline bool ScoreLeaderboardData_AccountEntries::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreLeaderboardData_AccountEntries::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreLeaderboardData_AccountEntries::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreLeaderboardData_AccountEntries::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 ScoreLeaderboardData_AccountEntries::accountid() const {
  return accountid_;
}
inline void ScoreLeaderboardData_AccountEntries::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// repeated .ScoreLeaderboardData.Entry entries = 2;
inline int ScoreLeaderboardData_AccountEntries::entries_size() const {
  return entries_.size();
}
inline void ScoreLeaderboardData_AccountEntries::clear_entries() {
  entries_.Clear();
}
inline const ::ScoreLeaderboardData_Entry& ScoreLeaderboardData_AccountEntries::entries(int index) const {
  return entries_.Get(index);
}
inline ::ScoreLeaderboardData_Entry* ScoreLeaderboardData_AccountEntries::mutable_entries(int index) {
  return entries_.Mutable(index);
}
inline ::ScoreLeaderboardData_Entry* ScoreLeaderboardData_AccountEntries::add_entries() {
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >&
ScoreLeaderboardData_AccountEntries::entries() const {
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >*
ScoreLeaderboardData_AccountEntries::mutable_entries() {
  return &entries_;
}

// -------------------------------------------------------------------

// ScoreLeaderboardData

// optional uint64 quest_id = 1;
inline bool ScoreLeaderboardData::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreLeaderboardData::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreLeaderboardData::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreLeaderboardData::clear_quest_id() {
  quest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_quest_id();
}
inline ::google::protobuf::uint64 ScoreLeaderboardData::quest_id() const {
  return quest_id_;
}
inline void ScoreLeaderboardData::set_quest_id(::google::protobuf::uint64 value) {
  set_has_quest_id();
  quest_id_ = value;
}

// optional uint32 score = 2;
inline bool ScoreLeaderboardData::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScoreLeaderboardData::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScoreLeaderboardData::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScoreLeaderboardData::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 ScoreLeaderboardData::score() const {
  return score_;
}
inline void ScoreLeaderboardData::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
}

// repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;
inline int ScoreLeaderboardData::accountentries_size() const {
  return accountentries_.size();
}
inline void ScoreLeaderboardData::clear_accountentries() {
  accountentries_.Clear();
}
inline const ::ScoreLeaderboardData_AccountEntries& ScoreLeaderboardData::accountentries(int index) const {
  return accountentries_.Get(index);
}
inline ::ScoreLeaderboardData_AccountEntries* ScoreLeaderboardData::mutable_accountentries(int index) {
  return accountentries_.Mutable(index);
}
inline ::ScoreLeaderboardData_AccountEntries* ScoreLeaderboardData::add_accountentries() {
  return accountentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_AccountEntries >&
ScoreLeaderboardData::accountentries() const {
  return accountentries_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_AccountEntries >*
ScoreLeaderboardData::mutable_accountentries() {
  return &accountentries_;
}

// repeated .ScoreLeaderboardData.Entry matchentries = 5;
inline int ScoreLeaderboardData::matchentries_size() const {
  return matchentries_.size();
}
inline void ScoreLeaderboardData::clear_matchentries() {
  matchentries_.Clear();
}
inline const ::ScoreLeaderboardData_Entry& ScoreLeaderboardData::matchentries(int index) const {
  return matchentries_.Get(index);
}
inline ::ScoreLeaderboardData_Entry* ScoreLeaderboardData::mutable_matchentries(int index) {
  return matchentries_.Mutable(index);
}
inline ::ScoreLeaderboardData_Entry* ScoreLeaderboardData::add_matchentries() {
  return matchentries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >&
ScoreLeaderboardData::matchentries() const {
  return matchentries_;
}
inline ::google::protobuf::RepeatedPtrField< ::ScoreLeaderboardData_Entry >*
ScoreLeaderboardData::mutable_matchentries() {
  return &matchentries_;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ScoreLeaderboardData

// optional .ScoreLeaderboardData data = 1;
inline bool CCSUsrMsg_ScoreLeaderboardData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ScoreLeaderboardData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ScoreLeaderboardData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ScoreLeaderboardData::clear_data() {
  if (data_ != NULL) data_->::ScoreLeaderboardData::Clear();
  clear_has_data();
}
inline const ::ScoreLeaderboardData& CCSUsrMsg_ScoreLeaderboardData::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::ScoreLeaderboardData;
  return data_;
}
inline ::ScoreLeaderboardData* CCSUsrMsg_ScoreLeaderboardData::release_data() {
  clear_has_data();
  ::ScoreLeaderboardData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CCSUsrMsg_ScoreLeaderboardData::set_allocated_data(::ScoreLeaderboardData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// PlayerDecalDigitalSignature

// optional bytes signature = 1;
inline bool PlayerDecalDigitalSignature::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_signature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerDecalDigitalSignature::clear_has_signature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerDecalDigitalSignature::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& PlayerDecalDigitalSignature::signature() const {
  return *signature_;
}
inline void PlayerDecalDigitalSignature::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerDecalDigitalSignature::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerDecalDigitalSignature::set_signature(const void* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerDecalDigitalSignature::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* PlayerDecalDigitalSignature::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerDecalDigitalSignature::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 accountid = 2;
inline bool PlayerDecalDigitalSignature::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerDecalDigitalSignature::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerDecalDigitalSignature::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::accountid() const {
  return accountid_;
}
inline void PlayerDecalDigitalSignature::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 rtime = 3;
inline bool PlayerDecalDigitalSignature::has_rtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_rtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerDecalDigitalSignature::clear_has_rtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerDecalDigitalSignature::clear_rtime() {
  rtime_ = 0u;
  clear_has_rtime();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::rtime() const {
  return rtime_;
}
inline void PlayerDecalDigitalSignature::set_rtime(::google::protobuf::uint32 value) {
  set_has_rtime();
  rtime_ = value;
}

// repeated float endpos = 4;
inline int PlayerDecalDigitalSignature::endpos_size() const {
  return endpos_.size();
}
inline void PlayerDecalDigitalSignature::clear_endpos() {
  endpos_.Clear();
}
inline float PlayerDecalDigitalSignature::endpos(int index) const {
  return endpos_.Get(index);
}
inline void PlayerDecalDigitalSignature::set_endpos(int index, float value) {
  endpos_.Set(index, value);
}
inline void PlayerDecalDigitalSignature::add_endpos(float value) {
  endpos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PlayerDecalDigitalSignature::endpos() const {
  return endpos_;
}
inline ::google::protobuf::RepeatedField< float >*
PlayerDecalDigitalSignature::mutable_endpos() {
  return &endpos_;
}

// repeated float startpos = 5;
inline int PlayerDecalDigitalSignature::startpos_size() const {
  return startpos_.size();
}
inline void PlayerDecalDigitalSignature::clear_startpos() {
  startpos_.Clear();
}
inline float PlayerDecalDigitalSignature::startpos(int index) const {
  return startpos_.Get(index);
}
inline void PlayerDecalDigitalSignature::set_startpos(int index, float value) {
  startpos_.Set(index, value);
}
inline void PlayerDecalDigitalSignature::add_startpos(float value) {
  startpos_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PlayerDecalDigitalSignature::startpos() const {
  return startpos_;
}
inline ::google::protobuf::RepeatedField< float >*
PlayerDecalDigitalSignature::mutable_startpos() {
  return &startpos_;
}

// repeated float right = 6;
inline int PlayerDecalDigitalSignature::right_size() const {
  return right_.size();
}
inline void PlayerDecalDigitalSignature::clear_right() {
  right_.Clear();
}
inline float PlayerDecalDigitalSignature::right(int index) const {
  return right_.Get(index);
}
inline void PlayerDecalDigitalSignature::set_right(int index, float value) {
  right_.Set(index, value);
}
inline void PlayerDecalDigitalSignature::add_right(float value) {
  right_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PlayerDecalDigitalSignature::right() const {
  return right_;
}
inline ::google::protobuf::RepeatedField< float >*
PlayerDecalDigitalSignature::mutable_right() {
  return &right_;
}

// optional uint32 tx_defidx = 7;
inline bool PlayerDecalDigitalSignature::has_tx_defidx() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_tx_defidx() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerDecalDigitalSignature::clear_has_tx_defidx() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerDecalDigitalSignature::clear_tx_defidx() {
  tx_defidx_ = 0u;
  clear_has_tx_defidx();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::tx_defidx() const {
  return tx_defidx_;
}
inline void PlayerDecalDigitalSignature::set_tx_defidx(::google::protobuf::uint32 value) {
  set_has_tx_defidx();
  tx_defidx_ = value;
}

// optional int32 entindex = 8;
inline bool PlayerDecalDigitalSignature::has_entindex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_entindex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerDecalDigitalSignature::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerDecalDigitalSignature::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 PlayerDecalDigitalSignature::entindex() const {
  return entindex_;
}
inline void PlayerDecalDigitalSignature::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
}

// optional uint32 hitbox = 9;
inline bool PlayerDecalDigitalSignature::has_hitbox() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_hitbox() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerDecalDigitalSignature::clear_has_hitbox() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerDecalDigitalSignature::clear_hitbox() {
  hitbox_ = 0u;
  clear_has_hitbox();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::hitbox() const {
  return hitbox_;
}
inline void PlayerDecalDigitalSignature::set_hitbox(::google::protobuf::uint32 value) {
  set_has_hitbox();
  hitbox_ = value;
}

// optional float creationtime = 10;
inline bool PlayerDecalDigitalSignature::has_creationtime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_creationtime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerDecalDigitalSignature::clear_has_creationtime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerDecalDigitalSignature::clear_creationtime() {
  creationtime_ = 0;
  clear_has_creationtime();
}
inline float PlayerDecalDigitalSignature::creationtime() const {
  return creationtime_;
}
inline void PlayerDecalDigitalSignature::set_creationtime(float value) {
  set_has_creationtime();
  creationtime_ = value;
}

// optional uint32 equipslot = 11;
inline bool PlayerDecalDigitalSignature::has_equipslot() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_equipslot() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerDecalDigitalSignature::clear_has_equipslot() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerDecalDigitalSignature::clear_equipslot() {
  equipslot_ = 0u;
  clear_has_equipslot();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::equipslot() const {
  return equipslot_;
}
inline void PlayerDecalDigitalSignature::set_equipslot(::google::protobuf::uint32 value) {
  set_has_equipslot();
  equipslot_ = value;
}

// optional uint32 trace_id = 12;
inline bool PlayerDecalDigitalSignature::has_trace_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_trace_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerDecalDigitalSignature::clear_has_trace_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerDecalDigitalSignature::clear_trace_id() {
  trace_id_ = 0u;
  clear_has_trace_id();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::trace_id() const {
  return trace_id_;
}
inline void PlayerDecalDigitalSignature::set_trace_id(::google::protobuf::uint32 value) {
  set_has_trace_id();
  trace_id_ = value;
}

// repeated float normal = 13;
inline int PlayerDecalDigitalSignature::normal_size() const {
  return normal_.size();
}
inline void PlayerDecalDigitalSignature::clear_normal() {
  normal_.Clear();
}
inline float PlayerDecalDigitalSignature::normal(int index) const {
  return normal_.Get(index);
}
inline void PlayerDecalDigitalSignature::set_normal(int index, float value) {
  normal_.Set(index, value);
}
inline void PlayerDecalDigitalSignature::add_normal(float value) {
  normal_.Add(value);
}
inline const ::google::protobuf::RepeatedField< float >&
PlayerDecalDigitalSignature::normal() const {
  return normal_;
}
inline ::google::protobuf::RepeatedField< float >*
PlayerDecalDigitalSignature::mutable_normal() {
  return &normal_;
}

// optional uint32 tint_id = 14;
inline bool PlayerDecalDigitalSignature::has_tint_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerDecalDigitalSignature::set_has_tint_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerDecalDigitalSignature::clear_has_tint_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerDecalDigitalSignature::clear_tint_id() {
  tint_id_ = 0u;
  clear_has_tint_id();
}
inline ::google::protobuf::uint32 PlayerDecalDigitalSignature::tint_id() const {
  return tint_id_;
}
inline void PlayerDecalDigitalSignature::set_tint_id(::google::protobuf::uint32 value) {
  set_has_tint_id();
  tint_id_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_PlayerDecalDigitalSignature

// optional .PlayerDecalDigitalSignature data = 1;
inline bool CCSUsrMsg_PlayerDecalDigitalSignature::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::clear_data() {
  if (data_ != NULL) data_->::PlayerDecalDigitalSignature::Clear();
  clear_has_data();
}
inline const ::PlayerDecalDigitalSignature& CCSUsrMsg_PlayerDecalDigitalSignature::data() const {
  return data_ != NULL ? *data_ : *default_instance_->data_;
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::mutable_data() {
  set_has_data();
  if (data_ == NULL) data_ = new ::PlayerDecalDigitalSignature;
  return data_;
}
inline ::PlayerDecalDigitalSignature* CCSUsrMsg_PlayerDecalDigitalSignature::release_data() {
  clear_has_data();
  ::PlayerDecalDigitalSignature* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CCSUsrMsg_PlayerDecalDigitalSignature::set_allocated_data(::PlayerDecalDigitalSignature* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
}

// -------------------------------------------------------------------

// CCSUsrMsg_WeaponSound

// optional int32 entidx = 1;
inline bool CCSUsrMsg_WeaponSound::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_WeaponSound::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_WeaponSound::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_WeaponSound::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// optional float origin_x = 2;
inline bool CCSUsrMsg_WeaponSound::has_origin_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_origin_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_origin_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_WeaponSound::clear_origin_x() {
  origin_x_ = 0;
  clear_has_origin_x();
}
inline float CCSUsrMsg_WeaponSound::origin_x() const {
  return origin_x_;
}
inline void CCSUsrMsg_WeaponSound::set_origin_x(float value) {
  set_has_origin_x();
  origin_x_ = value;
}

// optional float origin_y = 3;
inline bool CCSUsrMsg_WeaponSound::has_origin_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_origin_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_origin_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_WeaponSound::clear_origin_y() {
  origin_y_ = 0;
  clear_has_origin_y();
}
inline float CCSUsrMsg_WeaponSound::origin_y() const {
  return origin_y_;
}
inline void CCSUsrMsg_WeaponSound::set_origin_y(float value) {
  set_has_origin_y();
  origin_y_ = value;
}

// optional float origin_z = 4;
inline bool CCSUsrMsg_WeaponSound::has_origin_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_origin_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_origin_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_WeaponSound::clear_origin_z() {
  origin_z_ = 0;
  clear_has_origin_z();
}
inline float CCSUsrMsg_WeaponSound::origin_z() const {
  return origin_z_;
}
inline void CCSUsrMsg_WeaponSound::set_origin_z(float value) {
  set_has_origin_z();
  origin_z_ = value;
}

// optional string sound = 5;
inline bool CCSUsrMsg_WeaponSound::has_sound() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_sound() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_sound() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_WeaponSound::clear_sound() {
  if (sound_ != &::google::protobuf::internal::kEmptyString) {
    sound_->clear();
  }
  clear_has_sound();
}
inline const ::std::string& CCSUsrMsg_WeaponSound::sound() const {
  return *sound_;
}
inline void CCSUsrMsg_WeaponSound::set_sound(const ::std::string& value) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::kEmptyString) {
    sound_ = new ::std::string;
  }
  sound_->assign(value);
}
inline void CCSUsrMsg_WeaponSound::set_sound(const char* value) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::kEmptyString) {
    sound_ = new ::std::string;
  }
  sound_->assign(value);
}
inline void CCSUsrMsg_WeaponSound::set_sound(const char* value, size_t size) {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::kEmptyString) {
    sound_ = new ::std::string;
  }
  sound_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CCSUsrMsg_WeaponSound::mutable_sound() {
  set_has_sound();
  if (sound_ == &::google::protobuf::internal::kEmptyString) {
    sound_ = new ::std::string;
  }
  return sound_;
}
inline ::std::string* CCSUsrMsg_WeaponSound::release_sound() {
  clear_has_sound();
  if (sound_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sound_;
    sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CCSUsrMsg_WeaponSound::set_allocated_sound(::std::string* sound) {
  if (sound_ != &::google::protobuf::internal::kEmptyString) {
    delete sound_;
  }
  if (sound) {
    set_has_sound();
    sound_ = sound;
  } else {
    clear_has_sound();
    sound_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional float timestamp = 6;
inline bool CCSUsrMsg_WeaponSound::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCSUsrMsg_WeaponSound::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCSUsrMsg_WeaponSound::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCSUsrMsg_WeaponSound::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline float CCSUsrMsg_WeaponSound::timestamp() const {
  return timestamp_;
}
inline void CCSUsrMsg_WeaponSound::set_timestamp(float value) {
  set_has_timestamp();
  timestamp_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_UpdateScreenHealthBar

// optional int32 entidx = 1;
inline bool CCSUsrMsg_UpdateScreenHealthBar::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_UpdateScreenHealthBar::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// optional float healthratio_old = 2;
inline bool CCSUsrMsg_UpdateScreenHealthBar::has_healthratio_old() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_has_healthratio_old() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_has_healthratio_old() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_healthratio_old() {
  healthratio_old_ = 0;
  clear_has_healthratio_old();
}
inline float CCSUsrMsg_UpdateScreenHealthBar::healthratio_old() const {
  return healthratio_old_;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_healthratio_old(float value) {
  set_has_healthratio_old();
  healthratio_old_ = value;
}

// optional float healthratio_new = 3;
inline bool CCSUsrMsg_UpdateScreenHealthBar::has_healthratio_new() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_has_healthratio_new() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_has_healthratio_new() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_healthratio_new() {
  healthratio_new_ = 0;
  clear_has_healthratio_new();
}
inline float CCSUsrMsg_UpdateScreenHealthBar::healthratio_new() const {
  return healthratio_new_;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_healthratio_new(float value) {
  set_has_healthratio_new();
  healthratio_new_ = value;
}

// optional int32 style = 4;
inline bool CCSUsrMsg_UpdateScreenHealthBar::has_style() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_has_style() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_has_style() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::clear_style() {
  style_ = 0;
  clear_has_style();
}
inline ::google::protobuf::int32 CCSUsrMsg_UpdateScreenHealthBar::style() const {
  return style_;
}
inline void CCSUsrMsg_UpdateScreenHealthBar::set_style(::google::protobuf::int32 value) {
  set_has_style();
  style_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_EntityOutlineHighlight

// optional int32 entidx = 1;
inline bool CCSUsrMsg_EntityOutlineHighlight::has_entidx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_EntityOutlineHighlight::set_has_entidx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_EntityOutlineHighlight::clear_has_entidx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_EntityOutlineHighlight::clear_entidx() {
  entidx_ = 0;
  clear_has_entidx();
}
inline ::google::protobuf::int32 CCSUsrMsg_EntityOutlineHighlight::entidx() const {
  return entidx_;
}
inline void CCSUsrMsg_EntityOutlineHighlight::set_entidx(::google::protobuf::int32 value) {
  set_has_entidx();
  entidx_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SSUI

// optional bool show = 1;
inline bool CCSUsrMsg_SSUI::has_show() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SSUI::set_has_show() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SSUI::clear_has_show() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SSUI::clear_show() {
  show_ = false;
  clear_has_show();
}
inline bool CCSUsrMsg_SSUI::show() const {
  return show_;
}
inline void CCSUsrMsg_SSUI::set_show(bool value) {
  set_has_show();
  show_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SurvivalStats_Fact

// optional int32 type = 1;
inline bool CCSUsrMsg_SurvivalStats_Fact::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Fact::type() const {
  return type_;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 display = 2;
inline bool CCSUsrMsg_SurvivalStats_Fact::has_display() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_has_display() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_has_display() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_display() {
  display_ = 0;
  clear_has_display();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Fact::display() const {
  return display_;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_display(::google::protobuf::int32 value) {
  set_has_display();
  display_ = value;
}

// optional int32 value = 3;
inline bool CCSUsrMsg_SurvivalStats_Fact::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Fact::value() const {
  return value_;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional float interestingness = 4;
inline bool CCSUsrMsg_SurvivalStats_Fact::has_interestingness() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_has_interestingness() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_has_interestingness() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SurvivalStats_Fact::clear_interestingness() {
  interestingness_ = 0;
  clear_has_interestingness();
}
inline float CCSUsrMsg_SurvivalStats_Fact::interestingness() const {
  return interestingness_;
}
inline void CCSUsrMsg_SurvivalStats_Fact::set_interestingness(float value) {
  set_has_interestingness();
  interestingness_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SurvivalStats_Placement

// optional uint64 xuid = 1;
inline bool CCSUsrMsg_SurvivalStats_Placement::has_xuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_has_xuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CCSUsrMsg_SurvivalStats_Placement::xuid() const {
  return xuid_;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
}

// optional int32 teamnumber = 2;
inline bool CCSUsrMsg_SurvivalStats_Placement::has_teamnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_has_teamnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_has_teamnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_teamnumber() {
  teamnumber_ = 0;
  clear_has_teamnumber();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Placement::teamnumber() const {
  return teamnumber_;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_teamnumber(::google::protobuf::int32 value) {
  set_has_teamnumber();
  teamnumber_ = value;
}

// optional int32 placement = 3;
inline bool CCSUsrMsg_SurvivalStats_Placement::has_placement() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_has_placement() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_has_placement() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Placement::clear_placement() {
  placement_ = 0;
  clear_has_placement();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Placement::placement() const {
  return placement_;
}
inline void CCSUsrMsg_SurvivalStats_Placement::set_placement(::google::protobuf::int32 value) {
  set_has_placement();
  placement_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SurvivalStats_Damage

// optional uint64 xuid = 1;
inline bool CCSUsrMsg_SurvivalStats_Damage::has_xuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_has_xuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CCSUsrMsg_SurvivalStats_Damage::xuid() const {
  return xuid_;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
}

// optional int32 to = 2;
inline bool CCSUsrMsg_SurvivalStats_Damage::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_to() {
  to_ = 0;
  clear_has_to();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Damage::to() const {
  return to_;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_to(::google::protobuf::int32 value) {
  set_has_to();
  to_ = value;
}

// optional int32 to_hits = 3;
inline bool CCSUsrMsg_SurvivalStats_Damage::has_to_hits() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_has_to_hits() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_has_to_hits() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_to_hits() {
  to_hits_ = 0;
  clear_has_to_hits();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Damage::to_hits() const {
  return to_hits_;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_to_hits(::google::protobuf::int32 value) {
  set_has_to_hits();
  to_hits_ = value;
}

// optional int32 from = 4;
inline bool CCSUsrMsg_SurvivalStats_Damage::has_from() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_has_from() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_has_from() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Damage::from() const {
  return from_;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// optional int32 from_hits = 5;
inline bool CCSUsrMsg_SurvivalStats_Damage::has_from_hits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_has_from_hits() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_has_from_hits() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_SurvivalStats_Damage::clear_from_hits() {
  from_hits_ = 0;
  clear_has_from_hits();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats_Damage::from_hits() const {
  return from_hits_;
}
inline void CCSUsrMsg_SurvivalStats_Damage::set_from_hits(::google::protobuf::int32 value) {
  set_has_from_hits();
  from_hits_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_SurvivalStats

// optional uint64 xuid = 1;
inline bool CCSUsrMsg_SurvivalStats::has_xuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_SurvivalStats::set_has_xuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats::clear_has_xuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_SurvivalStats::clear_xuid() {
  xuid_ = GOOGLE_ULONGLONG(0);
  clear_has_xuid();
}
inline ::google::protobuf::uint64 CCSUsrMsg_SurvivalStats::xuid() const {
  return xuid_;
}
inline void CCSUsrMsg_SurvivalStats::set_xuid(::google::protobuf::uint64 value) {
  set_has_xuid();
  xuid_ = value;
}

// repeated .CCSUsrMsg_SurvivalStats.Fact facts = 2;
inline int CCSUsrMsg_SurvivalStats::facts_size() const {
  return facts_.size();
}
inline void CCSUsrMsg_SurvivalStats::clear_facts() {
  facts_.Clear();
}
inline const ::CCSUsrMsg_SurvivalStats_Fact& CCSUsrMsg_SurvivalStats::facts(int index) const {
  return facts_.Get(index);
}
inline ::CCSUsrMsg_SurvivalStats_Fact* CCSUsrMsg_SurvivalStats::mutable_facts(int index) {
  return facts_.Mutable(index);
}
inline ::CCSUsrMsg_SurvivalStats_Fact* CCSUsrMsg_SurvivalStats::add_facts() {
  return facts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Fact >&
CCSUsrMsg_SurvivalStats::facts() const {
  return facts_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Fact >*
CCSUsrMsg_SurvivalStats::mutable_facts() {
  return &facts_;
}

// repeated .CCSUsrMsg_SurvivalStats.Placement users = 3;
inline int CCSUsrMsg_SurvivalStats::users_size() const {
  return users_.size();
}
inline void CCSUsrMsg_SurvivalStats::clear_users() {
  users_.Clear();
}
inline const ::CCSUsrMsg_SurvivalStats_Placement& CCSUsrMsg_SurvivalStats::users(int index) const {
  return users_.Get(index);
}
inline ::CCSUsrMsg_SurvivalStats_Placement* CCSUsrMsg_SurvivalStats::mutable_users(int index) {
  return users_.Mutable(index);
}
inline ::CCSUsrMsg_SurvivalStats_Placement* CCSUsrMsg_SurvivalStats::add_users() {
  return users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Placement >&
CCSUsrMsg_SurvivalStats::users() const {
  return users_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Placement >*
CCSUsrMsg_SurvivalStats::mutable_users() {
  return &users_;
}

// repeated .CCSUsrMsg_SurvivalStats.Damage damages = 5;
inline int CCSUsrMsg_SurvivalStats::damages_size() const {
  return damages_.size();
}
inline void CCSUsrMsg_SurvivalStats::clear_damages() {
  damages_.Clear();
}
inline const ::CCSUsrMsg_SurvivalStats_Damage& CCSUsrMsg_SurvivalStats::damages(int index) const {
  return damages_.Get(index);
}
inline ::CCSUsrMsg_SurvivalStats_Damage* CCSUsrMsg_SurvivalStats::mutable_damages(int index) {
  return damages_.Mutable(index);
}
inline ::CCSUsrMsg_SurvivalStats_Damage* CCSUsrMsg_SurvivalStats::add_damages() {
  return damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Damage >&
CCSUsrMsg_SurvivalStats::damages() const {
  return damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CCSUsrMsg_SurvivalStats_Damage >*
CCSUsrMsg_SurvivalStats::mutable_damages() {
  return &damages_;
}

// optional int32 ticknumber = 4;
inline bool CCSUsrMsg_SurvivalStats::has_ticknumber() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCSUsrMsg_SurvivalStats::set_has_ticknumber() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCSUsrMsg_SurvivalStats::clear_has_ticknumber() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCSUsrMsg_SurvivalStats::clear_ticknumber() {
  ticknumber_ = 0;
  clear_has_ticknumber();
}
inline ::google::protobuf::int32 CCSUsrMsg_SurvivalStats::ticknumber() const {
  return ticknumber_;
}
inline void CCSUsrMsg_SurvivalStats::set_ticknumber(::google::protobuf::int32 value) {
  set_has_ticknumber();
  ticknumber_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ResetHud

// optional bool reset = 1;
inline bool CCSUsrMsg_ResetHud::has_reset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ResetHud::set_has_reset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ResetHud::clear_has_reset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ResetHud::clear_reset() {
  reset_ = false;
  clear_has_reset();
}
inline bool CCSUsrMsg_ResetHud::reset() const {
  return reset_;
}
inline void CCSUsrMsg_ResetHud::set_reset(bool value) {
  set_has_reset();
  reset_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_GameTitle

// optional int32 dummy = 1;
inline bool CCSUsrMsg_GameTitle::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_GameTitle::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_GameTitle::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_GameTitle::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_GameTitle::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_GameTitle::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_RequestState

// optional int32 dummy = 1;
inline bool CCSUsrMsg_RequestState::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_RequestState::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_RequestState::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_RequestState::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_RequestState::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_RequestState::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_StopSpectatorMode

// optional int32 dummy = 1;
inline bool CCSUsrMsg_StopSpectatorMode::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_StopSpectatorMode::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_StopSpectatorMode::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_StopSpectatorMode::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_StopSpectatorMode::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_StopSpectatorMode::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_DisconnectToLobby

// optional int32 dummy = 1;
inline bool CCSUsrMsg_DisconnectToLobby::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_DisconnectToLobby::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_DisconnectToLobby::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_DisconnectToLobby::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_DisconnectToLobby::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_DisconnectToLobby::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_WarmupHasEnded

// optional int32 dummy = 1;
inline bool CCSUsrMsg_WarmupHasEnded::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_WarmupHasEnded::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_WarmupHasEnded::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_WarmupHasEnded::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_WarmupHasEnded::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_WarmupHasEnded::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ClientInfo

// optional int32 dummy = 1;
inline bool CCSUsrMsg_ClientInfo::has_dummy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ClientInfo::set_has_dummy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ClientInfo::clear_has_dummy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ClientInfo::clear_dummy() {
  dummy_ = 0;
  clear_has_dummy();
}
inline ::google::protobuf::int32 CCSUsrMsg_ClientInfo::dummy() const {
  return dummy_;
}
inline void CCSUsrMsg_ClientInfo::set_dummy(::google::protobuf::int32 value) {
  set_has_dummy();
  dummy_ = value;
}

// -------------------------------------------------------------------

// CCSUsrMsg_ServerRankRevealAll

// optional int32 seconds_till_shutdown = 1;
inline bool CCSUsrMsg_ServerRankRevealAll::has_seconds_till_shutdown() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCSUsrMsg_ServerRankRevealAll::set_has_seconds_till_shutdown() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCSUsrMsg_ServerRankRevealAll::clear_has_seconds_till_shutdown() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCSUsrMsg_ServerRankRevealAll::clear_seconds_till_shutdown() {
  seconds_till_shutdown_ = 0;
  clear_has_seconds_till_shutdown();
}
inline ::google::protobuf::int32 CCSUsrMsg_ServerRankRevealAll::seconds_till_shutdown() const {
  return seconds_till_shutdown_;
}
inline void CCSUsrMsg_ServerRankRevealAll::set_seconds_till_shutdown(::google::protobuf::int32 value) {
  set_has_seconds_till_shutdown();
  seconds_till_shutdown_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECstrike15UserMessages>() {
  return ::ECstrike15UserMessages_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECSUsrMsg_DisconnectToLobby_Action>() {
  return ::ECSUsrMsg_DisconnectToLobby_Action_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cstrike15_5fusermessages_2eproto__INCLUDED
